{
 "cells": [
  {
   "cell_type": "code",
   "execution_count": 13,
   "metadata": {
    "id": "xnia-guAUPaM"
   },
   "outputs": [],
   "source": [
    "import pandas as pd\n",
    "import numpy as np\n",
    "import matplotlib.pyplot as plt\n",
    "from sklearn.preprocessing import LabelEncoder\n",
    "from sklearn.cluster import KMeans\n",
    "from sklearn.decomposition import PCA\n",
    "from sklearn.metrics import silhouette_score\n",
    "from mlxtend.preprocessing import TransactionEncoder\n",
    "from mlxtend.frequent_patterns import apriori, association_rules\n",
    "from IPython.display import display\n",
    "from mlxtend.preprocessing import TransactionEncoder\n",
    "from sklearn.cluster import AgglomerativeClustering\n",
    "from scipy.cluster.hierarchy import dendrogram\n",
    "from utils import person_df, df_cluster_labels, descrip_dict, processlis, plot_dendrogram, Agglocls, AggloDendo, AggloPca, apriori_rules\n",
    "\n",
    "\n",
    "import itertools\n",
    "from importlib import reload\n",
    "plt=reload(plt)\n",
    "\n",
    "import warnings\n",
    "warnings.filterwarnings('ignore')"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 25,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>Unnamed: 0</th>\n",
       "      <th>InvoiceNo</th>\n",
       "      <th>Description</th>\n",
       "      <th>Quantity</th>\n",
       "      <th>UnitPrice</th>\n",
       "      <th>CustomerID</th>\n",
       "      <th>Country</th>\n",
       "      <th>time_intervals</th>\n",
       "      <th>year-month_intervals</th>\n",
       "      <th>Total Price</th>\n",
       "      <th>Money_bins</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>0</td>\n",
       "      <td>536365</td>\n",
       "      <td>WHITE HANGING HEART T-LIGHT HOLDER</td>\n",
       "      <td>6</td>\n",
       "      <td>2.55</td>\n",
       "      <td>4017</td>\n",
       "      <td>United Kingdom</td>\n",
       "      <td>04:00-07:59</td>\n",
       "      <td>0</td>\n",
       "      <td>15.30</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>1</td>\n",
       "      <td>536365</td>\n",
       "      <td>WHITE METAL LANTERN</td>\n",
       "      <td>6</td>\n",
       "      <td>3.39</td>\n",
       "      <td>4017</td>\n",
       "      <td>United Kingdom</td>\n",
       "      <td>04:00-07:59</td>\n",
       "      <td>0</td>\n",
       "      <td>20.34</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>2</td>\n",
       "      <td>536365</td>\n",
       "      <td>CREAM CUPID HEARTS COAT HANGER</td>\n",
       "      <td>8</td>\n",
       "      <td>2.75</td>\n",
       "      <td>4017</td>\n",
       "      <td>United Kingdom</td>\n",
       "      <td>04:00-07:59</td>\n",
       "      <td>0</td>\n",
       "      <td>22.00</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>3</td>\n",
       "      <td>536365</td>\n",
       "      <td>KNITTED UNION FLAG HOT WATER BOTTLE</td>\n",
       "      <td>6</td>\n",
       "      <td>3.39</td>\n",
       "      <td>4017</td>\n",
       "      <td>United Kingdom</td>\n",
       "      <td>04:00-07:59</td>\n",
       "      <td>0</td>\n",
       "      <td>20.34</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>4</td>\n",
       "      <td>536365</td>\n",
       "      <td>RED WOOLLY HOTTIE WHITE HEART.</td>\n",
       "      <td>6</td>\n",
       "      <td>3.39</td>\n",
       "      <td>4017</td>\n",
       "      <td>United Kingdom</td>\n",
       "      <td>04:00-07:59</td>\n",
       "      <td>0</td>\n",
       "      <td>20.34</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "   Unnamed: 0 InvoiceNo                          Description  Quantity  \\\n",
       "0           0    536365   WHITE HANGING HEART T-LIGHT HOLDER         6   \n",
       "1           1    536365                  WHITE METAL LANTERN         6   \n",
       "2           2    536365       CREAM CUPID HEARTS COAT HANGER         8   \n",
       "3           3    536365  KNITTED UNION FLAG HOT WATER BOTTLE         6   \n",
       "4           4    536365       RED WOOLLY HOTTIE WHITE HEART.         6   \n",
       "\n",
       "   UnitPrice  CustomerID         Country time_intervals  year-month_intervals  \\\n",
       "0       2.55        4017  United Kingdom    04:00-07:59                     0   \n",
       "1       3.39        4017  United Kingdom    04:00-07:59                     0   \n",
       "2       2.75        4017  United Kingdom    04:00-07:59                     0   \n",
       "3       3.39        4017  United Kingdom    04:00-07:59                     0   \n",
       "4       3.39        4017  United Kingdom    04:00-07:59                     0   \n",
       "\n",
       "   Total Price  Money_bins  \n",
       "0        15.30           0  \n",
       "1        20.34           0  \n",
       "2        22.00           0  \n",
       "3        20.34           0  \n",
       "4        20.34           0  "
      ]
     },
     "execution_count": 25,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "dff = pd.read_csv('C:/Users/91738/Online Retail Recommendation/input/dff.csv')\n",
    "dff = dff.drop(['StockCode'],axis=1)\n",
    "\n",
    "dff.head()"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {
    "id": "Fz5QU-BUaFGK"
   },
   "source": [
    "# CLUSTERING ON THE BASIS OF DATAFRAMES SPLIT BY MONTHS"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {
    "id": "HF-qQSt_k8zt"
   },
   "source": [
    "## For Dec 2010"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {
    "colab": {
     "base_uri": "https://localhost:8080/",
     "height": 478
    },
    "id": "grwqEB5BjTzm",
    "outputId": "e5f81411-def0-4bad-f816-9fc8b7f1a19b"
   },
   "outputs": [],
   "source": [
    "Rules_dict = {}\n",
    "Cluster_dict = {}\n",
    "og_dec2010 = df_list_month_intervals[0]\n",
    "\n",
    "dvt = person_df(og_dec2010)              # Our function gives such a dataframe by which we can form clusters using KMeans\n",
    "df_dec2010 = df_cluster_labels(dvt,3)\n",
    "\n",
    "silhte_score_dec2010 = silhouette_score(dvt, df_dec2010['cluster_labels'])\n",
    "print(\"The Silhouette Score is :- \"+str(silhte_score_dec2010))\n",
    "\n",
    "print(df_dec2010['cluster_labels'].value_counts())"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {
    "colab": {
     "base_uri": "https://localhost:8080/",
     "height": 478
    },
    "id": "wQ8LJ4AIayYr",
    "outputId": "8cacc524-bb3e-447c-a591-bbc278736d51"
   },
   "outputs": [],
   "source": [
    "#Thus Clusters 1 and 2 are outliers as they have very few datapoints(Customers)\n",
    "#So we remove them and then applyKMeans again\n",
    "#Thus\n",
    "\n",
    "df_dec2010 = df_dec2010[df_dec2010['cluster_labels']!=1]\n",
    "df_dec2010 = df_dec2010[df_dec2010['cluster_labels']!=2]\n",
    "\n",
    "#Thus the outliers are removed.\n",
    "#Now we again apply the clustering pipeline\n",
    "\n",
    "df_dec2010_person = df_dec2010.copy(deep=True)\n",
    "df_dec2010_person.drop(['cluster_labels'],axis=1,inplace=True)\n",
    "\n",
    "df_dec2010_new = df_cluster_labels(df_dec2010_person,3)\n",
    "\n",
    "silhte_score_dec2010_new = silhouette_score(df_dec2010_person, df_dec2010_new['cluster_labels'])\n",
    "print(\"The Silhouette Score is :- \"+str(silhte_score_dec2010_new))\n",
    "\n",
    "# Indicates that silhouette score is realistic for dataset without outliers\n",
    "\n",
    "df_dec2010_new['cluster_labels'].value_counts()\n",
    "#These are comparatively good clusters"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {
    "colab": {
     "base_uri": "https://localhost:8080/",
     "height": 472
    },
    "id": "MtDBJ7BeeOc-",
    "outputId": "452a8a14-7cc2-42aa-b20f-31c266ddac1d"
   },
   "outputs": [
    {
     "data": {
      "image/png": "",
      "text/plain": [
       "<Figure size 640x480 with 1 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "plt.scatter(df_dec2010_new['Avg_quant'], df_dec2010_new['Item_count'], c=df_dec2010_new['cluster_labels'], cmap='viridis')\n",
    "plt.title(\"For Dec 2010 (After removing outliers)\")\n",
    "plt.xlabel('Mean_purch')\n",
    "plt.ylabel('Sum_purch')\n",
    "plt.show()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {
    "colab": {
     "base_uri": "https://localhost:8080/"
    },
    "id": "NwpK4YD2fkLJ",
    "outputId": "deb46dc0-a577-483f-81c5-6016593b03ca"
   },
   "outputs": [
    {
     "data": {
      "text/plain": [
       "[     CustomerID                                        Description\n",
       " 0             1  [BLACK CANDELABRA T-LIGHT HOLDER, AIRLINE BAG ...\n",
       " 1             2  [72 SWEETHEART FAIRY CAKE CASES, 60 CAKE CASES...\n",
       " 2            20  [WHITE HANGING HEART T-LIGHT HOLDER, SPACE CAD...\n",
       " 3            26  [HOT WATER BOTTLE BABUSHKA LARGE, CHOCOLATE HO...\n",
       " 4            31  [SET/10 RED POLKADOT PARTY CANDLES, SET/10 PIN...\n",
       " ..          ...                                                ...\n",
       " 398        2226  [JAM MAKING SET WITH JARS, JAM MAKING SET PRIN...\n",
       " 399        2227                       [HAND OPEN SHAPE DECO.WHITE]\n",
       " 400        2230  [SKULL DESIGN TV DINNER TRAY, TV DINNER TRAY D...\n",
       " 401        2235  [DANISH ROSE ROUND SEWING BOX, 3 STRIPEY MICE ...\n",
       " 402        2237  [DOLLY GIRL LUNCH BOX, SPACEBOY LUNCH BOX , LU...\n",
       " \n",
       " [403 rows x 2 columns],\n",
       "      CustomerID                                        Description\n",
       " 0          2261  [CHOCOLATE HOT WATER BOTTLE, PAPER CHAIN KIT V...\n",
       " 1          2283  [RETROSPOT HEART HOT WATER BOTTLE, CHOCOLATE H...\n",
       " 2          2284  [TOOTHPASTE TUBE PEN, LIPSTICK PEN RED, CHOCOL...\n",
       " 3          2287  [BOUDOIR SQUARE TISSUE BOX, RECIPE BOX RETROSP...\n",
       " 4          2291  [DOORMAT FANCY FONT HOME SWEET HOME, DOORMAT S...\n",
       " ..          ...                                                ...\n",
       " 440        4306  [WHITE HANGING HEART T-LIGHT HOLDER, HANGING H...\n",
       " 441        4310  [VINTAGE PAISLEY STATIONERY SET, COLOURING PEN...\n",
       " 442        4319  [WICKER STAR , HEART OF WICKER LARGE, HAND WAR...\n",
       " 443        4320  [CHILLI LIGHTS, MEASURING TAPE BABUSHKA PINK, ...\n",
       " 444        4326  [HOT WATER BOTTLE BABUSHKA , RED TOADSTOOL LED...\n",
       " \n",
       " [445 rows x 2 columns]]"
      ]
     },
     "execution_count": 32,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "dec2010 = descrip_dict(og_dec2010,df_dec2010_new)\n",
    "dec2010 = processlis(dec2010)"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {
    "id": "76bT2FZ4w0k7"
   },
   "source": [
    "### Agglomerative Clustering"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {
    "colab": {
     "base_uri": "https://localhost:8080/",
     "height": 434
    },
    "id": "1NZkFAxMCxdL",
    "outputId": "d76e3bf1-b43c-4486-b596-258ee89e6d7b"
   },
   "outputs": [
    {
     "data": {
      "image/png": "",
      "text/plain": [
       "<Figure size 640x480 with 1 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "pca = PCA(n_components = 3)\n",
    "pca.fit(X = dvt)\n",
    "new_dvt = pca.transform(dvt)\n",
    "\n",
    "new_dvt = pd.DataFrame(data = new_dvt,columns = ['X0','X1','X2'])\n",
    "model = AgglomerativeClustering(distance_threshold=0, n_clusters=None, linkage='ward').fit(new_dvt)\n",
    "\n",
    "plot_dendrogram(model, truncate_mode=\"level\", p=4)\n",
    "new_dvt"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {
    "colab": {
     "base_uri": "https://localhost:8080/",
     "height": 497
    },
    "id": "7X37kVqEPRXi",
    "outputId": "a814787c-4d97-4d42-c799-3325c3acb26b"
   },
   "outputs": [
    {
     "data": {
      "image/png": "",
      "text/plain": [
       "<Figure size 500x500 with 1 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "(882, 4)\n",
      "(1, 4)\n",
      "(3, 4)\n"
     ]
    }
   ],
   "source": [
    "dict_dec2010 =  Agglocls(new_dvt,3)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {
    "colab": {
     "base_uri": "https://localhost:8080/",
     "height": 444
    },
    "id": "DXBi7Z29QJim",
    "outputId": "775e52a3-ee8e-4974-ae8e-4c84421d9c2c"
   },
   "outputs": [
    {
     "data": {
      "image/png": "",
      "text/plain": [
       "<Figure size 640x480 with 1 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "#Thus Clusters 1 and 2 are outliers as they have very few datapoints(Customers)\n",
    "#So we remove them and then apply KMeans again\n",
    "\n",
    "final_dvt = dict_dec2010[0]\n",
    "pca_dec2010_new = PCA(n_components = 3)\n",
    "pca_dec2010_new.fit(X = final_dvt)\n",
    "final_dvt = pca_dec2010_new.transform(final_dvt)\n",
    "final_dvt = pd.DataFrame(data = final_dvt,columns = ['X0','X1','X2'])\n",
    "AggloDendo(final_dvt)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {
    "colab": {
     "base_uri": "https://localhost:8080/",
     "height": 497
    },
    "id": "L4DG4V1sShBT",
    "outputId": "86bdd8ec-8cef-42a5-f816-9c31d943329e"
   },
   "outputs": [
    {
     "data": {
      "image/png": "",
      "text/plain": [
       "<Figure size 500x500 with 1 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "(548, 5)\n",
      "(311, 5)\n",
      "(23, 5)\n"
     ]
    }
   ],
   "source": [
    "dict_dec2010_final =  AggloPca(final_dvt,3,dvt,'X1','X0')"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {
    "id": "8OWntgxAdVKL"
   },
   "outputs": [],
   "source": [
    "dec2010_agg = descrip_dict(og_dec2010,final_dvt)\n",
    "dec2010_agg = processlis(dec2010_agg)\n",
    "\n",
    "Cluster_dict['dec2010'] = (len(dec2010),len(dec2010_agg))\n",
    "dicti_2010dec = {}\n",
    "klis = []\n",
    "for i in range(Cluster_dict['dec2010'][0]):\n",
    "  temp = apriori_rules(dec2010[i],0.075)\n",
    "  klis.append(temp)\n",
    "alis = []\n",
    "for i in range(Cluster_dict['dec2010'][1]):\n",
    "  temp = apriori_rules(dec2010[i],0.075)\n",
    "  alis.append(temp)\n",
    "\n",
    "dicti_2010dec['K-means'] = klis\n",
    "dicti_2010dec['Agglo'] = alis\n",
    "\n",
    "Rules_dict['dec2010'] = dicti_2010dec"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {
    "colab": {
     "base_uri": "https://localhost:8080/",
     "height": 557
    },
    "id": "ihCZjU4nQCkU",
    "outputId": "61126bb8-561d-4a26-a78d-c11245ee9bfa"
   },
   "outputs": [
    {
     "data": {
      "text/html": [
       "\n",
       "  <div id=\"df-48d98535-d3c1-414f-a036-8ddf83d11f84\">\n",
       "    <div class=\"colab-df-container\">\n",
       "      <div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>OVAL WALL MIRROR DIAMANTE</th>\n",
       "      <th>SET 2 TEA TOWELS I LOVE LONDON</th>\n",
       "      <th>10 COLOUR SPACEBOY PEN</th>\n",
       "      <th>12 COLOURED PARTY BALLOONS</th>\n",
       "      <th>12 IVORY ROSE PEG PLACE SETTINGS</th>\n",
       "      <th>12 MESSAGE CARDS WITH ENVELOPES</th>\n",
       "      <th>12 PENCIL SMALL TUBE WOODLAND</th>\n",
       "      <th>12 PENCILS SMALL TUBE RED RETROSPOT</th>\n",
       "      <th>12 PENCILS SMALL TUBE SKULL</th>\n",
       "      <th>12 PENCILS TALL TUBE POSY</th>\n",
       "      <th>...</th>\n",
       "      <th>YELLOW SHARK HELICOPTER</th>\n",
       "      <th>YELLOW/PINK FLOWER DESIGN BIG MUG</th>\n",
       "      <th>YOU'RE CONFUSING ME METAL SIGN</th>\n",
       "      <th>YULETIDE IMAGES GIFT WRAP SET</th>\n",
       "      <th>YULETIDE IMAGES S/6 PAPER BOXES</th>\n",
       "      <th>ZINC FINISH 15CM PLANTER POTS</th>\n",
       "      <th>ZINC HEART LATTICE T-LIGHT HOLDER</th>\n",
       "      <th>ZINC METAL HEART DECORATION</th>\n",
       "      <th>ZINC TOP  2 DOOR WOODEN SHELF</th>\n",
       "      <th>ZINC WILLIE WINKIE  CANDLE STICK</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>...</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>...</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>True</td>\n",
       "      <td>False</td>\n",
       "      <td>...</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>True</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>...</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>True</td>\n",
       "      <td>True</td>\n",
       "      <td>True</td>\n",
       "      <td>False</td>\n",
       "      <td>...</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>...</th>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>306</th>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>...</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>307</th>\n",
       "      <td>False</td>\n",
       "      <td>True</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>...</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>308</th>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>...</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>True</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>309</th>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>...</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>310</th>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>...</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>True</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "<p>311 rows × 1598 columns</p>\n",
       "</div>\n",
       "      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-48d98535-d3c1-414f-a036-8ddf83d11f84')\"\n",
       "              title=\"Convert this dataframe to an interactive table.\"\n",
       "              style=\"display:none;\">\n",
       "        \n",
       "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
       "       width=\"24px\">\n",
       "    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n",
       "    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n",
       "  </svg>\n",
       "      </button>\n",
       "      \n",
       "  <style>\n",
       "    .colab-df-container {\n",
       "      display:flex;\n",
       "      flex-wrap:wrap;\n",
       "      gap: 12px;\n",
       "    }\n",
       "\n",
       "    .colab-df-convert {\n",
       "      background-color: #E8F0FE;\n",
       "      border: none;\n",
       "      border-radius: 50%;\n",
       "      cursor: pointer;\n",
       "      display: none;\n",
       "      fill: #1967D2;\n",
       "      height: 32px;\n",
       "      padding: 0 0 0 0;\n",
       "      width: 32px;\n",
       "    }\n",
       "\n",
       "    .colab-df-convert:hover {\n",
       "      background-color: #E2EBFA;\n",
       "      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
       "      fill: #174EA6;\n",
       "    }\n",
       "\n",
       "    [theme=dark] .colab-df-convert {\n",
       "      background-color: #3B4455;\n",
       "      fill: #D2E3FC;\n",
       "    }\n",
       "\n",
       "    [theme=dark] .colab-df-convert:hover {\n",
       "      background-color: #434B5C;\n",
       "      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
       "      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
       "      fill: #FFFFFF;\n",
       "    }\n",
       "  </style>\n",
       "\n",
       "      <script>\n",
       "        const buttonEl =\n",
       "          document.querySelector('#df-48d98535-d3c1-414f-a036-8ddf83d11f84 button.colab-df-convert');\n",
       "        buttonEl.style.display =\n",
       "          google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
       "\n",
       "        async function convertToInteractive(key) {\n",
       "          const element = document.querySelector('#df-48d98535-d3c1-414f-a036-8ddf83d11f84');\n",
       "          const dataTable =\n",
       "            await google.colab.kernel.invokeFunction('convertToInteractive',\n",
       "                                                     [key], {});\n",
       "          if (!dataTable) return;\n",
       "\n",
       "          const docLinkHtml = 'Like what you see? Visit the ' +\n",
       "            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n",
       "            + ' to learn more about interactive tables.';\n",
       "          element.innerHTML = '';\n",
       "          dataTable['output_type'] = 'display_data';\n",
       "          await google.colab.output.renderOutput(dataTable, element);\n",
       "          const docLink = document.createElement('div');\n",
       "          docLink.innerHTML = docLinkHtml;\n",
       "          element.appendChild(docLink);\n",
       "        }\n",
       "      </script>\n",
       "    </div>\n",
       "  </div>\n",
       "  "
      ],
      "text/plain": [
       "      OVAL WALL MIRROR DIAMANTE    SET 2 TEA TOWELS I LOVE LONDON   \\\n",
       "0                          False                             False   \n",
       "1                          False                             False   \n",
       "2                          False                             False   \n",
       "3                          False                             False   \n",
       "4                          False                             False   \n",
       "..                           ...                               ...   \n",
       "306                        False                             False   \n",
       "307                        False                              True   \n",
       "308                        False                             False   \n",
       "309                        False                             False   \n",
       "310                        False                             False   \n",
       "\n",
       "     10 COLOUR SPACEBOY PEN  12 COLOURED PARTY BALLOONS  \\\n",
       "0                     False                       False   \n",
       "1                     False                       False   \n",
       "2                     False                       False   \n",
       "3                     False                       False   \n",
       "4                     False                       False   \n",
       "..                      ...                         ...   \n",
       "306                   False                       False   \n",
       "307                   False                       False   \n",
       "308                   False                       False   \n",
       "309                   False                       False   \n",
       "310                   False                       False   \n",
       "\n",
       "     12 IVORY ROSE PEG PLACE SETTINGS  12 MESSAGE CARDS WITH ENVELOPES  \\\n",
       "0                               False                            False   \n",
       "1                               False                            False   \n",
       "2                               False                            False   \n",
       "3                               False                            False   \n",
       "4                               False                            False   \n",
       "..                                ...                              ...   \n",
       "306                             False                            False   \n",
       "307                             False                            False   \n",
       "308                             False                            False   \n",
       "309                             False                            False   \n",
       "310                             False                            False   \n",
       "\n",
       "     12 PENCIL SMALL TUBE WOODLAND  12 PENCILS SMALL TUBE RED RETROSPOT  \\\n",
       "0                            False                                False   \n",
       "1                            False                                False   \n",
       "2                            False                                False   \n",
       "3                            False                                False   \n",
       "4                             True                                 True   \n",
       "..                             ...                                  ...   \n",
       "306                          False                                False   \n",
       "307                          False                                False   \n",
       "308                          False                                False   \n",
       "309                          False                                False   \n",
       "310                          False                                False   \n",
       "\n",
       "     12 PENCILS SMALL TUBE SKULL  12 PENCILS TALL TUBE POSY  ...  \\\n",
       "0                          False                      False  ...   \n",
       "1                          False                      False  ...   \n",
       "2                           True                      False  ...   \n",
       "3                          False                      False  ...   \n",
       "4                           True                      False  ...   \n",
       "..                           ...                        ...  ...   \n",
       "306                        False                      False  ...   \n",
       "307                        False                      False  ...   \n",
       "308                        False                      False  ...   \n",
       "309                        False                      False  ...   \n",
       "310                        False                      False  ...   \n",
       "\n",
       "     YELLOW SHARK HELICOPTER  YELLOW/PINK FLOWER DESIGN BIG MUG  \\\n",
       "0                      False                              False   \n",
       "1                      False                              False   \n",
       "2                      False                              False   \n",
       "3                      False                              False   \n",
       "4                      False                              False   \n",
       "..                       ...                                ...   \n",
       "306                    False                              False   \n",
       "307                    False                              False   \n",
       "308                    False                              False   \n",
       "309                    False                              False   \n",
       "310                    False                              False   \n",
       "\n",
       "     YOU'RE CONFUSING ME METAL SIGN   YULETIDE IMAGES GIFT WRAP SET  \\\n",
       "0                              False                          False   \n",
       "1                              False                          False   \n",
       "2                              False                          False   \n",
       "3                              False                          False   \n",
       "4                              False                          False   \n",
       "..                               ...                            ...   \n",
       "306                            False                          False   \n",
       "307                            False                          False   \n",
       "308                             True                          False   \n",
       "309                            False                          False   \n",
       "310                             True                          False   \n",
       "\n",
       "     YULETIDE IMAGES S/6 PAPER BOXES  ZINC FINISH 15CM PLANTER POTS  \\\n",
       "0                              False                          False   \n",
       "1                              False                          False   \n",
       "2                              False                          False   \n",
       "3                              False                          False   \n",
       "4                              False                          False   \n",
       "..                               ...                            ...   \n",
       "306                            False                          False   \n",
       "307                            False                          False   \n",
       "308                            False                          False   \n",
       "309                            False                          False   \n",
       "310                            False                          False   \n",
       "\n",
       "     ZINC HEART LATTICE T-LIGHT HOLDER  ZINC METAL HEART DECORATION  \\\n",
       "0                                False                        False   \n",
       "1                                False                        False   \n",
       "2                                 True                        False   \n",
       "3                                False                        False   \n",
       "4                                False                        False   \n",
       "..                                 ...                          ...   \n",
       "306                              False                        False   \n",
       "307                              False                        False   \n",
       "308                              False                        False   \n",
       "309                              False                        False   \n",
       "310                              False                        False   \n",
       "\n",
       "     ZINC TOP  2 DOOR WOODEN SHELF   ZINC WILLIE WINKIE  CANDLE STICK  \n",
       "0                             False                             False  \n",
       "1                             False                             False  \n",
       "2                             False                             False  \n",
       "3                             False                             False  \n",
       "4                             False                             False  \n",
       "..                              ...                               ...  \n",
       "306                           False                             False  \n",
       "307                           False                             False  \n",
       "308                           False                             False  \n",
       "309                           False                             False  \n",
       "310                           False                             False  \n",
       "\n",
       "[311 rows x 1598 columns]"
      ]
     },
     "execution_count": 40,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "te = TransactionEncoder()\n",
    "tempi = dec2010_agg[0]\n",
    "\n",
    "tempi = tempi['Description'].to_numpy()\n",
    "tempi = list(tempi)\n",
    "te_ary = te.fit(tempi).transform(tempi)\n",
    "df_temp = pd.DataFrame(te_ary, columns=te.columns_)"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {
    "id": "daZfzXdsnmev"
   },
   "source": [
    "## For Jan 2011"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {
    "colab": {
     "base_uri": "https://localhost:8080/",
     "height": 424
    },
    "id": "Co7h8q1NrsNz",
    "outputId": "fe486d39-2fb8-47cd-dbed-8c5e48bca4fb"
   },
   "outputs": [
    {
     "data": {
      "text/html": [
       "\n",
       "  <div id=\"df-b13b2bad-3e6c-48b1-a122-5e7a5b4acad7\">\n",
       "    <div class=\"colab-df-container\">\n",
       "      <div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>InvoiceNo</th>\n",
       "      <th>StockCode</th>\n",
       "      <th>Description</th>\n",
       "      <th>Quantity</th>\n",
       "      <th>UnitPrice</th>\n",
       "      <th>CustomerID</th>\n",
       "      <th>Country</th>\n",
       "      <th>time_intervals</th>\n",
       "      <th>Total Price</th>\n",
       "      <th>Money_bins</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>42481</th>\n",
       "      <td>539993</td>\n",
       "      <td>22386</td>\n",
       "      <td>JUMBO BAG PINK POLKADOT</td>\n",
       "      <td>10</td>\n",
       "      <td>1.95</td>\n",
       "      <td>728</td>\n",
       "      <td>United Kingdom</td>\n",
       "      <td>08:00-11:59</td>\n",
       "      <td>19.50</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>42482</th>\n",
       "      <td>539993</td>\n",
       "      <td>21499</td>\n",
       "      <td>BLUE POLKADOT WRAP</td>\n",
       "      <td>25</td>\n",
       "      <td>0.42</td>\n",
       "      <td>728</td>\n",
       "      <td>United Kingdom</td>\n",
       "      <td>08:00-11:59</td>\n",
       "      <td>10.50</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>42483</th>\n",
       "      <td>539993</td>\n",
       "      <td>21498</td>\n",
       "      <td>RED RETROSPOT WRAP</td>\n",
       "      <td>25</td>\n",
       "      <td>0.42</td>\n",
       "      <td>728</td>\n",
       "      <td>United Kingdom</td>\n",
       "      <td>08:00-11:59</td>\n",
       "      <td>10.50</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>42484</th>\n",
       "      <td>539993</td>\n",
       "      <td>22379</td>\n",
       "      <td>RECYCLING BAG RETROSPOT</td>\n",
       "      <td>5</td>\n",
       "      <td>2.10</td>\n",
       "      <td>728</td>\n",
       "      <td>United Kingdom</td>\n",
       "      <td>08:00-11:59</td>\n",
       "      <td>10.50</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>42485</th>\n",
       "      <td>539993</td>\n",
       "      <td>20718</td>\n",
       "      <td>RED RETROSPOT SHOPPER BAG</td>\n",
       "      <td>10</td>\n",
       "      <td>1.25</td>\n",
       "      <td>728</td>\n",
       "      <td>United Kingdom</td>\n",
       "      <td>08:00-11:59</td>\n",
       "      <td>12.50</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>...</th>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>77621</th>\n",
       "      <td>542745</td>\n",
       "      <td>22617</td>\n",
       "      <td>BAKING SET SPACEBOY DESIGN</td>\n",
       "      <td>8</td>\n",
       "      <td>4.95</td>\n",
       "      <td>2601</td>\n",
       "      <td>United Kingdom</td>\n",
       "      <td>12:00-15:59</td>\n",
       "      <td>39.60</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>77622</th>\n",
       "      <td>542745</td>\n",
       "      <td>21108</td>\n",
       "      <td>FAIRY CAKE FLANNEL ASSORTED COLOUR</td>\n",
       "      <td>45</td>\n",
       "      <td>2.10</td>\n",
       "      <td>2601</td>\n",
       "      <td>United Kingdom</td>\n",
       "      <td>12:00-15:59</td>\n",
       "      <td>94.50</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>77623</th>\n",
       "      <td>542745</td>\n",
       "      <td>22138</td>\n",
       "      <td>BAKING SET 9 PIECE RETROSPOT</td>\n",
       "      <td>13</td>\n",
       "      <td>4.95</td>\n",
       "      <td>2601</td>\n",
       "      <td>United Kingdom</td>\n",
       "      <td>12:00-15:59</td>\n",
       "      <td>64.35</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>77624</th>\n",
       "      <td>542746</td>\n",
       "      <td>21034</td>\n",
       "      <td>REX CASH+CARRY JUMBO SHOPPER</td>\n",
       "      <td>2</td>\n",
       "      <td>0.95</td>\n",
       "      <td>2601</td>\n",
       "      <td>United Kingdom</td>\n",
       "      <td>12:00-15:59</td>\n",
       "      <td>1.90</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>77627</th>\n",
       "      <td>542759</td>\n",
       "      <td>22649</td>\n",
       "      <td>STRAWBERRY FAIRY CAKE TEAPOT</td>\n",
       "      <td>1</td>\n",
       "      <td>4.95</td>\n",
       "      <td>2601</td>\n",
       "      <td>United Kingdom</td>\n",
       "      <td>12:00-15:59</td>\n",
       "      <td>4.95</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "<p>34350 rows × 10 columns</p>\n",
       "</div>\n",
       "      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-b13b2bad-3e6c-48b1-a122-5e7a5b4acad7')\"\n",
       "              title=\"Convert this dataframe to an interactive table.\"\n",
       "              style=\"display:none;\">\n",
       "        \n",
       "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
       "       width=\"24px\">\n",
       "    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n",
       "    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n",
       "  </svg>\n",
       "      </button>\n",
       "      \n",
       "  <style>\n",
       "    .colab-df-container {\n",
       "      display:flex;\n",
       "      flex-wrap:wrap;\n",
       "      gap: 12px;\n",
       "    }\n",
       "\n",
       "    .colab-df-convert {\n",
       "      background-color: #E8F0FE;\n",
       "      border: none;\n",
       "      border-radius: 50%;\n",
       "      cursor: pointer;\n",
       "      display: none;\n",
       "      fill: #1967D2;\n",
       "      height: 32px;\n",
       "      padding: 0 0 0 0;\n",
       "      width: 32px;\n",
       "    }\n",
       "\n",
       "    .colab-df-convert:hover {\n",
       "      background-color: #E2EBFA;\n",
       "      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
       "      fill: #174EA6;\n",
       "    }\n",
       "\n",
       "    [theme=dark] .colab-df-convert {\n",
       "      background-color: #3B4455;\n",
       "      fill: #D2E3FC;\n",
       "    }\n",
       "\n",
       "    [theme=dark] .colab-df-convert:hover {\n",
       "      background-color: #434B5C;\n",
       "      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
       "      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
       "      fill: #FFFFFF;\n",
       "    }\n",
       "  </style>\n",
       "\n",
       "      <script>\n",
       "        const buttonEl =\n",
       "          document.querySelector('#df-b13b2bad-3e6c-48b1-a122-5e7a5b4acad7 button.colab-df-convert');\n",
       "        buttonEl.style.display =\n",
       "          google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
       "\n",
       "        async function convertToInteractive(key) {\n",
       "          const element = document.querySelector('#df-b13b2bad-3e6c-48b1-a122-5e7a5b4acad7');\n",
       "          const dataTable =\n",
       "            await google.colab.kernel.invokeFunction('convertToInteractive',\n",
       "                                                     [key], {});\n",
       "          if (!dataTable) return;\n",
       "\n",
       "          const docLinkHtml = 'Like what you see? Visit the ' +\n",
       "            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n",
       "            + ' to learn more about interactive tables.';\n",
       "          element.innerHTML = '';\n",
       "          dataTable['output_type'] = 'display_data';\n",
       "          await google.colab.output.renderOutput(dataTable, element);\n",
       "          const docLink = document.createElement('div');\n",
       "          docLink.innerHTML = docLinkHtml;\n",
       "          element.appendChild(docLink);\n",
       "        }\n",
       "      </script>\n",
       "    </div>\n",
       "  </div>\n",
       "  "
      ],
      "text/plain": [
       "      InvoiceNo StockCode                         Description  Quantity  \\\n",
       "42481    539993     22386             JUMBO BAG PINK POLKADOT        10   \n",
       "42482    539993     21499                  BLUE POLKADOT WRAP        25   \n",
       "42483    539993     21498                 RED RETROSPOT WRAP         25   \n",
       "42484    539993     22379            RECYCLING BAG RETROSPOT          5   \n",
       "42485    539993     20718           RED RETROSPOT SHOPPER BAG        10   \n",
       "...         ...       ...                                 ...       ...   \n",
       "77621    542745     22617          BAKING SET SPACEBOY DESIGN         8   \n",
       "77622    542745     21108  FAIRY CAKE FLANNEL ASSORTED COLOUR        45   \n",
       "77623    542745     22138       BAKING SET 9 PIECE RETROSPOT         13   \n",
       "77624    542746     21034        REX CASH+CARRY JUMBO SHOPPER         2   \n",
       "77627    542759     22649        STRAWBERRY FAIRY CAKE TEAPOT         1   \n",
       "\n",
       "       UnitPrice  CustomerID         Country time_intervals  Total Price  \\\n",
       "42481       1.95         728  United Kingdom    08:00-11:59        19.50   \n",
       "42482       0.42         728  United Kingdom    08:00-11:59        10.50   \n",
       "42483       0.42         728  United Kingdom    08:00-11:59        10.50   \n",
       "42484       2.10         728  United Kingdom    08:00-11:59        10.50   \n",
       "42485       1.25         728  United Kingdom    08:00-11:59        12.50   \n",
       "...          ...         ...             ...            ...          ...   \n",
       "77621       4.95        2601  United Kingdom    12:00-15:59        39.60   \n",
       "77622       2.10        2601  United Kingdom    12:00-15:59        94.50   \n",
       "77623       4.95        2601  United Kingdom    12:00-15:59        64.35   \n",
       "77624       0.95        2601  United Kingdom    12:00-15:59         1.90   \n",
       "77627       4.95        2601  United Kingdom    12:00-15:59         4.95   \n",
       "\n",
       "       Money_bins  \n",
       "42481           0  \n",
       "42482           0  \n",
       "42483           0  \n",
       "42484           0  \n",
       "42485           0  \n",
       "...           ...  \n",
       "77621           0  \n",
       "77622           0  \n",
       "77623           0  \n",
       "77624           0  \n",
       "77627           0  \n",
       "\n",
       "[34350 rows x 10 columns]"
      ]
     },
     "execution_count": 41,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "og_jan2011 = df_list_month_intervals[1]\n",
    "og_jan2011"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {
    "colab": {
     "base_uri": "https://localhost:8080/",
     "height": 424
    },
    "id": "t5bdMlWyssA1",
    "outputId": "28cc887a-5b29-4562-b05d-b397bdfc7e86"
   },
   "outputs": [
    {
     "data": {
      "text/html": [
       "\n",
       "  <div id=\"df-e52a3a7f-8d71-42c2-b14b-009062b2b004\">\n",
       "    <div class=\"colab-df-container\">\n",
       "      <div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>No. of visits</th>\n",
       "      <th>Mean_purch</th>\n",
       "      <th>Sum_purch</th>\n",
       "      <th>Item_count</th>\n",
       "      <th>Total_quantity</th>\n",
       "      <th>Avg_quant</th>\n",
       "      <th>CustomerID</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>1</td>\n",
       "      <td>77183.600000</td>\n",
       "      <td>77183.60</td>\n",
       "      <td>1</td>\n",
       "      <td>74215</td>\n",
       "      <td>74215.000000</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>1</td>\n",
       "      <td>16.392759</td>\n",
       "      <td>475.39</td>\n",
       "      <td>29</td>\n",
       "      <td>315</td>\n",
       "      <td>10.862069</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>1</td>\n",
       "      <td>37.906667</td>\n",
       "      <td>227.44</td>\n",
       "      <td>6</td>\n",
       "      <td>601</td>\n",
       "      <td>100.166667</td>\n",
       "      <td>2</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>1</td>\n",
       "      <td>63.100556</td>\n",
       "      <td>2271.62</td>\n",
       "      <td>36</td>\n",
       "      <td>1216</td>\n",
       "      <td>33.777778</td>\n",
       "      <td>9</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>1</td>\n",
       "      <td>34.218750</td>\n",
       "      <td>547.50</td>\n",
       "      <td>16</td>\n",
       "      <td>144</td>\n",
       "      <td>9.000000</td>\n",
       "      <td>12</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>...</th>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>737</th>\n",
       "      <td>2</td>\n",
       "      <td>20.887826</td>\n",
       "      <td>480.42</td>\n",
       "      <td>21</td>\n",
       "      <td>268</td>\n",
       "      <td>11.652174</td>\n",
       "      <td>4306</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>738</th>\n",
       "      <td>1</td>\n",
       "      <td>15.685000</td>\n",
       "      <td>439.18</td>\n",
       "      <td>28</td>\n",
       "      <td>320</td>\n",
       "      <td>11.428571</td>\n",
       "      <td>4310</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>739</th>\n",
       "      <td>1</td>\n",
       "      <td>21.425769</td>\n",
       "      <td>557.07</td>\n",
       "      <td>26</td>\n",
       "      <td>429</td>\n",
       "      <td>16.500000</td>\n",
       "      <td>4320</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>740</th>\n",
       "      <td>2</td>\n",
       "      <td>2.107843</td>\n",
       "      <td>215.00</td>\n",
       "      <td>87</td>\n",
       "      <td>128</td>\n",
       "      <td>1.254902</td>\n",
       "      <td>4337</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>741</th>\n",
       "      <td>133</td>\n",
       "      <td>9.294063</td>\n",
       "      <td>121919.52</td>\n",
       "      <td>1968</td>\n",
       "      <td>48569</td>\n",
       "      <td>3.702470</td>\n",
       "      <td>4339</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "<p>742 rows × 7 columns</p>\n",
       "</div>\n",
       "      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-e52a3a7f-8d71-42c2-b14b-009062b2b004')\"\n",
       "              title=\"Convert this dataframe to an interactive table.\"\n",
       "              style=\"display:none;\">\n",
       "        \n",
       "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
       "       width=\"24px\">\n",
       "    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n",
       "    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n",
       "  </svg>\n",
       "      </button>\n",
       "      \n",
       "  <style>\n",
       "    .colab-df-container {\n",
       "      display:flex;\n",
       "      flex-wrap:wrap;\n",
       "      gap: 12px;\n",
       "    }\n",
       "\n",
       "    .colab-df-convert {\n",
       "      background-color: #E8F0FE;\n",
       "      border: none;\n",
       "      border-radius: 50%;\n",
       "      cursor: pointer;\n",
       "      display: none;\n",
       "      fill: #1967D2;\n",
       "      height: 32px;\n",
       "      padding: 0 0 0 0;\n",
       "      width: 32px;\n",
       "    }\n",
       "\n",
       "    .colab-df-convert:hover {\n",
       "      background-color: #E2EBFA;\n",
       "      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
       "      fill: #174EA6;\n",
       "    }\n",
       "\n",
       "    [theme=dark] .colab-df-convert {\n",
       "      background-color: #3B4455;\n",
       "      fill: #D2E3FC;\n",
       "    }\n",
       "\n",
       "    [theme=dark] .colab-df-convert:hover {\n",
       "      background-color: #434B5C;\n",
       "      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
       "      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
       "      fill: #FFFFFF;\n",
       "    }\n",
       "  </style>\n",
       "\n",
       "      <script>\n",
       "        const buttonEl =\n",
       "          document.querySelector('#df-e52a3a7f-8d71-42c2-b14b-009062b2b004 button.colab-df-convert');\n",
       "        buttonEl.style.display =\n",
       "          google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
       "\n",
       "        async function convertToInteractive(key) {\n",
       "          const element = document.querySelector('#df-e52a3a7f-8d71-42c2-b14b-009062b2b004');\n",
       "          const dataTable =\n",
       "            await google.colab.kernel.invokeFunction('convertToInteractive',\n",
       "                                                     [key], {});\n",
       "          if (!dataTable) return;\n",
       "\n",
       "          const docLinkHtml = 'Like what you see? Visit the ' +\n",
       "            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n",
       "            + ' to learn more about interactive tables.';\n",
       "          element.innerHTML = '';\n",
       "          dataTable['output_type'] = 'display_data';\n",
       "          await google.colab.output.renderOutput(dataTable, element);\n",
       "          const docLink = document.createElement('div');\n",
       "          docLink.innerHTML = docLinkHtml;\n",
       "          element.appendChild(docLink);\n",
       "        }\n",
       "      </script>\n",
       "    </div>\n",
       "  </div>\n",
       "  "
      ],
      "text/plain": [
       "     No. of visits    Mean_purch  Sum_purch  Item_count  Total_quantity  \\\n",
       "0                1  77183.600000   77183.60           1           74215   \n",
       "1                1     16.392759     475.39          29             315   \n",
       "2                1     37.906667     227.44           6             601   \n",
       "3                1     63.100556    2271.62          36            1216   \n",
       "4                1     34.218750     547.50          16             144   \n",
       "..             ...           ...        ...         ...             ...   \n",
       "737              2     20.887826     480.42          21             268   \n",
       "738              1     15.685000     439.18          28             320   \n",
       "739              1     21.425769     557.07          26             429   \n",
       "740              2      2.107843     215.00          87             128   \n",
       "741            133      9.294063  121919.52        1968           48569   \n",
       "\n",
       "        Avg_quant  CustomerID  \n",
       "0    74215.000000           0  \n",
       "1       10.862069           1  \n",
       "2      100.166667           2  \n",
       "3       33.777778           9  \n",
       "4        9.000000          12  \n",
       "..            ...         ...  \n",
       "737     11.652174        4306  \n",
       "738     11.428571        4310  \n",
       "739     16.500000        4320  \n",
       "740      1.254902        4337  \n",
       "741      3.702470        4339  \n",
       "\n",
       "[742 rows x 7 columns]"
      ]
     },
     "execution_count": 42,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "#For Jan 2011\n",
    "dvt_jan2011= person_df(og_jan2011)                          #Our function gives such a dataframe by which we can form clusters using KMeans\n",
    "\n",
    "df_jan2011 = df_cluster_labels(dvt_jan2011,3)\n",
    "df_jan2011"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {
    "colab": {
     "base_uri": "https://localhost:8080/"
    },
    "id": "XohqVfV7mDFh",
    "outputId": "e5892020-b72e-43c5-e10c-78b4fa2ea42d"
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "The Silhouette Score is :- 0.981276514170814\n"
     ]
    },
    {
     "data": {
      "text/plain": [
       "0    740\n",
       "2      1\n",
       "1      1\n",
       "Name: cluster_labels, dtype: int64"
      ]
     },
     "execution_count": 44,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "silhte_score_jan2011 = silhouette_score(dvt_jan2011, df_jan2011['cluster_labels'])\n",
    "print(\"The Silhouette Score is :- \"+str(silhte_score_jan2011))\n",
    "\n",
    "df_jan2011['cluster_labels'].value_counts()\n",
    "#Implies that there are outlier clusters"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {
    "colab": {
     "base_uri": "https://localhost:8080/",
     "height": 472
    },
    "id": "u1iHb77MtKIw",
    "outputId": "c416d19f-12f5-4c31-bb9b-26f99f75c8de"
   },
   "outputs": [
    {
     "data": {
      "image/png": "",
      "text/plain": [
       "<Figure size 640x480 with 1 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "plt.scatter(df_jan2011['Mean_purch'], df_jan2011['Sum_purch'], c=df_jan2011['cluster_labels'], cmap='viridis')\n",
    "plt.title(\"For Jan 2011 (With outliers)\")\n",
    "plt.xlabel('Mean purchases')\n",
    "plt.ylabel('Sum purchases')\n",
    "plt.show()\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {
    "colab": {
     "base_uri": "https://localhost:8080/",
     "height": 424
    },
    "id": "GQ0FW3WBtTLT",
    "outputId": "b80a9293-1270-4af3-8e70-939075ca5591"
   },
   "outputs": [
    {
     "data": {
      "text/html": [
       "\n",
       "  <div id=\"df-63e962ff-4c43-4029-844a-dc9e85b157f4\">\n",
       "    <div class=\"colab-df-container\">\n",
       "      <div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>No. of visits</th>\n",
       "      <th>Mean_purch</th>\n",
       "      <th>Sum_purch</th>\n",
       "      <th>Item_count</th>\n",
       "      <th>Total_quantity</th>\n",
       "      <th>Avg_quant</th>\n",
       "      <th>CustomerID</th>\n",
       "      <th>cluster_labels</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>1</td>\n",
       "      <td>16.392759</td>\n",
       "      <td>475.39</td>\n",
       "      <td>29</td>\n",
       "      <td>315</td>\n",
       "      <td>10.862069</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>1</td>\n",
       "      <td>37.906667</td>\n",
       "      <td>227.44</td>\n",
       "      <td>6</td>\n",
       "      <td>601</td>\n",
       "      <td>100.166667</td>\n",
       "      <td>2</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>1</td>\n",
       "      <td>63.100556</td>\n",
       "      <td>2271.62</td>\n",
       "      <td>36</td>\n",
       "      <td>1216</td>\n",
       "      <td>33.777778</td>\n",
       "      <td>9</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>1</td>\n",
       "      <td>34.218750</td>\n",
       "      <td>547.50</td>\n",
       "      <td>16</td>\n",
       "      <td>144</td>\n",
       "      <td>9.000000</td>\n",
       "      <td>12</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>5</th>\n",
       "      <td>1</td>\n",
       "      <td>18.429412</td>\n",
       "      <td>626.60</td>\n",
       "      <td>34</td>\n",
       "      <td>340</td>\n",
       "      <td>10.000000</td>\n",
       "      <td>26</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>...</th>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>736</th>\n",
       "      <td>1</td>\n",
       "      <td>440.000000</td>\n",
       "      <td>440.00</td>\n",
       "      <td>1</td>\n",
       "      <td>4</td>\n",
       "      <td>4.000000</td>\n",
       "      <td>4302</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>737</th>\n",
       "      <td>2</td>\n",
       "      <td>20.887826</td>\n",
       "      <td>480.42</td>\n",
       "      <td>21</td>\n",
       "      <td>268</td>\n",
       "      <td>11.652174</td>\n",
       "      <td>4306</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>738</th>\n",
       "      <td>1</td>\n",
       "      <td>15.685000</td>\n",
       "      <td>439.18</td>\n",
       "      <td>28</td>\n",
       "      <td>320</td>\n",
       "      <td>11.428571</td>\n",
       "      <td>4310</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>739</th>\n",
       "      <td>1</td>\n",
       "      <td>21.425769</td>\n",
       "      <td>557.07</td>\n",
       "      <td>26</td>\n",
       "      <td>429</td>\n",
       "      <td>16.500000</td>\n",
       "      <td>4320</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>740</th>\n",
       "      <td>2</td>\n",
       "      <td>2.107843</td>\n",
       "      <td>215.00</td>\n",
       "      <td>87</td>\n",
       "      <td>128</td>\n",
       "      <td>1.254902</td>\n",
       "      <td>4337</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "<p>740 rows × 8 columns</p>\n",
       "</div>\n",
       "      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-63e962ff-4c43-4029-844a-dc9e85b157f4')\"\n",
       "              title=\"Convert this dataframe to an interactive table.\"\n",
       "              style=\"display:none;\">\n",
       "        \n",
       "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
       "       width=\"24px\">\n",
       "    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n",
       "    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n",
       "  </svg>\n",
       "      </button>\n",
       "      \n",
       "  <style>\n",
       "    .colab-df-container {\n",
       "      display:flex;\n",
       "      flex-wrap:wrap;\n",
       "      gap: 12px;\n",
       "    }\n",
       "\n",
       "    .colab-df-convert {\n",
       "      background-color: #E8F0FE;\n",
       "      border: none;\n",
       "      border-radius: 50%;\n",
       "      cursor: pointer;\n",
       "      display: none;\n",
       "      fill: #1967D2;\n",
       "      height: 32px;\n",
       "      padding: 0 0 0 0;\n",
       "      width: 32px;\n",
       "    }\n",
       "\n",
       "    .colab-df-convert:hover {\n",
       "      background-color: #E2EBFA;\n",
       "      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
       "      fill: #174EA6;\n",
       "    }\n",
       "\n",
       "    [theme=dark] .colab-df-convert {\n",
       "      background-color: #3B4455;\n",
       "      fill: #D2E3FC;\n",
       "    }\n",
       "\n",
       "    [theme=dark] .colab-df-convert:hover {\n",
       "      background-color: #434B5C;\n",
       "      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
       "      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
       "      fill: #FFFFFF;\n",
       "    }\n",
       "  </style>\n",
       "\n",
       "      <script>\n",
       "        const buttonEl =\n",
       "          document.querySelector('#df-63e962ff-4c43-4029-844a-dc9e85b157f4 button.colab-df-convert');\n",
       "        buttonEl.style.display =\n",
       "          google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
       "\n",
       "        async function convertToInteractive(key) {\n",
       "          const element = document.querySelector('#df-63e962ff-4c43-4029-844a-dc9e85b157f4');\n",
       "          const dataTable =\n",
       "            await google.colab.kernel.invokeFunction('convertToInteractive',\n",
       "                                                     [key], {});\n",
       "          if (!dataTable) return;\n",
       "\n",
       "          const docLinkHtml = 'Like what you see? Visit the ' +\n",
       "            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n",
       "            + ' to learn more about interactive tables.';\n",
       "          element.innerHTML = '';\n",
       "          dataTable['output_type'] = 'display_data';\n",
       "          await google.colab.output.renderOutput(dataTable, element);\n",
       "          const docLink = document.createElement('div');\n",
       "          docLink.innerHTML = docLinkHtml;\n",
       "          element.appendChild(docLink);\n",
       "        }\n",
       "      </script>\n",
       "    </div>\n",
       "  </div>\n",
       "  "
      ],
      "text/plain": [
       "     No. of visits  Mean_purch  Sum_purch  Item_count  Total_quantity  \\\n",
       "1                1   16.392759     475.39          29             315   \n",
       "2                1   37.906667     227.44           6             601   \n",
       "3                1   63.100556    2271.62          36            1216   \n",
       "4                1   34.218750     547.50          16             144   \n",
       "5                1   18.429412     626.60          34             340   \n",
       "..             ...         ...        ...         ...             ...   \n",
       "736              1  440.000000     440.00           1               4   \n",
       "737              2   20.887826     480.42          21             268   \n",
       "738              1   15.685000     439.18          28             320   \n",
       "739              1   21.425769     557.07          26             429   \n",
       "740              2    2.107843     215.00          87             128   \n",
       "\n",
       "      Avg_quant  CustomerID  cluster_labels  \n",
       "1     10.862069           1               0  \n",
       "2    100.166667           2               0  \n",
       "3     33.777778           9               0  \n",
       "4      9.000000          12               0  \n",
       "5     10.000000          26               0  \n",
       "..          ...         ...             ...  \n",
       "736    4.000000        4302               0  \n",
       "737   11.652174        4306               0  \n",
       "738   11.428571        4310               0  \n",
       "739   16.500000        4320               0  \n",
       "740    1.254902        4337               0  \n",
       "\n",
       "[740 rows x 8 columns]"
      ]
     },
     "execution_count": 46,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "df_jan2011 = df_jan2011[df_jan2011['cluster_labels']!=1]\n",
    "df_jan2011 = df_jan2011[df_jan2011['cluster_labels']!=2]\n",
    "\n",
    "df_jan2011['cluster_labels'].value_counts()\n",
    "#Thus the outliers are removed.\n",
    "\n",
    "df_jan2011_person = df_jan2011.copy(deep=True)\n",
    "df_jan2011_person.drop(['cluster_labels'],axis=1,inplace=True)\n",
    "\n",
    "df_jan2011_new = df_cluster_labels(df_jan2011_person,3)\n",
    "df_jan2011_new"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {
    "colab": {
     "base_uri": "https://localhost:8080/"
    },
    "id": "gEn-QLm8mSyn",
    "outputId": "56159b8b-6d94-4056-d3d5-7477d9046f6b"
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "The Silhouette Score is :- 0.515667097110596\n"
     ]
    }
   ],
   "source": [
    "silhte_score_jan2011_new = silhouette_score(df_jan2011_person, df_jan2011_new['cluster_labels'])\n",
    "print(\"The Silhouette Score is :- \"+str(silhte_score_jan2011_new))\n",
    "#Indicates that silhouette score is realistic for dataset without outliers\n",
    "\n",
    "df_jan2011_new['CustomerID'] = dvt_jan2011['CustomerID']\n",
    "print(df_jan2011_new['cluster_labels'].value_counts())\n",
    "\n",
    "plt.scatter(df_jan2011_new['CustomerID'], df_jan2011_new['Mean_purch'], c=df_jan2011_new['cluster_labels'], cmap='viridis')\n",
    "plt.title(\"For Jan 2011 (After removing outliers)\")\n",
    "plt.xlabel(\"CustomerID\")\n",
    "plt.ylabel('Mean_purch')\n",
    "plt.show()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {
    "colab": {
     "base_uri": "https://localhost:8080/"
    },
    "id": "pmBas7jaueTj",
    "outputId": "eaaee6f3-9117-4b0f-f61e-478e83095f7a"
   },
   "outputs": [
    {
     "data": {
      "text/plain": [
       "[     CustomerID                                        Description\n",
       " 0             1  [PINK NEW BAROQUECANDLESTICK CANDLE, BLUE NEW ...\n",
       " 1             2  [PACK OF 12 RED RETROSPOT TISSUES , PACK OF 12...\n",
       " 2             9  [BAKING SET 9 PIECE RETROSPOT , WHITE HEART CO...\n",
       " 3            12  [RETROSPOT BABUSHKA DOORSTOP, GINGHAM BABUSHKA...\n",
       " 4            26  [STRAWBERRY HONEYCOMB  GARLAND , SMALL POPCORN...\n",
       " ..          ...                                                ...\n",
       " 399        2177  [5 HOOK HANGER MAGIC TOADSTOOL, GUMBALL MONOCH...\n",
       " 400        2212  [TEA PARTY BIRTHDAY CARD, FAIRY CAKES NOTEBOOK...\n",
       " 401        2226  [LOVE HEART POCKET WARMER, JUMBO STORAGE BAG S...\n",
       " 402        2313  [HAND WARMER OWL DESIGN, CHICK GREY HOT WATER ...\n",
       " 403        2518  [RED 3 PIECE RETROSPOT CUTLERY SET, GREEN 3 PI...\n",
       " \n",
       " [404 rows x 2 columns],\n",
       "      CustomerID                                        Description\n",
       " 0          2142  [3 HOOK PHOTO SHELF ANTIQUE WHITE, IVORY HANGI...\n",
       " 1          2146  [SET 3 WICKER STORAGE BASKETS , WHITE METAL LA...\n",
       " 2          2150  [ZINC TOP  2 DOOR WOODEN SHELF , WOODEN ROUNDE...\n",
       " 3          2163  [SET OF 72 RETROSPOT PAPER  DOILIES, HANGING H...\n",
       " 4          2168  [GINGERBREAD MAN COOKIE CUTTER, WRAP ENGLISH R...\n",
       " ..          ...                                                ...\n",
       " 327        4302                    [CHEST NATURAL WOOD 20 DRAWERS]\n",
       " 328        4306  [WHITE HANGING HEART T-LIGHT HOLDER, REGENCY C...\n",
       " 329        4310  [DOORMAT UNION FLAG, HERB MARKER THYME, HERB M...\n",
       " 330        4320  [RED HANGING HEART T-LIGHT HOLDER, HANGING JAM...\n",
       " 331        4337  [CHARLOTTE BAG PINK POLKADOT, LUNCH BAG WOODLA...\n",
       " \n",
       " [332 rows x 2 columns]]"
      ]
     },
     "execution_count": 52,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "jan2011 = descrip_dict(og_jan2011,df_jan2011_new)\n",
    "jan2011 = processlis(jan2011)\n",
    "\n",
    "pca = PCA(n_components = 3)\n",
    "pca.fit(X = dvt_jan2011)\n",
    "new_dvt = pca.transform(dvt_jan2011)\n",
    "\n",
    "new_dvt = pd.DataFrame(data = new_dvt,columns = ['X0','X1','X2'])\n",
    "model = AgglomerativeClustering(distance_threshold=0, n_clusters=None, linkage='ward').fit(new_dvt)\n",
    "\n",
    "plot_dendrogram(model, truncate_mode=\"level\", p=4)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {
    "colab": {
     "base_uri": "https://localhost:8080/",
     "height": 497
    },
    "id": "GXhdnHEEXpy6",
    "outputId": "9d32823d-c318-4bf7-9c4b-7fc28283b72d"
   },
   "outputs": [
    {
     "data": {
      "image/png": "",
      "text/plain": [
       "<Figure size 500x500 with 1 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "(740, 4)\n",
      "(1, 4)\n",
      "(1, 4)\n"
     ]
    }
   ],
   "source": [
    "dict_jan2011 =  Agglocls(new_dvt,3)\n",
    "\n",
    "final_dvt_jan2011 = dict_jan2011[0]\n",
    "pca_jan2011_new = PCA(n_components = 3)\n",
    "pca_jan2011_new.fit(X = final_dvt_jan2011)\n",
    "final_dvt_jan2011 = pca_jan2011_new.transform(final_dvt_jan2011)\n",
    "final_dvt_jan2011 = pd.DataFrame(data = final_dvt_jan2011,columns = ['X0','X1','X2'])\n",
    "AggloDendo(final_dvt_jan2011)\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {
    "colab": {
     "base_uri": "https://localhost:8080/",
     "height": 497
    },
    "id": "S0nVXWEXXp4b",
    "outputId": "3200fef5-f17d-46e0-f6b3-37ecf8be1980"
   },
   "outputs": [
    {
     "data": {
      "image/png": "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VURExE8UVEVERPxEQVVERMRPFFRFRET8REFVRETETxRURURE/ERBVURExE8UVEVERPykSoPq/PnzueSSS2jZsiUOh4NPPvnEZ/vgwYNxOBw+S//+/X3S7NmzhxtvvJGIiAiioqIYMmQI+/fv90mzYsUKzjnnHEJDQ4mLi2Py5MlVeVoiIiLFqtKgeuDAAXr06MGUKVNKTNO/f3927NjhXd59912f7TfeeCOrV68mOTmZL774gvnz53PnnXd6t2dlZdGvXz/atm3L0qVLeeyxx5g4cSIvv/xylZ2XiIhIcYKqcucDBgxgwIABpaYJCQkhNja22G1r165l5syZ/PDDD5x++ukAPPfcc1x00UU8/vjjtGzZkrfffpucnBxee+013G433bp1IzU1lSeffNIn+IqIiFS1gLepzp07l+bNm9OpUyeGDRvG7t27vdtSUlKIioryBlSAxMREnE4nixcv9qY599xzcbvd3jRJSUmsX7+evXv3FnvM7OxssrKyfBYREZHKCmhQ7d+/P2+88QazZs3iP//5D/PmzWPAgAHk5+cDkJaWRvPmzX3eExQURJMmTUhLS/OmiYmJ8UlT8LogzbEmTZpEZGSkd4mLi/P3qYmISD1UpdW/Zbnuuuu8f3fv3p1TTjmFE044gblz53LhhRdW2XHHjx/PqFGjvK+zsrIUWEVEpNICXv1bWIcOHWjWrBm//PILALGxsezcudMnTV5eHnv27PG2w8bGxpKenu6TpuB1SW21ISEhRERE+CwiIiKVVaOC6tatW9m9ezctWrQAICEhgYyMDJYuXepNM3v2bDweD/Hx8d408+fPJzc315smOTmZTp060bhx4+o9ARERqdeqNKju37+f1NRUUlNTAdi4cSOpqals3ryZ/fv3M2bMGBYtWsSmTZuYNWsWl112GR07diQpKQmALl260L9/f+644w6WLFnCggULGDFiBNdddx0tW7YE4IYbbsDtdjNkyBBWr17Ne++9xzPPPONTvSsiIlItTBWaM2eOAYosgwYNMgcPHjT9+vUz0dHRJjg42LRt29bccccdJi0tzWcfu3fvNtdff71p2LChiYiIMLfeeqvZt2+fT5rly5ebPn36mJCQENOqVSvz6KOPViifmZmZBjCZmZmVPmcREam9KhsPHMYYE8CYXiNkZWURGRlJZmam2ldFROqxysaDGtWmKiIi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Dgcff/yxTyAtbOzYscyYMYNVq1Z511133XVkZGQwc+ZMAOLj4+nduzfPP/88AB6Ph7i4OO655x7GjRtXrjxmZWURGRlJZmYmERERFTtBERGpMyobDwLepjp8+HCaNWvGGWecwWuvvUbhGJ+SkkJiYqJP+qSkJFJSUgBbGl66dKlPGqfTSWJiojdNcbKzs8nKyvJZREREKiugz6n+85//5IILLiA8PJxvvvmGu+++m/3793PvvfcCkJaWRkyM79ijMTExZGVlcejQIfbu3Ut+fn6xadatW1ficSdNmsRDDz3k/xMSEZF6rUIl1XHjxhXbuajwUlowO9Y//vEPzj77bE499VTGjh3LAw88wGOPPVbhk6io8ePHk5mZ6V22bNlS5ccUEZG6r0Il1dGjRzN48OBS03To0OG4MxMfH8+//vUvsrOzCQkJITY2lvT0dJ806enpREREEBYWhsvlwuVyFZsmNja2xOOEhIQQEhJy3PkUEREpToWCanR0NNHR0VWVF1JTU2ncuLE34CUkJPDll1/6pElOTiYhIQEAt9tNr169mDVrlrezk8fjYdasWYwYMaLK8ikiIlKcKmtT3bx5M3v27GHz5s3k5+eTmpoKQMeOHWnYsCGff/456enpnHnmmYSGhpKcnMwjjzzC/fff793H0KFDef7553nggQe47bbbmD17Nu+//z4zZszwphk1ahSDBg3i9NNP54wzzuDpp5/mwIED3HrrrVV1aiIiIsUzVWTQoEEGKLLMmTPHGGPMV199ZXr27GkaNmxoGjRoYHr06GFefPFFk5+f77OfOXPmmJ49exq32206dOhgpk6dWuRYzz33nGnTpo1xu93mjDPOMIsWLapQXjMzMw1gMjMzj/d0RUSkDqhsPKjy51RrAz2nKiIiUAeeUxUREakrFFRFRET8REFVRETETxRURURE/ERBVURExE8UVEVERPxEQVVERMRPFFRFRET8REFVRETETxRURURE/ERBVURExE8UVEVERPxEQVVERMRPFFRFRET8REFVRETETxRURURE/ERBVURExE8UVEVERPxEQVVERMRPFFRFRET8REFVRETETxRURURE/ERBVURExE8UVEVERPxEQVVERGq9PPI5RA4eTEDzERTQo4uIiFRCGll8zwbWko7BEEIQp9GGszmBcNzVnh8FVRERqZU2sZu3WYI58h9ANnksYiPrSOM2zqIBIdWaJ1X/iohIrePBw0csw4OnSJWvwZDJIb5lXbXnS0FVRERqnQ3sZD/ZJbagejCsYhuHya3WfCmoiohIrZPOPpw4Sk2Tj2EPB6spR5aCqoiI1DrBuLztqKWnq94wp6AqIiK1TidiygypjQmnGQ2rJT8FFFRFRKTWaUIDutKi1ArgczkRRxlVxP5WZUF106ZNDBkyhPbt2xMWFsYJJ5zAhAkTyMnJ8Um3YsUKzjnnHEJDQ4mLi2Py5MlF9vXBBx/QuXNnQkND6d69O19++aXPdmMMDz74IC1atCAsLIzExEQ2bNhQVacmIiI1wKWcwglEA+DEgfNICHUAF9CJHrSu9jxVWVBdt24dHo+Hl156idWrV/PUU0/x4osv8te//tWbJisri379+tG2bVuWLl3KY489xsSJE3n55Ze9aRYuXMj111/PkCFDWLZsGZdffjmXX345q1at8qaZPHkyzz77LC+++CKLFy+mQYMGJCUlcfjw4ao6PRERCTA3QVxPb27jLHrTju604jxO4l4uoA8dA5MpU40mT55s2rdv7339wgsvmMaNG5vs7GzvurFjx5pOnTp5X19zzTVm4MCBPvuJj483d911lzHGGI/HY2JjY81jjz3m3Z6RkWFCQkLMu+++W658ZWZmGsBkZmYe13mJiEjdUNl4UK1tqpmZmTRp0sT7OiUlhXPPPRe3++hQUklJSaxfv569e/d60yQmJvrsJykpiZSUFAA2btxIWlqaT5rIyEji4+O9aY6VnZ1NVlaWzyIiIlJZ1RZUf/nlF5577jnuuusu77q0tDRiYmJ80hW8TktLKzVN4e2F31dcmmNNmjSJyMhI7xIXF1eJMxMREbEqHFTHjRuHw+EodVm3zndoqG3bttG/f3+uvvpq7rjjDr9l/niNHz+ezMxM77Jly5ZAZ0lEROqACg+oP3r0aAYPHlxqmg4dOnj/3r59O3379uWss87y6YAEEBsbS3p6us+6gtexsbGlpim8vWBdixYtfNL07Nmz2PyFhIQQElK9gyyLiEjdV+GgGh0dTXR0dLnSbtu2jb59+9KrVy+mTp2K0+lbME5ISOBvf/sbubm5BAcHA5CcnEynTp1o3LixN82sWbMYOXKk933JyckkJCQA0L59e2JjY5k1a5Y3iGZlZbF48WKGDRtW0dMTERE5fn7uOOW1detW07FjR3PhhRearVu3mh07dniXAhkZGSYmJsbcfPPNZtWqVWb69OkmPDzcvPTSS940CxYsMEFBQebxxx83a9euNRMmTDDBwcFm5cqV3jSPPvqoiYqKMp9++qlZsWKFueyyy0z79u3NoUOHypVX9f4VERFjKh8PqiyoTp061QDFLoUtX77c9OnTx4SEhJhWrVqZRx99tMi+3n//fXPSSScZt9ttunXrZmbMmOGz3ePxmH/84x8mJibGhISEmAsvvNCsX7++3HlVUBUREWMqHw8cxpiyRySu47KysoiMjCQzM5OIiIhAZ0dERAKksvFAY/+KiIj4iYKqiIiIn1S4929dVFADrpGVRETqt4I4cLwtowqqwL59+wA0spKIiAA2LkRGRlb4feqoBHg8HrZv306jRo1wOPw7915WVhZxcXFs2bJFnaAK0XUpma5N8XRdSqZrU7KKXhtjDPv27aNly5ZFxlYoD5VUAafTSevWVTvvXkREhD7sxdB1KZmuTfF0XUqma1Oyilyb4ymhFlBHJRERET9RUBUREfETBdUqFhISwoQJEzSA/zF0XUqma1M8XZeS6dqUrLqvjToqiYiI+IlKqiIiIn6ioCoiIuInCqoiIiJ+oqAqIiLiJwqqIiIifqKgehw2bdrEkCFDaN++PWFhYZxwwglMmDCBnJwcn3QrVqzgnHPOITQ0lLi4OCZPnlxkXx988AGdO3cmNDSU7t278+WXX/psN8bw4IMP0qJFC8LCwkhMTGTDhg1Ven6V9fDDD3PWWWcRHh5OVFRUsWk2b97MwIEDCQ8Pp3nz5owZM4a8vDyfNHPnzuW0004jJCSEjh07Mm3atCL7mTJlCu3atSM0NJT4+HiWLFlSBWdUfera+Rxr/vz5XHLJJbRs2RKHw8Enn3zis708n/c9e/Zw4403EhERQVRUFEOGDGH//v0+acrz3atJJk2aRO/evWnUqBHNmzfn8ssvZ/369T5pDh8+zPDhw2natCkNGzbkqquuIj093SeNv75XNcl///tfTjnlFO+ISAkJCXz11Vfe7TXuuvhjpvT65quvvjKDBw82X3/9tfn111/Np59+apo3b25Gjx7tTZOZmWliYmLMjTfeaFatWmXeffddExYWZl566SVvmgULFhiXy2UmT55s1qxZY/7+97+b4OBgs3LlSm+aRx991ERGRppPPvnELF++3Fx6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",
      "text/plain": [
       "<Figure size 500x500 with 1 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "(372, 5)\n",
      "(4, 5)\n",
      "(364, 5)\n"
     ]
    }
   ],
   "source": [
    "dict_jan2011_final =  AggloPca(final_dvt_jan2011,3,dvt_jan2011,'X1','X2')"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {
    "colab": {
     "base_uri": "https://localhost:8080/"
    },
    "id": "F-b9F3PMFuwW",
    "outputId": "3408c867-5529-4b82-9c59-504d8b85599f"
   },
   "outputs": [
    {
     "data": {
      "text/plain": [
       "[     CustomerID                                        Description\n",
       " 0             0                   [MEDIUM CERAMIC TOP STORAGE JAR]\n",
       " 1             1  [PINK NEW BAROQUECANDLESTICK CANDLE, BLUE NEW ...\n",
       " 2             2  [PACK OF 12 RED RETROSPOT TISSUES , PACK OF 12...\n",
       " 3             9  [BAKING SET 9 PIECE RETROSPOT , WHITE HEART CO...\n",
       " 4            12  [RETROSPOT BABUSHKA DOORSTOP, GINGHAM BABUSHKA...\n",
       " ..          ...                                                ...\n",
       " 367        3692  [SET OF 6 SOLDIER SKITTLES, CHILDS BREAKFAST S...\n",
       " 368        3694  [MAGIC DRAWING SLATE DOLLY GIRL , SET OF 3 CAK...\n",
       " 369        3706  [EASTER DECORATION SITTING BUNNY, BLUE PAISLEY...\n",
       " 370        3765  [VINTAGE BILLBOARD TEA MUG, ZINC WILLIE WINKIE...\n",
       " 371        3993  [Manual, RETROSPOT PADDED SEAT CUSHION, RED RE...\n",
       " \n",
       " [372 rows x 2 columns],\n",
       "      CustomerID                                        Description\n",
       " 0          1516  [RETROSPOT HEART HOT WATER BOTTLE, GREY HEART ...\n",
       " 1          1535  [VICTORIAN  METAL POSTCARD SPRING, T-LIGHT HOL...\n",
       " 2          1602  [HEART OF WICKER LARGE, HEART OF WICKER SMALL,...\n",
       " 3          1698  [CERAMIC STRAWBERRY DESIGN MUG, PACK OF 60 SPA...\n",
       " 4          1707  [HANGING CHICK CREAM DECORATION, PHARMACIE FIR...\n",
       " ..          ...                                                ...\n",
       " 359        4298  [BLACK TEA,COFFEE,SUGAR JARS, WHITE TEA,COFFEE...\n",
       " 360        4302                    [CHEST NATURAL WOOD 20 DRAWERS]\n",
       " 361        4306  [WHITE HANGING HEART T-LIGHT HOLDER, REGENCY C...\n",
       " 362        4310  [DOORMAT UNION FLAG, HERB MARKER THYME, HERB M...\n",
       " 363        4320  [RED HANGING HEART T-LIGHT HOLDER, HANGING JAM...\n",
       " \n",
       " [364 rows x 2 columns]]"
      ]
     },
     "execution_count": 57,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "jan2011_agg = descrip_dict(og_jan2011,final_dvt_jan2011)\n",
    "jan2011_agg = processlis(jan2011_agg)\n",
    "jan2011_agg"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {
    "id": "B2aZZcRgshKB"
   },
   "outputs": [],
   "source": [
    "Cluster_dict['jan2011'] = (len(jan2011),len(jan2011_agg))\n",
    "dicti_2011jan = {}\n",
    "klis = []\n",
    "for i in range(Cluster_dict['jan2011'][0]):\n",
    "  temp = apriori_rules(jan2011[i],0.075)\n",
    "  klis.append(temp)\n",
    "alis = []\n",
    "for i in range(Cluster_dict['jan2011'][1]):\n",
    "  temp = apriori_rules(jan2011_agg[i],0.075)\n",
    "  alis.append(temp)\n",
    "#apriori_rules(1_agg[0],0.075)\n",
    "dicti_2011jan['K-means'] = klis\n",
    "dicti_2011jan['Agglo'] = alis\n",
    "\n",
    "Rules_dict['jan2011'] = dicti_2011jan"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {
    "id": "h_vqvAW-v-HC"
   },
   "source": [
    "## For Feb 2011"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {
    "colab": {
     "base_uri": "https://localhost:8080/"
    },
    "collapsed": true,
    "id": "HBigGePeu4au",
    "outputId": "9b26443c-9199-4afb-a6e0-5c0228d0dd7f"
   },
   "outputs": [
    {
     "data": {
      "text/html": [
       "\n",
       "  <div id=\"df-3b609a92-c61e-42cd-be1f-d28329789a1d\">\n",
       "    <div class=\"colab-df-container\">\n",
       "      <div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>InvoiceNo</th>\n",
       "      <th>StockCode</th>\n",
       "      <th>Description</th>\n",
       "      <th>Quantity</th>\n",
       "      <th>UnitPrice</th>\n",
       "      <th>CustomerID</th>\n",
       "      <th>Country</th>\n",
       "      <th>time_intervals</th>\n",
       "      <th>Total Price</th>\n",
       "      <th>Money_bins</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>77628</th>\n",
       "      <td>542776</td>\n",
       "      <td>21671</td>\n",
       "      <td>RED SPOT CERAMIC DRAWER KNOB</td>\n",
       "      <td>48</td>\n",
       "      <td>1.25</td>\n",
       "      <td>2124</td>\n",
       "      <td>United Kingdom</td>\n",
       "      <td>04:00-07:59</td>\n",
       "      <td>60.00</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>77629</th>\n",
       "      <td>542776</td>\n",
       "      <td>21668</td>\n",
       "      <td>RED STRIPE CERAMIC DRAWER KNOB</td>\n",
       "      <td>12</td>\n",
       "      <td>1.25</td>\n",
       "      <td>2124</td>\n",
       "      <td>United Kingdom</td>\n",
       "      <td>04:00-07:59</td>\n",
       "      <td>15.00</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>77630</th>\n",
       "      <td>542776</td>\n",
       "      <td>21670</td>\n",
       "      <td>BLUE SPOT CERAMIC DRAWER KNOB</td>\n",
       "      <td>12</td>\n",
       "      <td>1.25</td>\n",
       "      <td>2124</td>\n",
       "      <td>United Kingdom</td>\n",
       "      <td>04:00-07:59</td>\n",
       "      <td>15.00</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>77631</th>\n",
       "      <td>542776</td>\n",
       "      <td>17013D</td>\n",
       "      <td>ORIGAMI ROSE INCENSE IN TUBE</td>\n",
       "      <td>96</td>\n",
       "      <td>0.42</td>\n",
       "      <td>2124</td>\n",
       "      <td>United Kingdom</td>\n",
       "      <td>04:00-07:59</td>\n",
       "      <td>40.32</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>77632</th>\n",
       "      <td>542776</td>\n",
       "      <td>17096</td>\n",
       "      <td>ASSORTED LAQUERED INCENSE HOLDERS</td>\n",
       "      <td>48</td>\n",
       "      <td>0.21</td>\n",
       "      <td>2124</td>\n",
       "      <td>United Kingdom</td>\n",
       "      <td>04:00-07:59</td>\n",
       "      <td>10.08</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>...</th>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>105329</th>\n",
       "      <td>545218</td>\n",
       "      <td>85099B</td>\n",
       "      <td>JUMBO BAG RED RETROSPOT</td>\n",
       "      <td>10</td>\n",
       "      <td>1.95</td>\n",
       "      <td>3740</td>\n",
       "      <td>United Kingdom</td>\n",
       "      <td>16:00-19:59</td>\n",
       "      <td>19.50</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>105330</th>\n",
       "      <td>545218</td>\n",
       "      <td>21936</td>\n",
       "      <td>RED RETROSPOT PICNIC BAG</td>\n",
       "      <td>5</td>\n",
       "      <td>2.95</td>\n",
       "      <td>3740</td>\n",
       "      <td>United Kingdom</td>\n",
       "      <td>16:00-19:59</td>\n",
       "      <td>14.75</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>105331</th>\n",
       "      <td>545218</td>\n",
       "      <td>21932</td>\n",
       "      <td>SCANDINAVIAN PAISLEY PICNIC BAG</td>\n",
       "      <td>5</td>\n",
       "      <td>2.95</td>\n",
       "      <td>3740</td>\n",
       "      <td>United Kingdom</td>\n",
       "      <td>16:00-19:59</td>\n",
       "      <td>14.75</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>105332</th>\n",
       "      <td>545218</td>\n",
       "      <td>22386</td>\n",
       "      <td>JUMBO BAG PINK POLKADOT</td>\n",
       "      <td>10</td>\n",
       "      <td>1.95</td>\n",
       "      <td>3740</td>\n",
       "      <td>United Kingdom</td>\n",
       "      <td>16:00-19:59</td>\n",
       "      <td>19.50</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>105333</th>\n",
       "      <td>545218</td>\n",
       "      <td>21933</td>\n",
       "      <td>PINK VINTAGE PAISLEY PICNIC BAG</td>\n",
       "      <td>5</td>\n",
       "      <td>2.95</td>\n",
       "      <td>3740</td>\n",
       "      <td>United Kingdom</td>\n",
       "      <td>16:00-19:59</td>\n",
       "      <td>14.75</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "<p>27184 rows × 10 columns</p>\n",
       "</div>\n",
       "      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-3b609a92-c61e-42cd-be1f-d28329789a1d')\"\n",
       "              title=\"Convert this dataframe to an interactive table.\"\n",
       "              style=\"display:none;\">\n",
       "        \n",
       "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
       "       width=\"24px\">\n",
       "    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n",
       "    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n",
       "  </svg>\n",
       "      </button>\n",
       "      \n",
       "  <style>\n",
       "    .colab-df-container {\n",
       "      display:flex;\n",
       "      flex-wrap:wrap;\n",
       "      gap: 12px;\n",
       "    }\n",
       "\n",
       "    .colab-df-convert {\n",
       "      background-color: #E8F0FE;\n",
       "      border: none;\n",
       "      border-radius: 50%;\n",
       "      cursor: pointer;\n",
       "      display: none;\n",
       "      fill: #1967D2;\n",
       "      height: 32px;\n",
       "      padding: 0 0 0 0;\n",
       "      width: 32px;\n",
       "    }\n",
       "\n",
       "    .colab-df-convert:hover {\n",
       "      background-color: #E2EBFA;\n",
       "      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
       "      fill: #174EA6;\n",
       "    }\n",
       "\n",
       "    [theme=dark] .colab-df-convert {\n",
       "      background-color: #3B4455;\n",
       "      fill: #D2E3FC;\n",
       "    }\n",
       "\n",
       "    [theme=dark] .colab-df-convert:hover {\n",
       "      background-color: #434B5C;\n",
       "      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
       "      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
       "      fill: #FFFFFF;\n",
       "    }\n",
       "  </style>\n",
       "\n",
       "      <script>\n",
       "        const buttonEl =\n",
       "          document.querySelector('#df-3b609a92-c61e-42cd-be1f-d28329789a1d button.colab-df-convert');\n",
       "        buttonEl.style.display =\n",
       "          google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
       "\n",
       "        async function convertToInteractive(key) {\n",
       "          const element = document.querySelector('#df-3b609a92-c61e-42cd-be1f-d28329789a1d');\n",
       "          const dataTable =\n",
       "            await google.colab.kernel.invokeFunction('convertToInteractive',\n",
       "                                                     [key], {});\n",
       "          if (!dataTable) return;\n",
       "\n",
       "          const docLinkHtml = 'Like what you see? Visit the ' +\n",
       "            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n",
       "            + ' to learn more about interactive tables.';\n",
       "          element.innerHTML = '';\n",
       "          dataTable['output_type'] = 'display_data';\n",
       "          await google.colab.output.renderOutput(dataTable, element);\n",
       "          const docLink = document.createElement('div');\n",
       "          docLink.innerHTML = docLinkHtml;\n",
       "          element.appendChild(docLink);\n",
       "        }\n",
       "      </script>\n",
       "    </div>\n",
       "  </div>\n",
       "  "
      ],
      "text/plain": [
       "       InvoiceNo StockCode                        Description  Quantity  \\\n",
       "77628     542776     21671       RED SPOT CERAMIC DRAWER KNOB        48   \n",
       "77629     542776     21668     RED STRIPE CERAMIC DRAWER KNOB        12   \n",
       "77630     542776     21670      BLUE SPOT CERAMIC DRAWER KNOB        12   \n",
       "77631     542776    17013D       ORIGAMI ROSE INCENSE IN TUBE        96   \n",
       "77632     542776     17096  ASSORTED LAQUERED INCENSE HOLDERS        48   \n",
       "...          ...       ...                                ...       ...   \n",
       "105329    545218    85099B            JUMBO BAG RED RETROSPOT        10   \n",
       "105330    545218     21936           RED RETROSPOT PICNIC BAG         5   \n",
       "105331    545218     21932    SCANDINAVIAN PAISLEY PICNIC BAG         5   \n",
       "105332    545218     22386            JUMBO BAG PINK POLKADOT        10   \n",
       "105333    545218     21933    PINK VINTAGE PAISLEY PICNIC BAG         5   \n",
       "\n",
       "        UnitPrice  CustomerID         Country time_intervals  Total Price  \\\n",
       "77628        1.25        2124  United Kingdom    04:00-07:59        60.00   \n",
       "77629        1.25        2124  United Kingdom    04:00-07:59        15.00   \n",
       "77630        1.25        2124  United Kingdom    04:00-07:59        15.00   \n",
       "77631        0.42        2124  United Kingdom    04:00-07:59        40.32   \n",
       "77632        0.21        2124  United Kingdom    04:00-07:59        10.08   \n",
       "...           ...         ...             ...            ...          ...   \n",
       "105329       1.95        3740  United Kingdom    16:00-19:59        19.50   \n",
       "105330       2.95        3740  United Kingdom    16:00-19:59        14.75   \n",
       "105331       2.95        3740  United Kingdom    16:00-19:59        14.75   \n",
       "105332       1.95        3740  United Kingdom    16:00-19:59        19.50   \n",
       "105333       2.95        3740  United Kingdom    16:00-19:59        14.75   \n",
       "\n",
       "        Money_bins  \n",
       "77628            0  \n",
       "77629            0  \n",
       "77630            0  \n",
       "77631            0  \n",
       "77632            0  \n",
       "...            ...  \n",
       "105329           0  \n",
       "105330           0  \n",
       "105331           0  \n",
       "105332           0  \n",
       "105333           0  \n",
       "\n",
       "[27184 rows x 10 columns]"
      ]
     },
     "execution_count": 59,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "og_feb2011 = df_list_month_intervals[2]\n",
    "og_feb2011"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {
    "colab": {
     "base_uri": "https://localhost:8080/"
    },
    "collapsed": true,
    "id": "pNO-7fAnwV2d",
    "outputId": "1f41bb62-1736-4f61-a0e3-23ae71821d07"
   },
   "outputs": [
    {
     "data": {
      "text/html": [
       "\n",
       "  <div id=\"df-9c2245c0-4edc-440f-ad53-a32a2b759f2d\">\n",
       "    <div class=\"colab-df-container\">\n",
       "      <div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>No. of visits</th>\n",
       "      <th>Mean_purch</th>\n",
       "      <th>Sum_purch</th>\n",
       "      <th>Item_count</th>\n",
       "      <th>Total_quantity</th>\n",
       "      <th>Avg_quant</th>\n",
       "      <th>CustomerID</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>1</td>\n",
       "      <td>19.670588</td>\n",
       "      <td>334.40</td>\n",
       "      <td>17</td>\n",
       "      <td>197</td>\n",
       "      <td>11.588235</td>\n",
       "      <td>4</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>1</td>\n",
       "      <td>19.766667</td>\n",
       "      <td>296.50</td>\n",
       "      <td>15</td>\n",
       "      <td>98</td>\n",
       "      <td>6.533333</td>\n",
       "      <td>5</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>1</td>\n",
       "      <td>22.986375</td>\n",
       "      <td>1838.91</td>\n",
       "      <td>80</td>\n",
       "      <td>465</td>\n",
       "      <td>5.812500</td>\n",
       "      <td>12</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>1</td>\n",
       "      <td>18.990000</td>\n",
       "      <td>189.90</td>\n",
       "      <td>10</td>\n",
       "      <td>91</td>\n",
       "      <td>9.100000</td>\n",
       "      <td>14</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>1</td>\n",
       "      <td>17.744444</td>\n",
       "      <td>479.10</td>\n",
       "      <td>27</td>\n",
       "      <td>229</td>\n",
       "      <td>8.481481</td>\n",
       "      <td>15</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>...</th>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>754</th>\n",
       "      <td>1</td>\n",
       "      <td>29.100000</td>\n",
       "      <td>291.00</td>\n",
       "      <td>10</td>\n",
       "      <td>180</td>\n",
       "      <td>18.000000</td>\n",
       "      <td>4300</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>755</th>\n",
       "      <td>1</td>\n",
       "      <td>16.631905</td>\n",
       "      <td>349.27</td>\n",
       "      <td>21</td>\n",
       "      <td>199</td>\n",
       "      <td>9.476190</td>\n",
       "      <td>4314</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>756</th>\n",
       "      <td>2</td>\n",
       "      <td>22.737500</td>\n",
       "      <td>363.80</td>\n",
       "      <td>16</td>\n",
       "      <td>124</td>\n",
       "      <td>7.750000</td>\n",
       "      <td>4318</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>757</th>\n",
       "      <td>1</td>\n",
       "      <td>3.430000</td>\n",
       "      <td>102.90</td>\n",
       "      <td>29</td>\n",
       "      <td>59</td>\n",
       "      <td>1.966667</td>\n",
       "      <td>4337</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>758</th>\n",
       "      <td>128</td>\n",
       "      <td>10.542246</td>\n",
       "      <td>76494.54</td>\n",
       "      <td>1644</td>\n",
       "      <td>21057</td>\n",
       "      <td>2.902012</td>\n",
       "      <td>4339</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "<p>759 rows × 7 columns</p>\n",
       "</div>\n",
       "      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-9c2245c0-4edc-440f-ad53-a32a2b759f2d')\"\n",
       "              title=\"Convert this dataframe to an interactive table.\"\n",
       "              style=\"display:none;\">\n",
       "        \n",
       "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
       "       width=\"24px\">\n",
       "    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n",
       "    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n",
       "  </svg>\n",
       "      </button>\n",
       "      \n",
       "  <style>\n",
       "    .colab-df-container {\n",
       "      display:flex;\n",
       "      flex-wrap:wrap;\n",
       "      gap: 12px;\n",
       "    }\n",
       "\n",
       "    .colab-df-convert {\n",
       "      background-color: #E8F0FE;\n",
       "      border: none;\n",
       "      border-radius: 50%;\n",
       "      cursor: pointer;\n",
       "      display: none;\n",
       "      fill: #1967D2;\n",
       "      height: 32px;\n",
       "      padding: 0 0 0 0;\n",
       "      width: 32px;\n",
       "    }\n",
       "\n",
       "    .colab-df-convert:hover {\n",
       "      background-color: #E2EBFA;\n",
       "      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
       "      fill: #174EA6;\n",
       "    }\n",
       "\n",
       "    [theme=dark] .colab-df-convert {\n",
       "      background-color: #3B4455;\n",
       "      fill: #D2E3FC;\n",
       "    }\n",
       "\n",
       "    [theme=dark] .colab-df-convert:hover {\n",
       "      background-color: #434B5C;\n",
       "      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
       "      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
       "      fill: #FFFFFF;\n",
       "    }\n",
       "  </style>\n",
       "\n",
       "      <script>\n",
       "        const buttonEl =\n",
       "          document.querySelector('#df-9c2245c0-4edc-440f-ad53-a32a2b759f2d button.colab-df-convert');\n",
       "        buttonEl.style.display =\n",
       "          google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
       "\n",
       "        async function convertToInteractive(key) {\n",
       "          const element = document.querySelector('#df-9c2245c0-4edc-440f-ad53-a32a2b759f2d');\n",
       "          const dataTable =\n",
       "            await google.colab.kernel.invokeFunction('convertToInteractive',\n",
       "                                                     [key], {});\n",
       "          if (!dataTable) return;\n",
       "\n",
       "          const docLinkHtml = 'Like what you see? Visit the ' +\n",
       "            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n",
       "            + ' to learn more about interactive tables.';\n",
       "          element.innerHTML = '';\n",
       "          dataTable['output_type'] = 'display_data';\n",
       "          await google.colab.output.renderOutput(dataTable, element);\n",
       "          const docLink = document.createElement('div');\n",
       "          docLink.innerHTML = docLinkHtml;\n",
       "          element.appendChild(docLink);\n",
       "        }\n",
       "      </script>\n",
       "    </div>\n",
       "  </div>\n",
       "  "
      ],
      "text/plain": [
       "     No. of visits  Mean_purch  Sum_purch  Item_count  Total_quantity  \\\n",
       "0                1   19.670588     334.40          17             197   \n",
       "1                1   19.766667     296.50          15              98   \n",
       "2                1   22.986375    1838.91          80             465   \n",
       "3                1   18.990000     189.90          10              91   \n",
       "4                1   17.744444     479.10          27             229   \n",
       "..             ...         ...        ...         ...             ...   \n",
       "754              1   29.100000     291.00          10             180   \n",
       "755              1   16.631905     349.27          21             199   \n",
       "756              2   22.737500     363.80          16             124   \n",
       "757              1    3.430000     102.90          29              59   \n",
       "758            128   10.542246   76494.54        1644           21057   \n",
       "\n",
       "     Avg_quant  CustomerID  \n",
       "0    11.588235           4  \n",
       "1     6.533333           5  \n",
       "2     5.812500          12  \n",
       "3     9.100000          14  \n",
       "4     8.481481          15  \n",
       "..         ...         ...  \n",
       "754  18.000000        4300  \n",
       "755   9.476190        4314  \n",
       "756   7.750000        4318  \n",
       "757   1.966667        4337  \n",
       "758   2.902012        4339  \n",
       "\n",
       "[759 rows x 7 columns]"
      ]
     },
     "execution_count": 60,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "#For Feb 2011\n",
    "dvt_feb2011= person_df(og_feb2011) #Our function gives such a dataframe\n",
    "#By which we can form clusters using KMeans\n",
    "dvt_feb2011"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {
    "colab": {
     "base_uri": "https://localhost:8080/"
    },
    "collapsed": true,
    "id": "CeogyNinwdHR",
    "outputId": "f3fa3781-29b4-4567-e620-3df769594940"
   },
   "outputs": [
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "/usr/local/lib/python3.9/dist-packages/sklearn/cluster/_kmeans.py:870: FutureWarning: The default value of `n_init` will change from 10 to 'auto' in 1.4. Set the value of `n_init` explicitly to suppress the warning\n",
      "  warnings.warn(\n"
     ]
    },
    {
     "data": {
      "text/html": [
       "\n",
       "  <div id=\"df-c5bc7a0f-0adb-4ddb-87e7-59899a83df1c\">\n",
       "    <div class=\"colab-df-container\">\n",
       "      <div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>No. of visits</th>\n",
       "      <th>Mean_purch</th>\n",
       "      <th>Sum_purch</th>\n",
       "      <th>Item_count</th>\n",
       "      <th>Total_quantity</th>\n",
       "      <th>Avg_quant</th>\n",
       "      <th>CustomerID</th>\n",
       "      <th>cluster_labels</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>1</td>\n",
       "      <td>19.670588</td>\n",
       "      <td>334.40</td>\n",
       "      <td>17</td>\n",
       "      <td>197</td>\n",
       "      <td>11.588235</td>\n",
       "      <td>4</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>1</td>\n",
       "      <td>19.766667</td>\n",
       "      <td>296.50</td>\n",
       "      <td>15</td>\n",
       "      <td>98</td>\n",
       "      <td>6.533333</td>\n",
       "      <td>5</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>1</td>\n",
       "      <td>22.986375</td>\n",
       "      <td>1838.91</td>\n",
       "      <td>80</td>\n",
       "      <td>465</td>\n",
       "      <td>5.812500</td>\n",
       "      <td>12</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>1</td>\n",
       "      <td>18.990000</td>\n",
       "      <td>189.90</td>\n",
       "      <td>10</td>\n",
       "      <td>91</td>\n",
       "      <td>9.100000</td>\n",
       "      <td>14</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>1</td>\n",
       "      <td>17.744444</td>\n",
       "      <td>479.10</td>\n",
       "      <td>27</td>\n",
       "      <td>229</td>\n",
       "      <td>8.481481</td>\n",
       "      <td>15</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>...</th>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>754</th>\n",
       "      <td>1</td>\n",
       "      <td>29.100000</td>\n",
       "      <td>291.00</td>\n",
       "      <td>10</td>\n",
       "      <td>180</td>\n",
       "      <td>18.000000</td>\n",
       "      <td>4300</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>755</th>\n",
       "      <td>1</td>\n",
       "      <td>16.631905</td>\n",
       "      <td>349.27</td>\n",
       "      <td>21</td>\n",
       "      <td>199</td>\n",
       "      <td>9.476190</td>\n",
       "      <td>4314</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>756</th>\n",
       "      <td>2</td>\n",
       "      <td>22.737500</td>\n",
       "      <td>363.80</td>\n",
       "      <td>16</td>\n",
       "      <td>124</td>\n",
       "      <td>7.750000</td>\n",
       "      <td>4318</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>757</th>\n",
       "      <td>1</td>\n",
       "      <td>3.430000</td>\n",
       "      <td>102.90</td>\n",
       "      <td>29</td>\n",
       "      <td>59</td>\n",
       "      <td>1.966667</td>\n",
       "      <td>4337</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>758</th>\n",
       "      <td>128</td>\n",
       "      <td>10.542246</td>\n",
       "      <td>76494.54</td>\n",
       "      <td>1644</td>\n",
       "      <td>21057</td>\n",
       "      <td>2.902012</td>\n",
       "      <td>4339</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "<p>759 rows × 8 columns</p>\n",
       "</div>\n",
       "      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-c5bc7a0f-0adb-4ddb-87e7-59899a83df1c')\"\n",
       "              title=\"Convert this dataframe to an interactive table.\"\n",
       "              style=\"display:none;\">\n",
       "        \n",
       "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
       "       width=\"24px\">\n",
       "    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n",
       "    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n",
       "  </svg>\n",
       "      </button>\n",
       "      \n",
       "  <style>\n",
       "    .colab-df-container {\n",
       "      display:flex;\n",
       "      flex-wrap:wrap;\n",
       "      gap: 12px;\n",
       "    }\n",
       "\n",
       "    .colab-df-convert {\n",
       "      background-color: #E8F0FE;\n",
       "      border: none;\n",
       "      border-radius: 50%;\n",
       "      cursor: pointer;\n",
       "      display: none;\n",
       "      fill: #1967D2;\n",
       "      height: 32px;\n",
       "      padding: 0 0 0 0;\n",
       "      width: 32px;\n",
       "    }\n",
       "\n",
       "    .colab-df-convert:hover {\n",
       "      background-color: #E2EBFA;\n",
       "      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
       "      fill: #174EA6;\n",
       "    }\n",
       "\n",
       "    [theme=dark] .colab-df-convert {\n",
       "      background-color: #3B4455;\n",
       "      fill: #D2E3FC;\n",
       "    }\n",
       "\n",
       "    [theme=dark] .colab-df-convert:hover {\n",
       "      background-color: #434B5C;\n",
       "      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
       "      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
       "      fill: #FFFFFF;\n",
       "    }\n",
       "  </style>\n",
       "\n",
       "      <script>\n",
       "        const buttonEl =\n",
       "          document.querySelector('#df-c5bc7a0f-0adb-4ddb-87e7-59899a83df1c button.colab-df-convert');\n",
       "        buttonEl.style.display =\n",
       "          google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
       "\n",
       "        async function convertToInteractive(key) {\n",
       "          const element = document.querySelector('#df-c5bc7a0f-0adb-4ddb-87e7-59899a83df1c');\n",
       "          const dataTable =\n",
       "            await google.colab.kernel.invokeFunction('convertToInteractive',\n",
       "                                                     [key], {});\n",
       "          if (!dataTable) return;\n",
       "\n",
       "          const docLinkHtml = 'Like what you see? Visit the ' +\n",
       "            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n",
       "            + ' to learn more about interactive tables.';\n",
       "          element.innerHTML = '';\n",
       "          dataTable['output_type'] = 'display_data';\n",
       "          await google.colab.output.renderOutput(dataTable, element);\n",
       "          const docLink = document.createElement('div');\n",
       "          docLink.innerHTML = docLinkHtml;\n",
       "          element.appendChild(docLink);\n",
       "        }\n",
       "      </script>\n",
       "    </div>\n",
       "  </div>\n",
       "  "
      ],
      "text/plain": [
       "     No. of visits  Mean_purch  Sum_purch  Item_count  Total_quantity  \\\n",
       "0                1   19.670588     334.40          17             197   \n",
       "1                1   19.766667     296.50          15              98   \n",
       "2                1   22.986375    1838.91          80             465   \n",
       "3                1   18.990000     189.90          10              91   \n",
       "4                1   17.744444     479.10          27             229   \n",
       "..             ...         ...        ...         ...             ...   \n",
       "754              1   29.100000     291.00          10             180   \n",
       "755              1   16.631905     349.27          21             199   \n",
       "756              2   22.737500     363.80          16             124   \n",
       "757              1    3.430000     102.90          29              59   \n",
       "758            128   10.542246   76494.54        1644           21057   \n",
       "\n",
       "     Avg_quant  CustomerID  cluster_labels  \n",
       "0    11.588235           4               0  \n",
       "1     6.533333           5               0  \n",
       "2     5.812500          12               0  \n",
       "3     9.100000          14               0  \n",
       "4     8.481481          15               0  \n",
       "..         ...         ...             ...  \n",
       "754  18.000000        4300               0  \n",
       "755   9.476190        4314               0  \n",
       "756   7.750000        4318               0  \n",
       "757   1.966667        4337               0  \n",
       "758   2.902012        4339               1  \n",
       "\n",
       "[759 rows x 8 columns]"
      ]
     },
     "execution_count": 61,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "df_feb2011 = df_cluster_labels(dvt_feb2011,3)\n",
    "df_feb2011"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {
    "colab": {
     "base_uri": "https://localhost:8080/"
    },
    "id": "fZ7IreGJme0Q",
    "outputId": "7a6fc4b5-20b7-4863-fd8e-9396bfa5ba69"
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "The Silhouette Score is :- 0.7862449474902387\n"
     ]
    }
   ],
   "source": [
    "silhte_score_feb2011 = silhouette_score(dvt_feb2011, df_feb2011['cluster_labels'])\n",
    "print(\"The Silhouette Score is :- \"+str(silhte_score_feb2011))"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {
    "colab": {
     "base_uri": "https://localhost:8080/"
    },
    "collapsed": true,
    "id": "-_o86-yFwjBF",
    "outputId": "951e4ebb-7707-4251-fe0b-f86d8c3ba1d4"
   },
   "outputs": [
    {
     "data": {
      "text/plain": [
       "0    742\n",
       "2     16\n",
       "1      1\n",
       "Name: cluster_labels, dtype: int64"
      ]
     },
     "execution_count": 63,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "df_feb2011['cluster_labels'].value_counts()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {
    "colab": {
     "base_uri": "https://localhost:8080/"
    },
    "collapsed": true,
    "id": "TcyZr19yw1Kt",
    "outputId": "44e369c1-9653-4f29-bc98-360a01403901"
   },
   "outputs": [
    {
     "data": {
      "image/png": "",
      "text/plain": [
       "<Figure size 640x480 with 1 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "plt.scatter(df_feb2011['Mean_purch'], df_feb2011['Sum_purch'], c=df_feb2011['cluster_labels'], cmap='viridis')\n",
    "plt.title(\"For Feb 2011\")\n",
    "plt.xlabel('Mean_purch')\n",
    "plt.ylabel('Sum_purch')\n",
    "plt.show()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {
    "colab": {
     "base_uri": "https://localhost:8080/"
    },
    "collapsed": true,
    "id": "tL41zRTxxYav",
    "outputId": "c08abce4-cc33-40f8-fe6d-c26748876f32"
   },
   "outputs": [
    {
     "data": {
      "text/html": [
       "\n",
       "  <div id=\"df-ae687aef-22db-4736-b772-5929f99b2897\">\n",
       "    <div class=\"colab-df-container\">\n",
       "      <div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>No. of visits</th>\n",
       "      <th>Mean_purch</th>\n",
       "      <th>Sum_purch</th>\n",
       "      <th>Item_count</th>\n",
       "      <th>Total_quantity</th>\n",
       "      <th>Avg_quant</th>\n",
       "      <th>CustomerID</th>\n",
       "      <th>cluster_labels</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>1</td>\n",
       "      <td>19.670588</td>\n",
       "      <td>334.40</td>\n",
       "      <td>17</td>\n",
       "      <td>197</td>\n",
       "      <td>11.588235</td>\n",
       "      <td>4</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>1</td>\n",
       "      <td>19.766667</td>\n",
       "      <td>296.50</td>\n",
       "      <td>15</td>\n",
       "      <td>98</td>\n",
       "      <td>6.533333</td>\n",
       "      <td>5</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>1</td>\n",
       "      <td>22.986375</td>\n",
       "      <td>1838.91</td>\n",
       "      <td>80</td>\n",
       "      <td>465</td>\n",
       "      <td>5.812500</td>\n",
       "      <td>12</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>1</td>\n",
       "      <td>18.990000</td>\n",
       "      <td>189.90</td>\n",
       "      <td>10</td>\n",
       "      <td>91</td>\n",
       "      <td>9.100000</td>\n",
       "      <td>14</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>1</td>\n",
       "      <td>17.744444</td>\n",
       "      <td>479.10</td>\n",
       "      <td>27</td>\n",
       "      <td>229</td>\n",
       "      <td>8.481481</td>\n",
       "      <td>15</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>...</th>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>753</th>\n",
       "      <td>1</td>\n",
       "      <td>25.823333</td>\n",
       "      <td>464.82</td>\n",
       "      <td>18</td>\n",
       "      <td>212</td>\n",
       "      <td>11.777778</td>\n",
       "      <td>4299</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>754</th>\n",
       "      <td>1</td>\n",
       "      <td>29.100000</td>\n",
       "      <td>291.00</td>\n",
       "      <td>10</td>\n",
       "      <td>180</td>\n",
       "      <td>18.000000</td>\n",
       "      <td>4300</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>755</th>\n",
       "      <td>1</td>\n",
       "      <td>16.631905</td>\n",
       "      <td>349.27</td>\n",
       "      <td>21</td>\n",
       "      <td>199</td>\n",
       "      <td>9.476190</td>\n",
       "      <td>4314</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>756</th>\n",
       "      <td>2</td>\n",
       "      <td>22.737500</td>\n",
       "      <td>363.80</td>\n",
       "      <td>16</td>\n",
       "      <td>124</td>\n",
       "      <td>7.750000</td>\n",
       "      <td>4318</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>757</th>\n",
       "      <td>1</td>\n",
       "      <td>3.430000</td>\n",
       "      <td>102.90</td>\n",
       "      <td>29</td>\n",
       "      <td>59</td>\n",
       "      <td>1.966667</td>\n",
       "      <td>4337</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "<p>758 rows × 8 columns</p>\n",
       "</div>\n",
       "      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-ae687aef-22db-4736-b772-5929f99b2897')\"\n",
       "              title=\"Convert this dataframe to an interactive table.\"\n",
       "              style=\"display:none;\">\n",
       "        \n",
       "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
       "       width=\"24px\">\n",
       "    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n",
       "    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n",
       "  </svg>\n",
       "      </button>\n",
       "      \n",
       "  <style>\n",
       "    .colab-df-container {\n",
       "      display:flex;\n",
       "      flex-wrap:wrap;\n",
       "      gap: 12px;\n",
       "    }\n",
       "\n",
       "    .colab-df-convert {\n",
       "      background-color: #E8F0FE;\n",
       "      border: none;\n",
       "      border-radius: 50%;\n",
       "      cursor: pointer;\n",
       "      display: none;\n",
       "      fill: #1967D2;\n",
       "      height: 32px;\n",
       "      padding: 0 0 0 0;\n",
       "      width: 32px;\n",
       "    }\n",
       "\n",
       "    .colab-df-convert:hover {\n",
       "      background-color: #E2EBFA;\n",
       "      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
       "      fill: #174EA6;\n",
       "    }\n",
       "\n",
       "    [theme=dark] .colab-df-convert {\n",
       "      background-color: #3B4455;\n",
       "      fill: #D2E3FC;\n",
       "    }\n",
       "\n",
       "    [theme=dark] .colab-df-convert:hover {\n",
       "      background-color: #434B5C;\n",
       "      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
       "      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
       "      fill: #FFFFFF;\n",
       "    }\n",
       "  </style>\n",
       "\n",
       "      <script>\n",
       "        const buttonEl =\n",
       "          document.querySelector('#df-ae687aef-22db-4736-b772-5929f99b2897 button.colab-df-convert');\n",
       "        buttonEl.style.display =\n",
       "          google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
       "\n",
       "        async function convertToInteractive(key) {\n",
       "          const element = document.querySelector('#df-ae687aef-22db-4736-b772-5929f99b2897');\n",
       "          const dataTable =\n",
       "            await google.colab.kernel.invokeFunction('convertToInteractive',\n",
       "                                                     [key], {});\n",
       "          if (!dataTable) return;\n",
       "\n",
       "          const docLinkHtml = 'Like what you see? Visit the ' +\n",
       "            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n",
       "            + ' to learn more about interactive tables.';\n",
       "          element.innerHTML = '';\n",
       "          dataTable['output_type'] = 'display_data';\n",
       "          await google.colab.output.renderOutput(dataTable, element);\n",
       "          const docLink = document.createElement('div');\n",
       "          docLink.innerHTML = docLinkHtml;\n",
       "          element.appendChild(docLink);\n",
       "        }\n",
       "      </script>\n",
       "    </div>\n",
       "  </div>\n",
       "  "
      ],
      "text/plain": [
       "     No. of visits  Mean_purch  Sum_purch  Item_count  Total_quantity  \\\n",
       "0                1   19.670588     334.40          17             197   \n",
       "1                1   19.766667     296.50          15              98   \n",
       "2                1   22.986375    1838.91          80             465   \n",
       "3                1   18.990000     189.90          10              91   \n",
       "4                1   17.744444     479.10          27             229   \n",
       "..             ...         ...        ...         ...             ...   \n",
       "753              1   25.823333     464.82          18             212   \n",
       "754              1   29.100000     291.00          10             180   \n",
       "755              1   16.631905     349.27          21             199   \n",
       "756              2   22.737500     363.80          16             124   \n",
       "757              1    3.430000     102.90          29              59   \n",
       "\n",
       "     Avg_quant  CustomerID  cluster_labels  \n",
       "0    11.588235           4               0  \n",
       "1     6.533333           5               0  \n",
       "2     5.812500          12               0  \n",
       "3     9.100000          14               0  \n",
       "4     8.481481          15               0  \n",
       "..         ...         ...             ...  \n",
       "753  11.777778        4299               0  \n",
       "754  18.000000        4300               0  \n",
       "755   9.476190        4314               0  \n",
       "756   7.750000        4318               0  \n",
       "757   1.966667        4337               0  \n",
       "\n",
       "[758 rows x 8 columns]"
      ]
     },
     "execution_count": 65,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "df_feb2011 = df_feb2011[df_feb2011['cluster_labels']!=1]\n",
    "df_feb2011"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {
    "colab": {
     "base_uri": "https://localhost:8080/"
    },
    "collapsed": true,
    "id": "1LtKdAFQxnNC",
    "outputId": "8ee610e2-9204-42ba-b843-0924305650ac"
   },
   "outputs": [
    {
     "data": {
      "text/plain": [
       "0    742\n",
       "2     16\n",
       "Name: cluster_labels, dtype: int64"
      ]
     },
     "execution_count": 66,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "df_feb2011['cluster_labels'].value_counts()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {
    "colab": {
     "base_uri": "https://localhost:8080/"
    },
    "collapsed": true,
    "id": "FocBzLPBxtNM",
    "outputId": "ff2c2f8e-6a05-4310-bc78-d51517119e96"
   },
   "outputs": [
    {
     "data": {
      "text/html": [
       "\n",
       "  <div id=\"df-1979c730-96a1-42b5-ac3a-b5c973ac085f\">\n",
       "    <div class=\"colab-df-container\">\n",
       "      <div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>No. of visits</th>\n",
       "      <th>Mean_purch</th>\n",
       "      <th>Sum_purch</th>\n",
       "      <th>Item_count</th>\n",
       "      <th>Total_quantity</th>\n",
       "      <th>Avg_quant</th>\n",
       "      <th>CustomerID</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>1</td>\n",
       "      <td>19.670588</td>\n",
       "      <td>334.40</td>\n",
       "      <td>17</td>\n",
       "      <td>197</td>\n",
       "      <td>11.588235</td>\n",
       "      <td>4</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>1</td>\n",
       "      <td>19.766667</td>\n",
       "      <td>296.50</td>\n",
       "      <td>15</td>\n",
       "      <td>98</td>\n",
       "      <td>6.533333</td>\n",
       "      <td>5</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>1</td>\n",
       "      <td>22.986375</td>\n",
       "      <td>1838.91</td>\n",
       "      <td>80</td>\n",
       "      <td>465</td>\n",
       "      <td>5.812500</td>\n",
       "      <td>12</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>1</td>\n",
       "      <td>18.990000</td>\n",
       "      <td>189.90</td>\n",
       "      <td>10</td>\n",
       "      <td>91</td>\n",
       "      <td>9.100000</td>\n",
       "      <td>14</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>1</td>\n",
       "      <td>17.744444</td>\n",
       "      <td>479.10</td>\n",
       "      <td>27</td>\n",
       "      <td>229</td>\n",
       "      <td>8.481481</td>\n",
       "      <td>15</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>...</th>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>753</th>\n",
       "      <td>1</td>\n",
       "      <td>25.823333</td>\n",
       "      <td>464.82</td>\n",
       "      <td>18</td>\n",
       "      <td>212</td>\n",
       "      <td>11.777778</td>\n",
       "      <td>4299</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>754</th>\n",
       "      <td>1</td>\n",
       "      <td>29.100000</td>\n",
       "      <td>291.00</td>\n",
       "      <td>10</td>\n",
       "      <td>180</td>\n",
       "      <td>18.000000</td>\n",
       "      <td>4300</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>755</th>\n",
       "      <td>1</td>\n",
       "      <td>16.631905</td>\n",
       "      <td>349.27</td>\n",
       "      <td>21</td>\n",
       "      <td>199</td>\n",
       "      <td>9.476190</td>\n",
       "      <td>4314</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>756</th>\n",
       "      <td>2</td>\n",
       "      <td>22.737500</td>\n",
       "      <td>363.80</td>\n",
       "      <td>16</td>\n",
       "      <td>124</td>\n",
       "      <td>7.750000</td>\n",
       "      <td>4318</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>757</th>\n",
       "      <td>1</td>\n",
       "      <td>3.430000</td>\n",
       "      <td>102.90</td>\n",
       "      <td>29</td>\n",
       "      <td>59</td>\n",
       "      <td>1.966667</td>\n",
       "      <td>4337</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "<p>758 rows × 7 columns</p>\n",
       "</div>\n",
       "      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-1979c730-96a1-42b5-ac3a-b5c973ac085f')\"\n",
       "              title=\"Convert this dataframe to an interactive table.\"\n",
       "              style=\"display:none;\">\n",
       "        \n",
       "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
       "       width=\"24px\">\n",
       "    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n",
       "    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n",
       "  </svg>\n",
       "      </button>\n",
       "      \n",
       "  <style>\n",
       "    .colab-df-container {\n",
       "      display:flex;\n",
       "      flex-wrap:wrap;\n",
       "      gap: 12px;\n",
       "    }\n",
       "\n",
       "    .colab-df-convert {\n",
       "      background-color: #E8F0FE;\n",
       "      border: none;\n",
       "      border-radius: 50%;\n",
       "      cursor: pointer;\n",
       "      display: none;\n",
       "      fill: #1967D2;\n",
       "      height: 32px;\n",
       "      padding: 0 0 0 0;\n",
       "      width: 32px;\n",
       "    }\n",
       "\n",
       "    .colab-df-convert:hover {\n",
       "      background-color: #E2EBFA;\n",
       "      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
       "      fill: #174EA6;\n",
       "    }\n",
       "\n",
       "    [theme=dark] .colab-df-convert {\n",
       "      background-color: #3B4455;\n",
       "      fill: #D2E3FC;\n",
       "    }\n",
       "\n",
       "    [theme=dark] .colab-df-convert:hover {\n",
       "      background-color: #434B5C;\n",
       "      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
       "      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
       "      fill: #FFFFFF;\n",
       "    }\n",
       "  </style>\n",
       "\n",
       "      <script>\n",
       "        const buttonEl =\n",
       "          document.querySelector('#df-1979c730-96a1-42b5-ac3a-b5c973ac085f button.colab-df-convert');\n",
       "        buttonEl.style.display =\n",
       "          google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
       "\n",
       "        async function convertToInteractive(key) {\n",
       "          const element = document.querySelector('#df-1979c730-96a1-42b5-ac3a-b5c973ac085f');\n",
       "          const dataTable =\n",
       "            await google.colab.kernel.invokeFunction('convertToInteractive',\n",
       "                                                     [key], {});\n",
       "          if (!dataTable) return;\n",
       "\n",
       "          const docLinkHtml = 'Like what you see? Visit the ' +\n",
       "            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n",
       "            + ' to learn more about interactive tables.';\n",
       "          element.innerHTML = '';\n",
       "          dataTable['output_type'] = 'display_data';\n",
       "          await google.colab.output.renderOutput(dataTable, element);\n",
       "          const docLink = document.createElement('div');\n",
       "          docLink.innerHTML = docLinkHtml;\n",
       "          element.appendChild(docLink);\n",
       "        }\n",
       "      </script>\n",
       "    </div>\n",
       "  </div>\n",
       "  "
      ],
      "text/plain": [
       "     No. of visits  Mean_purch  Sum_purch  Item_count  Total_quantity  \\\n",
       "0                1   19.670588     334.40          17             197   \n",
       "1                1   19.766667     296.50          15              98   \n",
       "2                1   22.986375    1838.91          80             465   \n",
       "3                1   18.990000     189.90          10              91   \n",
       "4                1   17.744444     479.10          27             229   \n",
       "..             ...         ...        ...         ...             ...   \n",
       "753              1   25.823333     464.82          18             212   \n",
       "754              1   29.100000     291.00          10             180   \n",
       "755              1   16.631905     349.27          21             199   \n",
       "756              2   22.737500     363.80          16             124   \n",
       "757              1    3.430000     102.90          29              59   \n",
       "\n",
       "     Avg_quant  CustomerID  \n",
       "0    11.588235           4  \n",
       "1     6.533333           5  \n",
       "2     5.812500          12  \n",
       "3     9.100000          14  \n",
       "4     8.481481          15  \n",
       "..         ...         ...  \n",
       "753  11.777778        4299  \n",
       "754  18.000000        4300  \n",
       "755   9.476190        4314  \n",
       "756   7.750000        4318  \n",
       "757   1.966667        4337  \n",
       "\n",
       "[758 rows x 7 columns]"
      ]
     },
     "execution_count": 67,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "df_feb2011_person = df_feb2011.copy(deep=True)\n",
    "df_feb2011_person.drop(['cluster_labels'],axis=1,inplace=True)\n",
    "df_feb2011_person"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {
    "colab": {
     "base_uri": "https://localhost:8080/"
    },
    "collapsed": true,
    "id": "j3Wu9Bqpxx9V",
    "outputId": "c6d3dfa4-aa35-491d-b48d-1cc7118f479d"
   },
   "outputs": [
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "/usr/local/lib/python3.9/dist-packages/sklearn/cluster/_kmeans.py:870: FutureWarning: The default value of `n_init` will change from 10 to 'auto' in 1.4. Set the value of `n_init` explicitly to suppress the warning\n",
      "  warnings.warn(\n"
     ]
    },
    {
     "data": {
      "text/html": [
       "\n",
       "  <div id=\"df-c753a150-5316-448c-9b7c-d56a1045a116\">\n",
       "    <div class=\"colab-df-container\">\n",
       "      <div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>No. of visits</th>\n",
       "      <th>Mean_purch</th>\n",
       "      <th>Sum_purch</th>\n",
       "      <th>Item_count</th>\n",
       "      <th>Total_quantity</th>\n",
       "      <th>Avg_quant</th>\n",
       "      <th>CustomerID</th>\n",
       "      <th>cluster_labels</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>1</td>\n",
       "      <td>19.670588</td>\n",
       "      <td>334.40</td>\n",
       "      <td>17</td>\n",
       "      <td>197</td>\n",
       "      <td>11.588235</td>\n",
       "      <td>4</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>1</td>\n",
       "      <td>19.766667</td>\n",
       "      <td>296.50</td>\n",
       "      <td>15</td>\n",
       "      <td>98</td>\n",
       "      <td>6.533333</td>\n",
       "      <td>5</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>1</td>\n",
       "      <td>22.986375</td>\n",
       "      <td>1838.91</td>\n",
       "      <td>80</td>\n",
       "      <td>465</td>\n",
       "      <td>5.812500</td>\n",
       "      <td>12</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>1</td>\n",
       "      <td>18.990000</td>\n",
       "      <td>189.90</td>\n",
       "      <td>10</td>\n",
       "      <td>91</td>\n",
       "      <td>9.100000</td>\n",
       "      <td>14</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>1</td>\n",
       "      <td>17.744444</td>\n",
       "      <td>479.10</td>\n",
       "      <td>27</td>\n",
       "      <td>229</td>\n",
       "      <td>8.481481</td>\n",
       "      <td>15</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>...</th>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>753</th>\n",
       "      <td>1</td>\n",
       "      <td>25.823333</td>\n",
       "      <td>464.82</td>\n",
       "      <td>18</td>\n",
       "      <td>212</td>\n",
       "      <td>11.777778</td>\n",
       "      <td>4299</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>754</th>\n",
       "      <td>1</td>\n",
       "      <td>29.100000</td>\n",
       "      <td>291.00</td>\n",
       "      <td>10</td>\n",
       "      <td>180</td>\n",
       "      <td>18.000000</td>\n",
       "      <td>4300</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>755</th>\n",
       "      <td>1</td>\n",
       "      <td>16.631905</td>\n",
       "      <td>349.27</td>\n",
       "      <td>21</td>\n",
       "      <td>199</td>\n",
       "      <td>9.476190</td>\n",
       "      <td>4314</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>756</th>\n",
       "      <td>2</td>\n",
       "      <td>22.737500</td>\n",
       "      <td>363.80</td>\n",
       "      <td>16</td>\n",
       "      <td>124</td>\n",
       "      <td>7.750000</td>\n",
       "      <td>4318</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>757</th>\n",
       "      <td>1</td>\n",
       "      <td>3.430000</td>\n",
       "      <td>102.90</td>\n",
       "      <td>29</td>\n",
       "      <td>59</td>\n",
       "      <td>1.966667</td>\n",
       "      <td>4337</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "<p>758 rows × 8 columns</p>\n",
       "</div>\n",
       "      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-c753a150-5316-448c-9b7c-d56a1045a116')\"\n",
       "              title=\"Convert this dataframe to an interactive table.\"\n",
       "              style=\"display:none;\">\n",
       "        \n",
       "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
       "       width=\"24px\">\n",
       "    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n",
       "    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n",
       "  </svg>\n",
       "      </button>\n",
       "      \n",
       "  <style>\n",
       "    .colab-df-container {\n",
       "      display:flex;\n",
       "      flex-wrap:wrap;\n",
       "      gap: 12px;\n",
       "    }\n",
       "\n",
       "    .colab-df-convert {\n",
       "      background-color: #E8F0FE;\n",
       "      border: none;\n",
       "      border-radius: 50%;\n",
       "      cursor: pointer;\n",
       "      display: none;\n",
       "      fill: #1967D2;\n",
       "      height: 32px;\n",
       "      padding: 0 0 0 0;\n",
       "      width: 32px;\n",
       "    }\n",
       "\n",
       "    .colab-df-convert:hover {\n",
       "      background-color: #E2EBFA;\n",
       "      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
       "      fill: #174EA6;\n",
       "    }\n",
       "\n",
       "    [theme=dark] .colab-df-convert {\n",
       "      background-color: #3B4455;\n",
       "      fill: #D2E3FC;\n",
       "    }\n",
       "\n",
       "    [theme=dark] .colab-df-convert:hover {\n",
       "      background-color: #434B5C;\n",
       "      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
       "      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
       "      fill: #FFFFFF;\n",
       "    }\n",
       "  </style>\n",
       "\n",
       "      <script>\n",
       "        const buttonEl =\n",
       "          document.querySelector('#df-c753a150-5316-448c-9b7c-d56a1045a116 button.colab-df-convert');\n",
       "        buttonEl.style.display =\n",
       "          google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
       "\n",
       "        async function convertToInteractive(key) {\n",
       "          const element = document.querySelector('#df-c753a150-5316-448c-9b7c-d56a1045a116');\n",
       "          const dataTable =\n",
       "            await google.colab.kernel.invokeFunction('convertToInteractive',\n",
       "                                                     [key], {});\n",
       "          if (!dataTable) return;\n",
       "\n",
       "          const docLinkHtml = 'Like what you see? Visit the ' +\n",
       "            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n",
       "            + ' to learn more about interactive tables.';\n",
       "          element.innerHTML = '';\n",
       "          dataTable['output_type'] = 'display_data';\n",
       "          await google.colab.output.renderOutput(dataTable, element);\n",
       "          const docLink = document.createElement('div');\n",
       "          docLink.innerHTML = docLinkHtml;\n",
       "          element.appendChild(docLink);\n",
       "        }\n",
       "      </script>\n",
       "    </div>\n",
       "  </div>\n",
       "  "
      ],
      "text/plain": [
       "     No. of visits  Mean_purch  Sum_purch  Item_count  Total_quantity  \\\n",
       "0                1   19.670588     334.40          17             197   \n",
       "1                1   19.766667     296.50          15              98   \n",
       "2                1   22.986375    1838.91          80             465   \n",
       "3                1   18.990000     189.90          10              91   \n",
       "4                1   17.744444     479.10          27             229   \n",
       "..             ...         ...        ...         ...             ...   \n",
       "753              1   25.823333     464.82          18             212   \n",
       "754              1   29.100000     291.00          10             180   \n",
       "755              1   16.631905     349.27          21             199   \n",
       "756              2   22.737500     363.80          16             124   \n",
       "757              1    3.430000     102.90          29              59   \n",
       "\n",
       "     Avg_quant  CustomerID  cluster_labels  \n",
       "0    11.588235           4               0  \n",
       "1     6.533333           5               0  \n",
       "2     5.812500          12               0  \n",
       "3     9.100000          14               0  \n",
       "4     8.481481          15               0  \n",
       "..         ...         ...             ...  \n",
       "753  11.777778        4299               1  \n",
       "754  18.000000        4300               1  \n",
       "755   9.476190        4314               1  \n",
       "756   7.750000        4318               1  \n",
       "757   1.966667        4337               1  \n",
       "\n",
       "[758 rows x 8 columns]"
      ]
     },
     "execution_count": 68,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "df_feb2011_new = df_cluster_labels(df_feb2011_person,3)\n",
    "df_feb2011_new"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {
    "colab": {
     "base_uri": "https://localhost:8080/"
    },
    "id": "h-gfC04_mzwb",
    "outputId": "64aa5d59-a026-4c21-ee94-71357ad4aa79"
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "The Silhouette Score is :- 0.5438676410222071\n"
     ]
    }
   ],
   "source": [
    "silhte_score_feb2011_new = silhouette_score(df_feb2011_person, df_feb2011_new['cluster_labels'])\n",
    "print(\"The Silhouette Score is :- \"+str(silhte_score_feb2011_new))\n",
    "#Indicates that silhouette score is realistic for dataset without outliers"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {
    "colab": {
     "base_uri": "https://localhost:8080/"
    },
    "collapsed": true,
    "id": "jTWRl7q_x6U0",
    "outputId": "eb0ab1af-076b-4b0c-a7a3-b2887e0f6e46"
   },
   "outputs": [
    {
     "data": {
      "text/plain": [
       "0    389\n",
       "1    363\n",
       "2      6\n",
       "Name: cluster_labels, dtype: int64"
      ]
     },
     "execution_count": 70,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "df_feb2011_new['cluster_labels'].value_counts()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {
    "colab": {
     "base_uri": "https://localhost:8080/"
    },
    "collapsed": true,
    "id": "g-Dy53hYyBDH",
    "outputId": "2b09d482-a661-428c-b907-a74704936b80"
   },
   "outputs": [
    {
     "data": {
      "image/png": "",
      "text/plain": [
       "<Figure size 640x480 with 1 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "plt.scatter(df_feb2011_new['Mean_purch'], df_feb2011_new['Sum_purch'], c=df_feb2011_new['cluster_labels'], cmap='viridis')\n",
    "plt.title(\"For Feb 2011 (After removing outliers)\")\n",
    "plt.xlabel('Mean_purch')\n",
    "plt.ylabel('Sum_purch')\n",
    "plt.show()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {
    "id": "nak6l9iJyIjJ"
   },
   "outputs": [],
   "source": [
    "feb2011 = descrip_dict(og_feb2011,df_feb2011_new)\n",
    "feb2011 = processlis(feb2011)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {
    "colab": {
     "base_uri": "https://localhost:8080/"
    },
    "collapsed": true,
    "id": "04FB0l5mySPn",
    "outputId": "4fec2e13-3897-4195-c47e-2baaa34c28df"
   },
   "outputs": [
    {
     "data": {
      "text/plain": [
       "[     CustomerID                                        Description\n",
       " 0             4  [CHOCOLATE THIS WAY METAL SIGN, METAL SIGN NEI...\n",
       " 1             5  [WOODEN HAPPY BIRTHDAY GARLAND, PINK DOUGHNUT ...\n",
       " 2            12  [DOORMAT WELCOME TO OUR HOME, HERB MARKER PARS...\n",
       " 3            14  [DOLLY GIRL LUNCH BOX, ROUND SNACK BOXES SET O...\n",
       " 4            15  [VINTAGE SEASIDE JIGSAW PUZZLES, WATERING CAN ...\n",
       " ..          ...                                                ...\n",
       " 384        2158  [SET/5 RED RETROSPOT LID GLASS BOWLS, RED RETR...\n",
       " 385        2163  [BOX OF VINTAGE ALPHABET BLOCKS, PLASTERS IN T...\n",
       " 386        2172  [REGENCY CAKESTAND 3 TIER, WHITE HANGING HEART...\n",
       " 387        2177  [PAPER BUNTING WHITE LACE, SET OF 4 POLKADOT P...\n",
       " 388        2186  [CHILDS GARDEN BRUSH BLUE, CHILDS GARDEN BRUSH...\n",
       " \n",
       " [389 rows x 2 columns],\n",
       "      CustomerID                                        Description\n",
       " 0          2211  [BOX OF 9 PEBBLE CANDLES, CAROUSEL DESIGN WASH...\n",
       " 1          2212  [SET OF 3 NOTEBOOKS IN PARCEL, 36 FOIL HEART C...\n",
       " 2          2221  [DOORMAT FAIRY CAKE, TEA TIME KITCHEN APRON, P...\n",
       " 3          2223  [RED RETROSPOT APRON , VINTAGE UNION JACK CUSH...\n",
       " 4          2229  [MAGIC DRAWING SLATE BUNNIES , MAGIC DRAWING S...\n",
       " ..          ...                                                ...\n",
       " 358        4299  [PLEASE ONE PERSON METAL SIGN, TRADITIONAL WOO...\n",
       " 359        4300  [AGED GLASS SILVER T-LIGHT HOLDER, 3 STRIPEY M...\n",
       " 360        4314  [SET OF 3 CAKE TINS PANTRY DESIGN , RECIPE BOX...\n",
       " 361        4318  [JUMBO BAG RED RETROSPOT, SET 3 PAPER VINTAGE ...\n",
       " 362        4337  [CREAM FELT EASTER EGG BASKET, BLUE FELT EASTE...\n",
       " \n",
       " [363 rows x 2 columns]]"
      ]
     },
     "execution_count": 73,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "feb2011"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {
    "colab": {
     "base_uri": "https://localhost:8080/"
    },
    "id": "eKBPLUX0FsDJ",
    "outputId": "58b9cf46-463b-49d3-8c69-5b76347e88c3"
   },
   "outputs": [
    {
     "data": {
      "image/png": "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QcrPz9fEiRPVr18/SVJKSookKSoqyuN+UVFR1ryUlBTVqlXLs9DgYNWoUcOjTf369b2W4Z4XGRmplJSUYvs53aRJk/Tkk0+WZbUBAEAlVO5HhBYsWKB3331X8+bN0+bNm/XWW2/p2Wef1VtvvVXeXZW70aNHKyMjw7rt27fP3yUBAIBzqNyPCD366KN67LHHdPvtt0uSmjdvrv/973+aNGmS+vfvr+joaElSamqqateubd0vNTVVLVu2lCRFR0fr4MGDHsvNy8tTWlqadf/o6GilpqZ6tHH/faY27vmnczqdcjqdZVltAABQCZX7EaHjx48rMNBzsUFBQSooKJAk1a9fX9HR0Vq1apU1PzMzU+vXr1d8fLwkKT4+Xunp6UpOTrbafPHFFyooKFBcXJzVZvXq1crNzbXarFixQo0bN1ZkZKTVpnA/7jbufgAAgL2VexDq1q2bJk6cqCVLlmjPnj366KOPNG3aNN18882SpICAAA0bNkwTJkzQokWLtG3bNt11112qU6eOevToIUm67LLLdMMNN+i+++7Thg0b9M0332jIkCG6/fbbVadOHUlS37595XA4lJSUpB07dmj+/PmaPn26RowYYdUydOhQLVu2TM8995x+/PFHjRs3Tps2bdKQIUPKe7UBAEBlVN6XrGVmZpqhQ4eaiy++2ISEhJgGDRqYf//73x6XuRcUFJgnnnjCREVFGafTaa677jqza9cuj+X8+eefpk+fPiY8PNy4XC4zYMAAc/ToUY823333nWnfvr1xOp3moosuMpMnT/aqZ8GCBaZRo0bG4XCYZs2amSVLlpR4Xbh8HvAvnj8AyqI0r98BxhT6ymd4yMzMVEREhDIyMuRyucq0jOM5eWo6Zrkkaef4RIU5yv20LOC8xfMHQFmU5vWb3xoDAAC2RRACAAC2RRACAAC2RRACAAC2RRACAAC2RRACAAC2RRACAAC2RRACAAC2RRACAAC2RRACAAC2RRACAAC2RRACAAC2RRACAAC2RRACAAC2RRACAAC2RRACAAC2RRACAAC2RRACAAC2RRACAAC2RRACAAC2RRACAAC2RRACAAC2RRACAAC2RRACAAC2RRACAAC2RRACAAC2RRACAAC2RRACAAC2RRACAAC2RRACAAC2RRACAAC2RRACAAC2RRACAAC2RRACAAC2RRACAAC2RRACAAC2RRACAAC2RRACAAC2RRACAAC2RRACAAC2RRACAAC2RRACAAC2RRACAAC2RRACAAC2RRACAAC2RRACAAC2RRACAAC2RRACAAC2RRACAAC2RRACAAC2RRACAAC2RRACAAC2dU6C0P79+3XHHXeoZs2aCg0NVfPmzbVp0yZrvjFGY8aMUe3atRUaGqqEhAT9/PPPHstIS0tTv3795HK5VL16dSUlJenYsWMebb7//nt16NBBISEhiomJ0ZQpU7xqWbhwoZo0aaKQkBA1b95cn3322blYZQAAUAmVexA6cuSIrrnmGlWpUkVLly7Vzp079dxzzykyMtJqM2XKFL344ouaPXu21q9fr6pVqyoxMVEnT5602vTr1087duzQihUrtHjxYq1evVoDBw605mdmZqpLly6KjY1VcnKypk6dqnHjxmnOnDlWm7Vr16pPnz5KSkrSli1b1KNHD/Xo0UPbt28v79UGAACVkSlno0aNMu3bty9yfkFBgYmOjjZTp061pqWnpxun02nee+89Y4wxO3fuNJLMxo0brTZLly41AQEBZv/+/cYYY2bNmmUiIyNNdna2R9+NGze2/r7ttttM165dPfqPi4sz999/f4nWJSMjw0gyGRkZJWrvS1Z2rokdtdjEjlpssrJzy7wcwI54/gAoi9K8fpf7EaFFixapbdu2uvXWW1WrVi21atVKr776qjV/9+7dSklJUUJCgjUtIiJCcXFxWrdunSRp3bp1ql69utq2bWu1SUhIUGBgoNavX2+16dixoxwOh9UmMTFRu3bt0pEjR6w2hftxt3H3c7rs7GxlZmZ63AAAwPmr3IPQb7/9ppdfflmXXnqpli9frkGDBumhhx7SW2+9JUlKSUmRJEVFRXncLyoqypqXkpKiWrVqecwPDg5WjRo1PNr4WkbhPopq455/ukmTJikiIsK6xcTElHr9AQBA5VHuQaigoECtW7fW008/rVatWmngwIG67777NHv27PLuqtyNHj1aGRkZ1m3fvn3+LgkAAJxD5R6EateuraZNm3pMu+yyy7R3715JUnR0tCQpNTXVo01qaqo1Lzo6WgcPHvSYn5eXp7S0NI82vpZRuI+i2rjnn87pdMrlcnncAADA+avcg9A111yjXbt2eUz76aefFBsbK0mqX7++oqOjtWrVKmt+Zmam1q9fr/j4eElSfHy80tPTlZycbLX54osvVFBQoLi4OKvN6tWrlZuba7VZsWKFGjdubF2hFh8f79GPu427HwAAYG/lHoSGDx+ub7/9Vk8//bR++eUXzZs3T3PmzNHgwYMlSQEBARo2bJgmTJigRYsWadu2bbrrrrtUp04d9ejRQ9KpI0g33HCD7rvvPm3YsEHffPONhgwZottvv1116tSRJPXt21cOh0NJSUnasWOH5s+fr+nTp2vEiBFWLUOHDtWyZcv03HPP6ccff9S4ceO0adMmDRkypLxXGwAAVEbn4rK1Tz/91Fx++eXG6XSaJk2amDlz5njMLygoME888YSJiooyTqfTXHfddWbXrl0ebf7880/Tp08fEx4eblwulxkwYIA5evSoR5vvvvvOtG/f3jidTnPRRReZyZMne9WyYMEC06hRI+NwOEyzZs3MkiVLSrweXD4P+BfPHwBlUZrX7wBjjPF3GKuoMjMzFRERoYyMjDKfL3Q8J09NxyyXJO0cn6gwR3B5lgic13j+ACiL0rx+81tjAADAtghCAADAtghCAADAtghCAADAtghCAADAtghCAADAtghCAADAtghCAADAtghCAADAtghCAADAtghCAADAtghCAADAtghCAADAtghCAADAtghCAADAtghCAADAtghCAADAtghCAADAtghCAADAtghCAADAtghCAADAtghCAADAtghCAADAtghCAADAtghCAADAtghCAADAtghCAADAtghCAADAtghCAADAtghCAADAtghCAADAtghCAADAtghCAADAtghCAADAtghCAADAtghCAADAtghCAADAtghCAADAtghCAADAtghCAADAtghCAADAtoL9XQBwRsZIucf9XQX8ISe/0P+PSwryWynwsyphUkCAv6vAeYgghIrNGOmNRGnfen9XAn8wTklzT/1/akMpINuv5cCPYq6W7llGGEK5IwihYss9TgiysbCAbO0J6evvMlAR7Pv21P7AUdXfleA8QxBC5fHIL5IjzN9VAPgr5RyXnm3o7ypwHiMIofJwhPFuEABQrrhqDAAA2BZHhACgIuDqSN9yjvv+P07harqzRhACAH/j6siS4Vwhb1xNd9b4aAwA/I2rI1FW7qvpUGYcEQKAioSrI1ESXE1XbghCAFCRcHUk8JfiozEAAGBb5zwITZ48WQEBARo2bJg17eTJkxo8eLBq1qyp8PBw3XLLLUpNTfW43969e9W1a1eFhYWpVq1aevTRR5WXl+fR5ssvv1Tr1q3ldDrVsGFDvfnmm179z5w5U/Xq1VNISIji4uK0YcOGc7GaAACgEjqnQWjjxo165ZVXdMUVV3hMHz58uD799FMtXLhQX331lQ4cOKCePXta8/Pz89W1a1fl5ORo7dq1euutt/Tmm29qzJgxVpvdu3era9eu6ty5s7Zu3aphw4bp3nvv1fLly6028+fP14gRIzR27Fht3rxZLVq0UGJiog4ePHguVxsAAFQS5ywIHTt2TP369dOrr76qyMhIa3pGRoZef/11TZs2TX/729/Upk0bzZ07V2vXrtW3334rSfr888+1c+dOvfPOO2rZsqVuvPFGPfXUU5o5c6ZycnIkSbNnz1b9+vX13HPP6bLLLtOQIUPUq1cvPf/881Zf06ZN03333acBAwaoadOmmj17tsLCwvTGG2+cq9UGAACVyDkLQoMHD1bXrl2VkJDgMT05OVm5ubke05s0aaKLL75Y69atkyStW7dOzZs3V1RUlNUmMTFRmZmZ2rFjh9Xm9GUnJiZay8jJyVFycrJHm8DAQCUkJFhtTpedna3MzEyPGwAAOH+dk6vG3n//fW3evFkbN270mpeSkiKHw6Hq1at7TI+KilJKSorVpnAIcs93zyuuTWZmpk6cOKEjR44oPz/fZ5sff/zRZ92TJk3Sk08+WfIVBQAAlVq5HxHat2+fhg4dqnfffVchISHlvfhzavTo0crIyLBu+/bt83dJAADgHCr3IJScnKyDBw+qdevWCg4OVnBwsL766iu9+OKLCg4OVlRUlHJycpSenu5xv9TUVEVHR0uSoqOjva4ic/99pjYul0uhoaG64IILFBQU5LONexmnczqdcrlcHjcAAHD+KvcgdN1112nbtm3aunWrdWvbtq369etn/b9KlSpatWqVdZ9du3Zp7969io+PlyTFx8dr27ZtHld3rVixQi6XS02bNrXaFF6Gu417GQ6HQ23atPFoU1BQoFWrVlltAACAvZX7OULVqlXT5Zdf7jGtatWqqlmzpjU9KSlJI0aMUI0aNeRyufTggw8qPj5eV199tSSpS5cuatq0qe68805NmTJFKSkpevzxxzV48GA5nU5J0gMPPKAZM2Zo5MiRuueee/TFF19owYIFWrJkidXviBEj1L9/f7Vt21ZXXXWVXnjhBWVlZWnA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DQ01zZo1sx53X44cOWIuvPBCI8ksXLjQaxuUZdz83//9X5Hrv27dOq/2ZxrDxpzal0ZFRXmsi6/tNWzYMNOqVStr/Zs0aWLGjh3rtTxjjNm0aZNJTEw01apVM+Hh4eb66683W7Zs8WpX0nFTFIJQKa1du9a8/fbbHrf//Oc/JiwszDRt2tRq16lTJ1O3bl2vtqtWrfJY3t69e0316tVNbGysmTRpknnllVfM3XffbSSZm266qdhalixZYhITE824cePMnDlzzAsvvGA6dOhgJJlXXnnFajd27FhTpUoV06ZNG9OoUaMid4C//vqrV71vv/22ad26tQkKCjJ//PFHqbfX888/b1wuV5EDtFu3bqZq1ao+X2CNMea2224zHTp0KHW/Ja2lZ8+eJjg42AwaNMi8+uqr5sknnzS1atUy1apVM3v27DlntRhjzO7du40kc/HFF5trr722yBexQYMGmf79+5tnn33WvP766+bxxx83UVFR5oILLjD79+8vl1r89Tid3m9eXp5p166dcTgcZvjw4WbWrFmme/fuRpKZOHGi1/3feOMNExAQYLp06WJmzJhhXn75ZTNs2DAzdepUj3Y7d+40kqznn6/17dSpkwkPDzedO3c2kZGRxb6g3X777SY4ONg88sgj5pVXXjHx8fEmODjYrFmzxqPdli1bTEhIiGnVqpV5+eWXzb///W/jdDrNDTfc4LUNRowYYWJjY01BQUGJaynpGDKm5PsBY4z57LPPjCTzyy+/FLm9YmNjTcuWLb32F+vXr/dY1quvvmq6d+9uJkyYYF577TUzdepU06JFCxMYGGiWLl3q0fbIkSPG4XCY119/vcjafNXz6aefmipVqpju3bubF154wcyYMcN07tzZSDJjxozxuG9J9+G+6jnbcbN8+XLjcDhMXFycmTZtmpkzZ44ZNWqUefTRR4u8z4MPPmg99woHobMZN+4g9NBDD3lti0OHDnm0LckYdhs5cqRVS1Hb65prrjEPPfSQefHFF82cOXPMoEGDjNPpNNdcc43Jz8+32iUnJ5uQkBBz6aWXmmeffdZMmTLF1KtXz7hcLvPjjz969FvScVMUglA5WLNmjdeOulOnTqZZs2ZnvO/EiRONJK8jEHfddZeRZNLS0kpVS15enmnRooVp3LixNS0lJcUcP37cGGPM4MGDi90Bnu748eOmWrVq5vrr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derk9URYuXKljDHq3r17mesoqpZu3bqpWbNmGj9+vP73v/9ZJ0vPmDFDtWvXVlJS0jmppbAZM2YoPT3delfovoxfOnWegzFGMTEx6t27t5o1a6aqVatq27Ztmjt3riIiInxedVNa/nqcfPXrXn58fLwaNmyolJQUzZkzR8eOHdPixYs9dn7du3fXddddp0mTJunw4cNq0aKFPv74Y3399dd65ZVXvE7wXLFihbp166ZLLrnEZ7+rV6/W6tWrJZ16ocjKyrKeJx07drTON4qLi9Ott96q0aNH6+DBg2rYsKHeeust7dmzx+tFbuLEiWrXrp06deqkgQMH6vfff9dzzz2nLl266IYbbpAkq5YWLVooLS1N3bt3L3Et0pnHUEREhKTS7Qdyc3P11Vdf6Z///KfPx2nRokWaMGGCevXqpfr16ystLU3z5s3T9u3brQs93G688UbVrVtXcXFxqlWrlvbu3au5c+fqwIEDHlfQFn6crrnmmiLP2fFVz4YNG3TXXXepZs2auu6667yCert27ayrityK24f7qqdNmzZnNW5atWqle+65R2+88Yby8vLUqVMnffnll1q4cKFGjx5t7et9vfl0X8F65ZVXqkePHpLObtz07t1boaGhateunWrVqqWdO3dqzpw5CgsL0+TJkz36LskYdktOTrZq8fU4ffnll3rooYfUq1cvXXrppcrJydGaNWv04Ycfqm3bth7nla1evVrjx49Xly5dVLNmTX377beaO3eubrjhBg0dOrTIx6kk5+t6KdPXMMJcffXVplatWiYvL89r3m+//WZuvfVWU69ePRMSEmLCwsJMmzZtzOzZs62vHi9s/fr15sYbbzTR0dGmSpUqplGjRmbixIkmNze32Bree+89k5CQYKKiokxwcLCJjIw0CQkJXr/5VNzvyvj65tHHHnvMSDLff/996TaKD9OmTTPh4eHWN9r64v6NM1/fWNy7d2/Tvn37s66jqFrS0tLM8OHDTaNGjYzT6TQXXHCBuf32281vv/12TmtxK+r3miSZ3bt3m+zsbDN06FBzxRVXGJfLZapUqWJiY2NNUlJSuf7WmL8eJ1/9Dh8+3DRo0MA4nU5z4YUXmr59+xb5jdXu3yWLjo42DofDNG/e3Odv4v3www9Gklm5cmWR/Y4dO7bIx2Ls2LEeyztx4oR55JFHTHR0tHE6nebKK680y5Yt81njmjVrTLt27UxISIi58MILzeDBg01mZqbXNhgxYoS5+OKLTUFBQalqOdMYcivNfmDp0qVGkvn55599bq9NmzaZbt26Wb8HFx4ebtq3b28WLFjgtf4zZsww7du3NxdccIEJDg42F154oenWrZtZvXq1V9v09HTjcDjMa6+95nNbnr7N3PWc6XcSfX3bdnH78KLqOdtxk5OTY8aNG2diY2NNlSpVTMOGDc3zzz9f7Loa4/uboM9m3EyfPt1cddVVpkaNGiY4ONjUrl3b3HHHHdbjfbozjWG3UaNGWbX42l6//PKLueuuu0yDBg1MaGioCQkJMc2aNTNjx471+vbvX375xXTp0sVccMEFxul0miZNmphJkyaZ7Oxsr35LOm6KQhDCOZWenm5q1KhRpgH6xx9/mJCQEPPxxx+fd7VUNP7aNmfTb2kMHTrUtGrVytpB/1X9loS7FpfLZV544QV/l2OMMaZ79+6mR48e1t9/1fZ6/vnnTe3atYsN5P6sh3FTtJMnT5ro6GiPWirauCkKQQjn3OTJk03jxo1L/Ps6bqNGjTJXXnnleVtLReOvbVPWfkvq8OHDpmrVqmbJkiV/ab+l0aNHDxMcHFzmHXl52rlzpwkKCjLbtm3zmH6ut1dOTo6JiYkxM2fOLFF7f9XDuPHt5ZdfNjExMebkyZMe0yvauPElwJhy+pIEAACASoarxgAAgG0RhAAAgG0RhAAAgG0RhAAAgG0RhAAAgG0RhAAAgG0RhAAAgG0RhAAAgG0RhAAAgG0RhAAAgG0RhAAAgG39f+WeVfLaVL1qAAAAAElFTkSuQmCC",
      "text/plain": [
       "<Figure size 640x480 with 1 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "data": {
      "image/png": "",
      "text/plain": [
       "<Figure size 500x500 with 1 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "(740, 4)\n",
      "(1, 4)\n",
      "(18, 4)\n"
     ]
    },
    {
     "data": {
      "image/png": "",
      "text/plain": [
       "<Figure size 640x480 with 1 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "data": {
      "image/png": "",
      "text/plain": [
       "<Figure size 500x500 with 1 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "(380, 5)\n",
      "(360, 5)\n"
     ]
    },
    {
     "data": {
      "text/plain": [
       "[     CustomerID                                        Description\n",
       " 0             4  [CHOCOLATE THIS WAY METAL SIGN, METAL SIGN NEI...\n",
       " 1             5  [WOODEN HAPPY BIRTHDAY GARLAND, PINK DOUGHNUT ...\n",
       " 2            12  [DOORMAT WELCOME TO OUR HOME, HERB MARKER PARS...\n",
       " 3            14  [DOLLY GIRL LUNCH BOX, ROUND SNACK BOXES SET O...\n",
       " 4            15  [VINTAGE SEASIDE JIGSAW PUZZLES, WATERING CAN ...\n",
       " ..          ...                                                ...\n",
       " 355        2149  [CREAM WALL PLANTER HEART SHAPED, NATURAL SLAT...\n",
       " 356        2163  [BOX OF VINTAGE ALPHABET BLOCKS, PLASTERS IN T...\n",
       " 357        2172  [REGENCY CAKESTAND 3 TIER, WHITE HANGING HEART...\n",
       " 358        2177  [PAPER BUNTING WHITE LACE, SET OF 4 POLKADOT P...\n",
       " 359        2186  [CHILDS GARDEN BRUSH BLUE, CHILDS GARDEN BRUSH...\n",
       " \n",
       " [360 rows x 2 columns],\n",
       "      CustomerID                                        Description\n",
       " 0          1014  [COLOURING PENCILS BROWN TUBE, ENGLISH ROSE GA...\n",
       " 1          1076  [GLASS CLOCHE SMALL, GLASS CLOCHE LARGE, SWEET...\n",
       " 2          1266  [ORIGAMI JASMINE INCENSE/CANDLE SET, TRAVEL CA...\n",
       " 3          1385  [NATURAL SLATE HEART CHALKBOARD , NATURAL SLAT...\n",
       " 4          1566  [SET OF 3 NOTEBOOKS IN PARCEL, 12 PENCILS SMAL...\n",
       " ..          ...                                                ...\n",
       " 375        4212  [DOORMAT I LOVE LONDON, DOORMAT UNION FLAG, DO...\n",
       " 376        4214  [ZINC METAL HEART DECORATION, STRAWBERRY CERAM...\n",
       " 377        4220  [VANILLA SCENT CANDLE JEWELLED BOX, OCEAN SCEN...\n",
       " 378        4228  [FRENCH FLORAL CUSHION COVER , VINTAGE UNION J...\n",
       " 379        4238  [EASTER CRAFT 4 CHICKS , FELT EGG COSY WHITE R...\n",
       " \n",
       " [380 rows x 2 columns]]"
      ]
     },
     "execution_count": 74,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "pca = PCA(n_components = 3)\n",
    "pca.fit(X = dvt_feb2011)\n",
    "new_dvt = pca.transform(dvt_feb2011)\n",
    "\n",
    "new_dvt = pd.DataFrame(data = new_dvt,columns = ['X0','X1','X2'])\n",
    "model = AgglomerativeClustering(distance_threshold=0, n_clusters=None, linkage='ward').fit(new_dvt)\n",
    "\n",
    "plot_dendrogram(model, truncate_mode=\"level\", p=4)\n",
    "\n",
    "dict_feb2011 =  Agglocls(new_dvt,3)\n",
    "\n",
    "final_dvt_feb2011 = dict_feb2011[0]\n",
    "pca_feb2011 = PCA(n_components = 3)\n",
    "pca_feb2011.fit(X = final_dvt_feb2011)\n",
    "final_dvt_feb2011 = pca_feb2011.transform(final_dvt_feb2011)\n",
    "final_dvt_feb2011 = pd.DataFrame(data = final_dvt_feb2011,columns = ['X0','X1','X2'])\n",
    "AggloDendo(final_dvt_feb2011)\n",
    "\n",
    "dict_feb2011_final =  AggloPca(final_dvt_feb2011,2,dvt_feb2011,'X0','X2')\n",
    "\n",
    "feb2011_agg = descrip_dict(og_feb2011,final_dvt_feb2011)\n",
    "feb2011_agg = processlis(feb2011_agg)\n",
    "feb2011_agg\n",
    "\n",
    "\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {
    "id": "kVF2JrH0vdkm"
   },
   "outputs": [],
   "source": [
    "Cluster_dict['feb2011'] = (len(feb2011),len(feb2011_agg))\n",
    "dicti_2011feb = {}\n",
    "klis = []\n",
    "for i in range(Cluster_dict['feb2011'][0]):\n",
    "  temp = apriori_rules(feb2011[i],0.075)\n",
    "  klis.append(temp)\n",
    "alis = []\n",
    "for i in range(Cluster_dict['feb2011'][1]):\n",
    "  temp = apriori_rules(feb2011_agg[i],0.075)\n",
    "  alis.append(temp)\n",
    "#apriori_rules(1_agg[0],0.075)\n",
    "dicti_2011feb['K-means'] = klis\n",
    "dicti_2011feb['Agglo'] = alis\n",
    "\n",
    "Rules_dict['feb2011'] = dicti_2011feb"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {
    "id": "zy0wOpH0yd6s"
   },
   "source": [
    "## For March 2011"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {
    "colab": {
     "base_uri": "https://localhost:8080/"
    },
    "collapsed": true,
    "id": "8H3HUQgvydSd",
    "outputId": "078e10a0-9cb9-426d-eb81-c191c81a7416"
   },
   "outputs": [
    {
     "data": {
      "text/html": [
       "\n",
       "  <div id=\"df-2a89a719-5859-4b02-a5f5-a5e769aedd89\">\n",
       "    <div class=\"colab-df-container\">\n",
       "      <div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>InvoiceNo</th>\n",
       "      <th>StockCode</th>\n",
       "      <th>Description</th>\n",
       "      <th>Quantity</th>\n",
       "      <th>UnitPrice</th>\n",
       "      <th>CustomerID</th>\n",
       "      <th>Country</th>\n",
       "      <th>time_intervals</th>\n",
       "      <th>Total Price</th>\n",
       "      <th>Money_bins</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>105335</th>\n",
       "      <td>545220</td>\n",
       "      <td>21955</td>\n",
       "      <td>DOORMAT UNION JACK GUNS AND ROSES</td>\n",
       "      <td>2</td>\n",
       "      <td>7.95</td>\n",
       "      <td>1669</td>\n",
       "      <td>United Kingdom</td>\n",
       "      <td>04:00-07:59</td>\n",
       "      <td>15.90</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>105336</th>\n",
       "      <td>545220</td>\n",
       "      <td>48194</td>\n",
       "      <td>DOORMAT HEARTS</td>\n",
       "      <td>2</td>\n",
       "      <td>7.95</td>\n",
       "      <td>1669</td>\n",
       "      <td>United Kingdom</td>\n",
       "      <td>04:00-07:59</td>\n",
       "      <td>15.90</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>105337</th>\n",
       "      <td>545220</td>\n",
       "      <td>22556</td>\n",
       "      <td>PLASTERS IN TIN CIRCUS PARADE</td>\n",
       "      <td>12</td>\n",
       "      <td>1.65</td>\n",
       "      <td>1669</td>\n",
       "      <td>United Kingdom</td>\n",
       "      <td>04:00-07:59</td>\n",
       "      <td>19.80</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>105338</th>\n",
       "      <td>545220</td>\n",
       "      <td>22139</td>\n",
       "      <td>RETROSPOT TEA SET CERAMIC 11 PC</td>\n",
       "      <td>3</td>\n",
       "      <td>4.95</td>\n",
       "      <td>1669</td>\n",
       "      <td>United Kingdom</td>\n",
       "      <td>04:00-07:59</td>\n",
       "      <td>14.85</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>105339</th>\n",
       "      <td>545220</td>\n",
       "      <td>84029G</td>\n",
       "      <td>KNITTED UNION FLAG HOT WATER BOTTLE</td>\n",
       "      <td>4</td>\n",
       "      <td>3.75</td>\n",
       "      <td>1669</td>\n",
       "      <td>United Kingdom</td>\n",
       "      <td>04:00-07:59</td>\n",
       "      <td>15.00</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>...</th>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>142078</th>\n",
       "      <td>548548</td>\n",
       "      <td>22423</td>\n",
       "      <td>REGENCY CAKESTAND 3 TIER</td>\n",
       "      <td>1</td>\n",
       "      <td>12.75</td>\n",
       "      <td>3974</td>\n",
       "      <td>United Kingdom</td>\n",
       "      <td>16:00-19:59</td>\n",
       "      <td>12.75</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>142079</th>\n",
       "      <td>548548</td>\n",
       "      <td>21361</td>\n",
       "      <td>LOVE LARGE WOOD LETTERS</td>\n",
       "      <td>7</td>\n",
       "      <td>12.75</td>\n",
       "      <td>3974</td>\n",
       "      <td>United Kingdom</td>\n",
       "      <td>16:00-19:59</td>\n",
       "      <td>89.25</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>142080</th>\n",
       "      <td>548549</td>\n",
       "      <td>84763</td>\n",
       "      <td>ZINC FINISH 15CM PLANTER POTS</td>\n",
       "      <td>100</td>\n",
       "      <td>1.06</td>\n",
       "      <td>2949</td>\n",
       "      <td>United Kingdom</td>\n",
       "      <td>16:00-19:59</td>\n",
       "      <td>106.00</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>142081</th>\n",
       "      <td>548549</td>\n",
       "      <td>22222</td>\n",
       "      <td>CAKE PLATE LOVEBIRD WHITE</td>\n",
       "      <td>1</td>\n",
       "      <td>4.95</td>\n",
       "      <td>2949</td>\n",
       "      <td>United Kingdom</td>\n",
       "      <td>16:00-19:59</td>\n",
       "      <td>4.95</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>142082</th>\n",
       "      <td>548549</td>\n",
       "      <td>22776</td>\n",
       "      <td>SWEETHEART CAKESTAND 3 TIER</td>\n",
       "      <td>1</td>\n",
       "      <td>9.95</td>\n",
       "      <td>2949</td>\n",
       "      <td>United Kingdom</td>\n",
       "      <td>16:00-19:59</td>\n",
       "      <td>9.95</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "<p>35915 rows × 10 columns</p>\n",
       "</div>\n",
       "      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-2a89a719-5859-4b02-a5f5-a5e769aedd89')\"\n",
       "              title=\"Convert this dataframe to an interactive table.\"\n",
       "              style=\"display:none;\">\n",
       "        \n",
       "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
       "       width=\"24px\">\n",
       "    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n",
       "    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n",
       "  </svg>\n",
       "      </button>\n",
       "      \n",
       "  <style>\n",
       "    .colab-df-container {\n",
       "      display:flex;\n",
       "      flex-wrap:wrap;\n",
       "      gap: 12px;\n",
       "    }\n",
       "\n",
       "    .colab-df-convert {\n",
       "      background-color: #E8F0FE;\n",
       "      border: none;\n",
       "      border-radius: 50%;\n",
       "      cursor: pointer;\n",
       "      display: none;\n",
       "      fill: #1967D2;\n",
       "      height: 32px;\n",
       "      padding: 0 0 0 0;\n",
       "      width: 32px;\n",
       "    }\n",
       "\n",
       "    .colab-df-convert:hover {\n",
       "      background-color: #E2EBFA;\n",
       "      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
       "      fill: #174EA6;\n",
       "    }\n",
       "\n",
       "    [theme=dark] .colab-df-convert {\n",
       "      background-color: #3B4455;\n",
       "      fill: #D2E3FC;\n",
       "    }\n",
       "\n",
       "    [theme=dark] .colab-df-convert:hover {\n",
       "      background-color: #434B5C;\n",
       "      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
       "      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
       "      fill: #FFFFFF;\n",
       "    }\n",
       "  </style>\n",
       "\n",
       "      <script>\n",
       "        const buttonEl =\n",
       "          document.querySelector('#df-2a89a719-5859-4b02-a5f5-a5e769aedd89 button.colab-df-convert');\n",
       "        buttonEl.style.display =\n",
       "          google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
       "\n",
       "        async function convertToInteractive(key) {\n",
       "          const element = document.querySelector('#df-2a89a719-5859-4b02-a5f5-a5e769aedd89');\n",
       "          const dataTable =\n",
       "            await google.colab.kernel.invokeFunction('convertToInteractive',\n",
       "                                                     [key], {});\n",
       "          if (!dataTable) return;\n",
       "\n",
       "          const docLinkHtml = 'Like what you see? Visit the ' +\n",
       "            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n",
       "            + ' to learn more about interactive tables.';\n",
       "          element.innerHTML = '';\n",
       "          dataTable['output_type'] = 'display_data';\n",
       "          await google.colab.output.renderOutput(dataTable, element);\n",
       "          const docLink = document.createElement('div');\n",
       "          docLink.innerHTML = docLinkHtml;\n",
       "          element.appendChild(docLink);\n",
       "        }\n",
       "      </script>\n",
       "    </div>\n",
       "  </div>\n",
       "  "
      ],
      "text/plain": [
       "       InvoiceNo StockCode                          Description  Quantity  \\\n",
       "105335    545220     21955    DOORMAT UNION JACK GUNS AND ROSES         2   \n",
       "105336    545220     48194                       DOORMAT HEARTS         2   \n",
       "105337    545220     22556       PLASTERS IN TIN CIRCUS PARADE         12   \n",
       "105338    545220     22139     RETROSPOT TEA SET CERAMIC 11 PC          3   \n",
       "105339    545220    84029G  KNITTED UNION FLAG HOT WATER BOTTLE         4   \n",
       "...          ...       ...                                  ...       ...   \n",
       "142078    548548     22423             REGENCY CAKESTAND 3 TIER         1   \n",
       "142079    548548     21361             LOVE LARGE WOOD LETTERS          7   \n",
       "142080    548549     84763        ZINC FINISH 15CM PLANTER POTS       100   \n",
       "142081    548549     22222            CAKE PLATE LOVEBIRD WHITE         1   \n",
       "142082    548549     22776          SWEETHEART CAKESTAND 3 TIER         1   \n",
       "\n",
       "        UnitPrice  CustomerID         Country time_intervals  Total Price  \\\n",
       "105335       7.95        1669  United Kingdom    04:00-07:59        15.90   \n",
       "105336       7.95        1669  United Kingdom    04:00-07:59        15.90   \n",
       "105337       1.65        1669  United Kingdom    04:00-07:59        19.80   \n",
       "105338       4.95        1669  United Kingdom    04:00-07:59        14.85   \n",
       "105339       3.75        1669  United Kingdom    04:00-07:59        15.00   \n",
       "...           ...         ...             ...            ...          ...   \n",
       "142078      12.75        3974  United Kingdom    16:00-19:59        12.75   \n",
       "142079      12.75        3974  United Kingdom    16:00-19:59        89.25   \n",
       "142080       1.06        2949  United Kingdom    16:00-19:59       106.00   \n",
       "142081       4.95        2949  United Kingdom    16:00-19:59         4.95   \n",
       "142082       9.95        2949  United Kingdom    16:00-19:59         9.95   \n",
       "\n",
       "        Money_bins  \n",
       "105335           0  \n",
       "105336           0  \n",
       "105337           0  \n",
       "105338           0  \n",
       "105339           0  \n",
       "...            ...  \n",
       "142078           0  \n",
       "142079           0  \n",
       "142080           0  \n",
       "142081           0  \n",
       "142082           0  \n",
       "\n",
       "[35915 rows x 10 columns]"
      ]
     },
     "execution_count": 76,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "og_mar2011 = df_list_month_intervals[3]\n",
    "og_mar2011"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {
    "colab": {
     "base_uri": "https://localhost:8080/"
    },
    "collapsed": true,
    "id": "91e0wJfJy-lC",
    "outputId": "5874150b-97e1-4a89-a2d9-0a390603435a"
   },
   "outputs": [
    {
     "data": {
      "text/html": [
       "\n",
       "  <div id=\"df-75b71234-8bd2-4d80-a48c-de7448a242e5\">\n",
       "    <div class=\"colab-df-container\">\n",
       "      <div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>No. of visits</th>\n",
       "      <th>Mean_purch</th>\n",
       "      <th>Sum_purch</th>\n",
       "      <th>Item_count</th>\n",
       "      <th>Total_quantity</th>\n",
       "      <th>Avg_quant</th>\n",
       "      <th>CustomerID</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>4</td>\n",
       "      <td>55.013478</td>\n",
       "      <td>1265.31</td>\n",
       "      <td>12</td>\n",
       "      <td>156</td>\n",
       "      <td>6.782609</td>\n",
       "      <td>5</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>1</td>\n",
       "      <td>19.549792</td>\n",
       "      <td>938.39</td>\n",
       "      <td>48</td>\n",
       "      <td>1005</td>\n",
       "      <td>20.937500</td>\n",
       "      <td>20</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>1</td>\n",
       "      <td>23.804667</td>\n",
       "      <td>357.07</td>\n",
       "      <td>15</td>\n",
       "      <td>91</td>\n",
       "      <td>6.066667</td>\n",
       "      <td>31</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>1</td>\n",
       "      <td>21.090000</td>\n",
       "      <td>210.90</td>\n",
       "      <td>10</td>\n",
       "      <td>90</td>\n",
       "      <td>9.000000</td>\n",
       "      <td>34</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>1</td>\n",
       "      <td>32.650000</td>\n",
       "      <td>326.50</td>\n",
       "      <td>10</td>\n",
       "      <td>321</td>\n",
       "      <td>32.100000</td>\n",
       "      <td>39</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>...</th>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>970</th>\n",
       "      <td>1</td>\n",
       "      <td>15.678571</td>\n",
       "      <td>548.75</td>\n",
       "      <td>34</td>\n",
       "      <td>356</td>\n",
       "      <td>10.171429</td>\n",
       "      <td>4320</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>971</th>\n",
       "      <td>1</td>\n",
       "      <td>22.390000</td>\n",
       "      <td>111.95</td>\n",
       "      <td>5</td>\n",
       "      <td>41</td>\n",
       "      <td>8.200000</td>\n",
       "      <td>4327</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>972</th>\n",
       "      <td>1</td>\n",
       "      <td>51.000000</td>\n",
       "      <td>51.00</td>\n",
       "      <td>1</td>\n",
       "      <td>20</td>\n",
       "      <td>20.000000</td>\n",
       "      <td>4329</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>973</th>\n",
       "      <td>1</td>\n",
       "      <td>18.060000</td>\n",
       "      <td>180.60</td>\n",
       "      <td>10</td>\n",
       "      <td>45</td>\n",
       "      <td>4.500000</td>\n",
       "      <td>4334</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>974</th>\n",
       "      <td>210</td>\n",
       "      <td>13.977867</td>\n",
       "      <td>122138.60</td>\n",
       "      <td>1836</td>\n",
       "      <td>36406</td>\n",
       "      <td>4.166400</td>\n",
       "      <td>4339</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "<p>975 rows × 7 columns</p>\n",
       "</div>\n",
       "      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-75b71234-8bd2-4d80-a48c-de7448a242e5')\"\n",
       "              title=\"Convert this dataframe to an interactive table.\"\n",
       "              style=\"display:none;\">\n",
       "        \n",
       "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
       "       width=\"24px\">\n",
       "    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n",
       "    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n",
       "  </svg>\n",
       "      </button>\n",
       "      \n",
       "  <style>\n",
       "    .colab-df-container {\n",
       "      display:flex;\n",
       "      flex-wrap:wrap;\n",
       "      gap: 12px;\n",
       "    }\n",
       "\n",
       "    .colab-df-convert {\n",
       "      background-color: #E8F0FE;\n",
       "      border: none;\n",
       "      border-radius: 50%;\n",
       "      cursor: pointer;\n",
       "      display: none;\n",
       "      fill: #1967D2;\n",
       "      height: 32px;\n",
       "      padding: 0 0 0 0;\n",
       "      width: 32px;\n",
       "    }\n",
       "\n",
       "    .colab-df-convert:hover {\n",
       "      background-color: #E2EBFA;\n",
       "      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
       "      fill: #174EA6;\n",
       "    }\n",
       "\n",
       "    [theme=dark] .colab-df-convert {\n",
       "      background-color: #3B4455;\n",
       "      fill: #D2E3FC;\n",
       "    }\n",
       "\n",
       "    [theme=dark] .colab-df-convert:hover {\n",
       "      background-color: #434B5C;\n",
       "      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
       "      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
       "      fill: #FFFFFF;\n",
       "    }\n",
       "  </style>\n",
       "\n",
       "      <script>\n",
       "        const buttonEl =\n",
       "          document.querySelector('#df-75b71234-8bd2-4d80-a48c-de7448a242e5 button.colab-df-convert');\n",
       "        buttonEl.style.display =\n",
       "          google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
       "\n",
       "        async function convertToInteractive(key) {\n",
       "          const element = document.querySelector('#df-75b71234-8bd2-4d80-a48c-de7448a242e5');\n",
       "          const dataTable =\n",
       "            await google.colab.kernel.invokeFunction('convertToInteractive',\n",
       "                                                     [key], {});\n",
       "          if (!dataTable) return;\n",
       "\n",
       "          const docLinkHtml = 'Like what you see? Visit the ' +\n",
       "            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n",
       "            + ' to learn more about interactive tables.';\n",
       "          element.innerHTML = '';\n",
       "          dataTable['output_type'] = 'display_data';\n",
       "          await google.colab.output.renderOutput(dataTable, element);\n",
       "          const docLink = document.createElement('div');\n",
       "          docLink.innerHTML = docLinkHtml;\n",
       "          element.appendChild(docLink);\n",
       "        }\n",
       "      </script>\n",
       "    </div>\n",
       "  </div>\n",
       "  "
      ],
      "text/plain": [
       "     No. of visits  Mean_purch  Sum_purch  Item_count  Total_quantity  \\\n",
       "0                4   55.013478    1265.31          12             156   \n",
       "1                1   19.549792     938.39          48            1005   \n",
       "2                1   23.804667     357.07          15              91   \n",
       "3                1   21.090000     210.90          10              90   \n",
       "4                1   32.650000     326.50          10             321   \n",
       "..             ...         ...        ...         ...             ...   \n",
       "970              1   15.678571     548.75          34             356   \n",
       "971              1   22.390000     111.95           5              41   \n",
       "972              1   51.000000      51.00           1              20   \n",
       "973              1   18.060000     180.60          10              45   \n",
       "974            210   13.977867  122138.60        1836           36406   \n",
       "\n",
       "     Avg_quant  CustomerID  \n",
       "0     6.782609           5  \n",
       "1    20.937500          20  \n",
       "2     6.066667          31  \n",
       "3     9.000000          34  \n",
       "4    32.100000          39  \n",
       "..         ...         ...  \n",
       "970  10.171429        4320  \n",
       "971   8.200000        4327  \n",
       "972  20.000000        4329  \n",
       "973   4.500000        4334  \n",
       "974   4.166400        4339  \n",
       "\n",
       "[975 rows x 7 columns]"
      ]
     },
     "execution_count": 77,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "dvt_mar2011= person_df(og_mar2011) #Our function gives such a dataframe\n",
    "#By which we can form clusters using KMeans\n",
    "dvt_mar2011"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {
    "colab": {
     "base_uri": "https://localhost:8080/"
    },
    "collapsed": true,
    "id": "tC_8fPGUzJRn",
    "outputId": "44513103-66e1-4b21-bbdb-60686c5a9427"
   },
   "outputs": [
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "/usr/local/lib/python3.9/dist-packages/sklearn/cluster/_kmeans.py:870: FutureWarning: The default value of `n_init` will change from 10 to 'auto' in 1.4. Set the value of `n_init` explicitly to suppress the warning\n",
      "  warnings.warn(\n"
     ]
    },
    {
     "data": {
      "text/html": [
       "\n",
       "  <div id=\"df-a659dac2-a788-4520-ad0d-1cdaee79a8d3\">\n",
       "    <div class=\"colab-df-container\">\n",
       "      <div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>No. of visits</th>\n",
       "      <th>Mean_purch</th>\n",
       "      <th>Sum_purch</th>\n",
       "      <th>Item_count</th>\n",
       "      <th>Total_quantity</th>\n",
       "      <th>Avg_quant</th>\n",
       "      <th>CustomerID</th>\n",
       "      <th>cluster_labels</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>4</td>\n",
       "      <td>55.013478</td>\n",
       "      <td>1265.31</td>\n",
       "      <td>12</td>\n",
       "      <td>156</td>\n",
       "      <td>6.782609</td>\n",
       "      <td>5</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>1</td>\n",
       "      <td>19.549792</td>\n",
       "      <td>938.39</td>\n",
       "      <td>48</td>\n",
       "      <td>1005</td>\n",
       "      <td>20.937500</td>\n",
       "      <td>20</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>1</td>\n",
       "      <td>23.804667</td>\n",
       "      <td>357.07</td>\n",
       "      <td>15</td>\n",
       "      <td>91</td>\n",
       "      <td>6.066667</td>\n",
       "      <td>31</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>1</td>\n",
       "      <td>21.090000</td>\n",
       "      <td>210.90</td>\n",
       "      <td>10</td>\n",
       "      <td>90</td>\n",
       "      <td>9.000000</td>\n",
       "      <td>34</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>1</td>\n",
       "      <td>32.650000</td>\n",
       "      <td>326.50</td>\n",
       "      <td>10</td>\n",
       "      <td>321</td>\n",
       "      <td>32.100000</td>\n",
       "      <td>39</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>...</th>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>970</th>\n",
       "      <td>1</td>\n",
       "      <td>15.678571</td>\n",
       "      <td>548.75</td>\n",
       "      <td>34</td>\n",
       "      <td>356</td>\n",
       "      <td>10.171429</td>\n",
       "      <td>4320</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>971</th>\n",
       "      <td>1</td>\n",
       "      <td>22.390000</td>\n",
       "      <td>111.95</td>\n",
       "      <td>5</td>\n",
       "      <td>41</td>\n",
       "      <td>8.200000</td>\n",
       "      <td>4327</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>972</th>\n",
       "      <td>1</td>\n",
       "      <td>51.000000</td>\n",
       "      <td>51.00</td>\n",
       "      <td>1</td>\n",
       "      <td>20</td>\n",
       "      <td>20.000000</td>\n",
       "      <td>4329</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>973</th>\n",
       "      <td>1</td>\n",
       "      <td>18.060000</td>\n",
       "      <td>180.60</td>\n",
       "      <td>10</td>\n",
       "      <td>45</td>\n",
       "      <td>4.500000</td>\n",
       "      <td>4334</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>974</th>\n",
       "      <td>210</td>\n",
       "      <td>13.977867</td>\n",
       "      <td>122138.60</td>\n",
       "      <td>1836</td>\n",
       "      <td>36406</td>\n",
       "      <td>4.166400</td>\n",
       "      <td>4339</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "<p>975 rows × 8 columns</p>\n",
       "</div>\n",
       "      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-a659dac2-a788-4520-ad0d-1cdaee79a8d3')\"\n",
       "              title=\"Convert this dataframe to an interactive table.\"\n",
       "              style=\"display:none;\">\n",
       "        \n",
       "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
       "       width=\"24px\">\n",
       "    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n",
       "    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n",
       "  </svg>\n",
       "      </button>\n",
       "      \n",
       "  <style>\n",
       "    .colab-df-container {\n",
       "      display:flex;\n",
       "      flex-wrap:wrap;\n",
       "      gap: 12px;\n",
       "    }\n",
       "\n",
       "    .colab-df-convert {\n",
       "      background-color: #E8F0FE;\n",
       "      border: none;\n",
       "      border-radius: 50%;\n",
       "      cursor: pointer;\n",
       "      display: none;\n",
       "      fill: #1967D2;\n",
       "      height: 32px;\n",
       "      padding: 0 0 0 0;\n",
       "      width: 32px;\n",
       "    }\n",
       "\n",
       "    .colab-df-convert:hover {\n",
       "      background-color: #E2EBFA;\n",
       "      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
       "      fill: #174EA6;\n",
       "    }\n",
       "\n",
       "    [theme=dark] .colab-df-convert {\n",
       "      background-color: #3B4455;\n",
       "      fill: #D2E3FC;\n",
       "    }\n",
       "\n",
       "    [theme=dark] .colab-df-convert:hover {\n",
       "      background-color: #434B5C;\n",
       "      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
       "      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
       "      fill: #FFFFFF;\n",
       "    }\n",
       "  </style>\n",
       "\n",
       "      <script>\n",
       "        const buttonEl =\n",
       "          document.querySelector('#df-a659dac2-a788-4520-ad0d-1cdaee79a8d3 button.colab-df-convert');\n",
       "        buttonEl.style.display =\n",
       "          google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
       "\n",
       "        async function convertToInteractive(key) {\n",
       "          const element = document.querySelector('#df-a659dac2-a788-4520-ad0d-1cdaee79a8d3');\n",
       "          const dataTable =\n",
       "            await google.colab.kernel.invokeFunction('convertToInteractive',\n",
       "                                                     [key], {});\n",
       "          if (!dataTable) return;\n",
       "\n",
       "          const docLinkHtml = 'Like what you see? Visit the ' +\n",
       "            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n",
       "            + ' to learn more about interactive tables.';\n",
       "          element.innerHTML = '';\n",
       "          dataTable['output_type'] = 'display_data';\n",
       "          await google.colab.output.renderOutput(dataTable, element);\n",
       "          const docLink = document.createElement('div');\n",
       "          docLink.innerHTML = docLinkHtml;\n",
       "          element.appendChild(docLink);\n",
       "        }\n",
       "      </script>\n",
       "    </div>\n",
       "  </div>\n",
       "  "
      ],
      "text/plain": [
       "     No. of visits  Mean_purch  Sum_purch  Item_count  Total_quantity  \\\n",
       "0                4   55.013478    1265.31          12             156   \n",
       "1                1   19.549792     938.39          48            1005   \n",
       "2                1   23.804667     357.07          15              91   \n",
       "3                1   21.090000     210.90          10              90   \n",
       "4                1   32.650000     326.50          10             321   \n",
       "..             ...         ...        ...         ...             ...   \n",
       "970              1   15.678571     548.75          34             356   \n",
       "971              1   22.390000     111.95           5              41   \n",
       "972              1   51.000000      51.00           1              20   \n",
       "973              1   18.060000     180.60          10              45   \n",
       "974            210   13.977867  122138.60        1836           36406   \n",
       "\n",
       "     Avg_quant  CustomerID  cluster_labels  \n",
       "0     6.782609           5               0  \n",
       "1    20.937500          20               0  \n",
       "2     6.066667          31               0  \n",
       "3     9.000000          34               0  \n",
       "4    32.100000          39               0  \n",
       "..         ...         ...             ...  \n",
       "970  10.171429        4320               0  \n",
       "971   8.200000        4327               0  \n",
       "972  20.000000        4329               0  \n",
       "973   4.500000        4334               0  \n",
       "974   4.166400        4339               1  \n",
       "\n",
       "[975 rows x 8 columns]"
      ]
     },
     "execution_count": 78,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "df_mar2011 = df_cluster_labels(dvt_mar2011,3)\n",
    "\n",
    "df_mar2011"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {
    "colab": {
     "base_uri": "https://localhost:8080/"
    },
    "id": "Xht4MGhAm60z",
    "outputId": "31867354-76be-43e6-a94a-0e4a630c2432"
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "The Silhouette Score is :- 0.845799404094935\n"
     ]
    }
   ],
   "source": [
    "silhte_score_mar2011 = silhouette_score(dvt_mar2011, df_mar2011['cluster_labels'])\n",
    "print(\"The Silhouette Score is :- \"+str(silhte_score_mar2011))"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {
    "colab": {
     "base_uri": "https://localhost:8080/"
    },
    "collapsed": true,
    "id": "mE9lHn89zRRA",
    "outputId": "a28bda82-da46-4bb8-e295-56149506d20d"
   },
   "outputs": [
    {
     "data": {
      "text/plain": [
       "0    962\n",
       "2     12\n",
       "1      1\n",
       "Name: cluster_labels, dtype: int64"
      ]
     },
     "execution_count": 80,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "df_mar2011['cluster_labels'].value_counts()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {
    "colab": {
     "base_uri": "https://localhost:8080/"
    },
    "collapsed": true,
    "id": "ABB6oc4ezWpc",
    "outputId": "47155247-8f63-4ec4-9aa6-5cc675c6ec73"
   },
   "outputs": [
    {
     "data": {
      "image/png": "",
      "text/plain": [
       "<Figure size 640x480 with 1 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "plt.scatter(df_mar2011['Mean_purch'], df_mar2011['Sum_purch'], c=df_mar2011['cluster_labels'], cmap='viridis')\n",
    "plt.title(\"For Mar 2011\")\n",
    "plt.xlabel('Mean_purch')\n",
    "plt.ylabel('Sum_purch')\n",
    "plt.show()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {
    "colab": {
     "base_uri": "https://localhost:8080/"
    },
    "collapsed": true,
    "id": "F9wh0zW2zdtq",
    "outputId": "0197876a-d406-4a87-87c8-f7bacf845770"
   },
   "outputs": [
    {
     "data": {
      "text/html": [
       "\n",
       "  <div id=\"df-97190f17-ec2c-4cc1-b690-893eb1fd4b3a\">\n",
       "    <div class=\"colab-df-container\">\n",
       "      <div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>No. of visits</th>\n",
       "      <th>Mean_purch</th>\n",
       "      <th>Sum_purch</th>\n",
       "      <th>Item_count</th>\n",
       "      <th>Total_quantity</th>\n",
       "      <th>Avg_quant</th>\n",
       "      <th>CustomerID</th>\n",
       "      <th>cluster_labels</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>4</td>\n",
       "      <td>55.013478</td>\n",
       "      <td>1265.31</td>\n",
       "      <td>12</td>\n",
       "      <td>156</td>\n",
       "      <td>6.782609</td>\n",
       "      <td>5</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>1</td>\n",
       "      <td>19.549792</td>\n",
       "      <td>938.39</td>\n",
       "      <td>48</td>\n",
       "      <td>1005</td>\n",
       "      <td>20.937500</td>\n",
       "      <td>20</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>1</td>\n",
       "      <td>23.804667</td>\n",
       "      <td>357.07</td>\n",
       "      <td>15</td>\n",
       "      <td>91</td>\n",
       "      <td>6.066667</td>\n",
       "      <td>31</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>1</td>\n",
       "      <td>21.090000</td>\n",
       "      <td>210.90</td>\n",
       "      <td>10</td>\n",
       "      <td>90</td>\n",
       "      <td>9.000000</td>\n",
       "      <td>34</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>1</td>\n",
       "      <td>32.650000</td>\n",
       "      <td>326.50</td>\n",
       "      <td>10</td>\n",
       "      <td>321</td>\n",
       "      <td>32.100000</td>\n",
       "      <td>39</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>...</th>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>969</th>\n",
       "      <td>1</td>\n",
       "      <td>17.638000</td>\n",
       "      <td>176.38</td>\n",
       "      <td>10</td>\n",
       "      <td>122</td>\n",
       "      <td>12.200000</td>\n",
       "      <td>4306</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>970</th>\n",
       "      <td>1</td>\n",
       "      <td>15.678571</td>\n",
       "      <td>548.75</td>\n",
       "      <td>34</td>\n",
       "      <td>356</td>\n",
       "      <td>10.171429</td>\n",
       "      <td>4320</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>971</th>\n",
       "      <td>1</td>\n",
       "      <td>22.390000</td>\n",
       "      <td>111.95</td>\n",
       "      <td>5</td>\n",
       "      <td>41</td>\n",
       "      <td>8.200000</td>\n",
       "      <td>4327</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>972</th>\n",
       "      <td>1</td>\n",
       "      <td>51.000000</td>\n",
       "      <td>51.00</td>\n",
       "      <td>1</td>\n",
       "      <td>20</td>\n",
       "      <td>20.000000</td>\n",
       "      <td>4329</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>973</th>\n",
       "      <td>1</td>\n",
       "      <td>18.060000</td>\n",
       "      <td>180.60</td>\n",
       "      <td>10</td>\n",
       "      <td>45</td>\n",
       "      <td>4.500000</td>\n",
       "      <td>4334</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "<p>962 rows × 8 columns</p>\n",
       "</div>\n",
       "      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-97190f17-ec2c-4cc1-b690-893eb1fd4b3a')\"\n",
       "              title=\"Convert this dataframe to an interactive table.\"\n",
       "              style=\"display:none;\">\n",
       "        \n",
       "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
       "       width=\"24px\">\n",
       "    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n",
       "    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n",
       "  </svg>\n",
       "      </button>\n",
       "      \n",
       "  <style>\n",
       "    .colab-df-container {\n",
       "      display:flex;\n",
       "      flex-wrap:wrap;\n",
       "      gap: 12px;\n",
       "    }\n",
       "\n",
       "    .colab-df-convert {\n",
       "      background-color: #E8F0FE;\n",
       "      border: none;\n",
       "      border-radius: 50%;\n",
       "      cursor: pointer;\n",
       "      display: none;\n",
       "      fill: #1967D2;\n",
       "      height: 32px;\n",
       "      padding: 0 0 0 0;\n",
       "      width: 32px;\n",
       "    }\n",
       "\n",
       "    .colab-df-convert:hover {\n",
       "      background-color: #E2EBFA;\n",
       "      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
       "      fill: #174EA6;\n",
       "    }\n",
       "\n",
       "    [theme=dark] .colab-df-convert {\n",
       "      background-color: #3B4455;\n",
       "      fill: #D2E3FC;\n",
       "    }\n",
       "\n",
       "    [theme=dark] .colab-df-convert:hover {\n",
       "      background-color: #434B5C;\n",
       "      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
       "      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
       "      fill: #FFFFFF;\n",
       "    }\n",
       "  </style>\n",
       "\n",
       "      <script>\n",
       "        const buttonEl =\n",
       "          document.querySelector('#df-97190f17-ec2c-4cc1-b690-893eb1fd4b3a button.colab-df-convert');\n",
       "        buttonEl.style.display =\n",
       "          google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
       "\n",
       "        async function convertToInteractive(key) {\n",
       "          const element = document.querySelector('#df-97190f17-ec2c-4cc1-b690-893eb1fd4b3a');\n",
       "          const dataTable =\n",
       "            await google.colab.kernel.invokeFunction('convertToInteractive',\n",
       "                                                     [key], {});\n",
       "          if (!dataTable) return;\n",
       "\n",
       "          const docLinkHtml = 'Like what you see? Visit the ' +\n",
       "            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n",
       "            + ' to learn more about interactive tables.';\n",
       "          element.innerHTML = '';\n",
       "          dataTable['output_type'] = 'display_data';\n",
       "          await google.colab.output.renderOutput(dataTable, element);\n",
       "          const docLink = document.createElement('div');\n",
       "          docLink.innerHTML = docLinkHtml;\n",
       "          element.appendChild(docLink);\n",
       "        }\n",
       "      </script>\n",
       "    </div>\n",
       "  </div>\n",
       "  "
      ],
      "text/plain": [
       "     No. of visits  Mean_purch  Sum_purch  Item_count  Total_quantity  \\\n",
       "0                4   55.013478    1265.31          12             156   \n",
       "1                1   19.549792     938.39          48            1005   \n",
       "2                1   23.804667     357.07          15              91   \n",
       "3                1   21.090000     210.90          10              90   \n",
       "4                1   32.650000     326.50          10             321   \n",
       "..             ...         ...        ...         ...             ...   \n",
       "969              1   17.638000     176.38          10             122   \n",
       "970              1   15.678571     548.75          34             356   \n",
       "971              1   22.390000     111.95           5              41   \n",
       "972              1   51.000000      51.00           1              20   \n",
       "973              1   18.060000     180.60          10              45   \n",
       "\n",
       "     Avg_quant  CustomerID  cluster_labels  \n",
       "0     6.782609           5               0  \n",
       "1    20.937500          20               0  \n",
       "2     6.066667          31               0  \n",
       "3     9.000000          34               0  \n",
       "4    32.100000          39               0  \n",
       "..         ...         ...             ...  \n",
       "969  12.200000        4306               0  \n",
       "970  10.171429        4320               0  \n",
       "971   8.200000        4327               0  \n",
       "972  20.000000        4329               0  \n",
       "973   4.500000        4334               0  \n",
       "\n",
       "[962 rows x 8 columns]"
      ]
     },
     "execution_count": 82,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "df_mar2011 = df_mar2011[df_mar2011['cluster_labels']!=1]\n",
    "df_mar2011 = df_mar2011[df_mar2011['cluster_labels']!=2]\n",
    "df_mar2011"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {
    "colab": {
     "base_uri": "https://localhost:8080/"
    },
    "collapsed": true,
    "id": "1Pe50OaGz1yL",
    "outputId": "d02a9c85-d5a9-493b-8925-51472f2fe70a"
   },
   "outputs": [
    {
     "data": {
      "text/plain": [
       "0    962\n",
       "Name: cluster_labels, dtype: int64"
      ]
     },
     "execution_count": 83,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "df_mar2011['cluster_labels'].value_counts()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {
    "colab": {
     "base_uri": "https://localhost:8080/"
    },
    "collapsed": true,
    "id": "Dc_pnAoDz50_",
    "outputId": "8bba5358-2e4c-4fc0-b25d-c94bdb032bac"
   },
   "outputs": [
    {
     "data": {
      "text/html": [
       "\n",
       "  <div id=\"df-3560b5f5-5714-4228-bd5c-49d3e79cb42d\">\n",
       "    <div class=\"colab-df-container\">\n",
       "      <div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>No. of visits</th>\n",
       "      <th>Mean_purch</th>\n",
       "      <th>Sum_purch</th>\n",
       "      <th>Item_count</th>\n",
       "      <th>Total_quantity</th>\n",
       "      <th>Avg_quant</th>\n",
       "      <th>CustomerID</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>4</td>\n",
       "      <td>55.013478</td>\n",
       "      <td>1265.31</td>\n",
       "      <td>12</td>\n",
       "      <td>156</td>\n",
       "      <td>6.782609</td>\n",
       "      <td>5</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>1</td>\n",
       "      <td>19.549792</td>\n",
       "      <td>938.39</td>\n",
       "      <td>48</td>\n",
       "      <td>1005</td>\n",
       "      <td>20.937500</td>\n",
       "      <td>20</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>1</td>\n",
       "      <td>23.804667</td>\n",
       "      <td>357.07</td>\n",
       "      <td>15</td>\n",
       "      <td>91</td>\n",
       "      <td>6.066667</td>\n",
       "      <td>31</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>1</td>\n",
       "      <td>21.090000</td>\n",
       "      <td>210.90</td>\n",
       "      <td>10</td>\n",
       "      <td>90</td>\n",
       "      <td>9.000000</td>\n",
       "      <td>34</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>1</td>\n",
       "      <td>32.650000</td>\n",
       "      <td>326.50</td>\n",
       "      <td>10</td>\n",
       "      <td>321</td>\n",
       "      <td>32.100000</td>\n",
       "      <td>39</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>...</th>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>969</th>\n",
       "      <td>1</td>\n",
       "      <td>17.638000</td>\n",
       "      <td>176.38</td>\n",
       "      <td>10</td>\n",
       "      <td>122</td>\n",
       "      <td>12.200000</td>\n",
       "      <td>4306</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>970</th>\n",
       "      <td>1</td>\n",
       "      <td>15.678571</td>\n",
       "      <td>548.75</td>\n",
       "      <td>34</td>\n",
       "      <td>356</td>\n",
       "      <td>10.171429</td>\n",
       "      <td>4320</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>971</th>\n",
       "      <td>1</td>\n",
       "      <td>22.390000</td>\n",
       "      <td>111.95</td>\n",
       "      <td>5</td>\n",
       "      <td>41</td>\n",
       "      <td>8.200000</td>\n",
       "      <td>4327</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>972</th>\n",
       "      <td>1</td>\n",
       "      <td>51.000000</td>\n",
       "      <td>51.00</td>\n",
       "      <td>1</td>\n",
       "      <td>20</td>\n",
       "      <td>20.000000</td>\n",
       "      <td>4329</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>973</th>\n",
       "      <td>1</td>\n",
       "      <td>18.060000</td>\n",
       "      <td>180.60</td>\n",
       "      <td>10</td>\n",
       "      <td>45</td>\n",
       "      <td>4.500000</td>\n",
       "      <td>4334</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "<p>962 rows × 7 columns</p>\n",
       "</div>\n",
       "      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-3560b5f5-5714-4228-bd5c-49d3e79cb42d')\"\n",
       "              title=\"Convert this dataframe to an interactive table.\"\n",
       "              style=\"display:none;\">\n",
       "        \n",
       "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
       "       width=\"24px\">\n",
       "    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n",
       "    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n",
       "  </svg>\n",
       "      </button>\n",
       "      \n",
       "  <style>\n",
       "    .colab-df-container {\n",
       "      display:flex;\n",
       "      flex-wrap:wrap;\n",
       "      gap: 12px;\n",
       "    }\n",
       "\n",
       "    .colab-df-convert {\n",
       "      background-color: #E8F0FE;\n",
       "      border: none;\n",
       "      border-radius: 50%;\n",
       "      cursor: pointer;\n",
       "      display: none;\n",
       "      fill: #1967D2;\n",
       "      height: 32px;\n",
       "      padding: 0 0 0 0;\n",
       "      width: 32px;\n",
       "    }\n",
       "\n",
       "    .colab-df-convert:hover {\n",
       "      background-color: #E2EBFA;\n",
       "      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
       "      fill: #174EA6;\n",
       "    }\n",
       "\n",
       "    [theme=dark] .colab-df-convert {\n",
       "      background-color: #3B4455;\n",
       "      fill: #D2E3FC;\n",
       "    }\n",
       "\n",
       "    [theme=dark] .colab-df-convert:hover {\n",
       "      background-color: #434B5C;\n",
       "      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
       "      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
       "      fill: #FFFFFF;\n",
       "    }\n",
       "  </style>\n",
       "\n",
       "      <script>\n",
       "        const buttonEl =\n",
       "          document.querySelector('#df-3560b5f5-5714-4228-bd5c-49d3e79cb42d button.colab-df-convert');\n",
       "        buttonEl.style.display =\n",
       "          google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
       "\n",
       "        async function convertToInteractive(key) {\n",
       "          const element = document.querySelector('#df-3560b5f5-5714-4228-bd5c-49d3e79cb42d');\n",
       "          const dataTable =\n",
       "            await google.colab.kernel.invokeFunction('convertToInteractive',\n",
       "                                                     [key], {});\n",
       "          if (!dataTable) return;\n",
       "\n",
       "          const docLinkHtml = 'Like what you see? Visit the ' +\n",
       "            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n",
       "            + ' to learn more about interactive tables.';\n",
       "          element.innerHTML = '';\n",
       "          dataTable['output_type'] = 'display_data';\n",
       "          await google.colab.output.renderOutput(dataTable, element);\n",
       "          const docLink = document.createElement('div');\n",
       "          docLink.innerHTML = docLinkHtml;\n",
       "          element.appendChild(docLink);\n",
       "        }\n",
       "      </script>\n",
       "    </div>\n",
       "  </div>\n",
       "  "
      ],
      "text/plain": [
       "     No. of visits  Mean_purch  Sum_purch  Item_count  Total_quantity  \\\n",
       "0                4   55.013478    1265.31          12             156   \n",
       "1                1   19.549792     938.39          48            1005   \n",
       "2                1   23.804667     357.07          15              91   \n",
       "3                1   21.090000     210.90          10              90   \n",
       "4                1   32.650000     326.50          10             321   \n",
       "..             ...         ...        ...         ...             ...   \n",
       "969              1   17.638000     176.38          10             122   \n",
       "970              1   15.678571     548.75          34             356   \n",
       "971              1   22.390000     111.95           5              41   \n",
       "972              1   51.000000      51.00           1              20   \n",
       "973              1   18.060000     180.60          10              45   \n",
       "\n",
       "     Avg_quant  CustomerID  \n",
       "0     6.782609           5  \n",
       "1    20.937500          20  \n",
       "2     6.066667          31  \n",
       "3     9.000000          34  \n",
       "4    32.100000          39  \n",
       "..         ...         ...  \n",
       "969  12.200000        4306  \n",
       "970  10.171429        4320  \n",
       "971   8.200000        4327  \n",
       "972  20.000000        4329  \n",
       "973   4.500000        4334  \n",
       "\n",
       "[962 rows x 7 columns]"
      ]
     },
     "execution_count": 84,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "df_mar2011_person = df_mar2011.copy(deep=True)\n",
    "df_mar2011_person.drop(['cluster_labels'],axis=1,inplace=True)\n",
    "df_mar2011_person"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {
    "colab": {
     "base_uri": "https://localhost:8080/"
    },
    "collapsed": true,
    "id": "Qyzk37dyz_eD",
    "outputId": "b01dcaa4-c7fa-47a1-d631-16fd22aecdf1"
   },
   "outputs": [
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "/usr/local/lib/python3.9/dist-packages/sklearn/cluster/_kmeans.py:870: FutureWarning: The default value of `n_init` will change from 10 to 'auto' in 1.4. Set the value of `n_init` explicitly to suppress the warning\n",
      "  warnings.warn(\n"
     ]
    },
    {
     "data": {
      "text/html": [
       "\n",
       "  <div id=\"df-660e8270-01c1-4d13-b929-fe47d9a75630\">\n",
       "    <div class=\"colab-df-container\">\n",
       "      <div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>No. of visits</th>\n",
       "      <th>Mean_purch</th>\n",
       "      <th>Sum_purch</th>\n",
       "      <th>Item_count</th>\n",
       "      <th>Total_quantity</th>\n",
       "      <th>Avg_quant</th>\n",
       "      <th>CustomerID</th>\n",
       "      <th>cluster_labels</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>4</td>\n",
       "      <td>55.013478</td>\n",
       "      <td>1265.31</td>\n",
       "      <td>12</td>\n",
       "      <td>156</td>\n",
       "      <td>6.782609</td>\n",
       "      <td>5</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>1</td>\n",
       "      <td>19.549792</td>\n",
       "      <td>938.39</td>\n",
       "      <td>48</td>\n",
       "      <td>1005</td>\n",
       "      <td>20.937500</td>\n",
       "      <td>20</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>1</td>\n",
       "      <td>23.804667</td>\n",
       "      <td>357.07</td>\n",
       "      <td>15</td>\n",
       "      <td>91</td>\n",
       "      <td>6.066667</td>\n",
       "      <td>31</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>1</td>\n",
       "      <td>21.090000</td>\n",
       "      <td>210.90</td>\n",
       "      <td>10</td>\n",
       "      <td>90</td>\n",
       "      <td>9.000000</td>\n",
       "      <td>34</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>1</td>\n",
       "      <td>32.650000</td>\n",
       "      <td>326.50</td>\n",
       "      <td>10</td>\n",
       "      <td>321</td>\n",
       "      <td>32.100000</td>\n",
       "      <td>39</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>...</th>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>969</th>\n",
       "      <td>1</td>\n",
       "      <td>17.638000</td>\n",
       "      <td>176.38</td>\n",
       "      <td>10</td>\n",
       "      <td>122</td>\n",
       "      <td>12.200000</td>\n",
       "      <td>4306</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>970</th>\n",
       "      <td>1</td>\n",
       "      <td>15.678571</td>\n",
       "      <td>548.75</td>\n",
       "      <td>34</td>\n",
       "      <td>356</td>\n",
       "      <td>10.171429</td>\n",
       "      <td>4320</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>971</th>\n",
       "      <td>1</td>\n",
       "      <td>22.390000</td>\n",
       "      <td>111.95</td>\n",
       "      <td>5</td>\n",
       "      <td>41</td>\n",
       "      <td>8.200000</td>\n",
       "      <td>4327</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>972</th>\n",
       "      <td>1</td>\n",
       "      <td>51.000000</td>\n",
       "      <td>51.00</td>\n",
       "      <td>1</td>\n",
       "      <td>20</td>\n",
       "      <td>20.000000</td>\n",
       "      <td>4329</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>973</th>\n",
       "      <td>1</td>\n",
       "      <td>18.060000</td>\n",
       "      <td>180.60</td>\n",
       "      <td>10</td>\n",
       "      <td>45</td>\n",
       "      <td>4.500000</td>\n",
       "      <td>4334</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "<p>962 rows × 8 columns</p>\n",
       "</div>\n",
       "      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-660e8270-01c1-4d13-b929-fe47d9a75630')\"\n",
       "              title=\"Convert this dataframe to an interactive table.\"\n",
       "              style=\"display:none;\">\n",
       "        \n",
       "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
       "       width=\"24px\">\n",
       "    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n",
       "    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n",
       "  </svg>\n",
       "      </button>\n",
       "      \n",
       "  <style>\n",
       "    .colab-df-container {\n",
       "      display:flex;\n",
       "      flex-wrap:wrap;\n",
       "      gap: 12px;\n",
       "    }\n",
       "\n",
       "    .colab-df-convert {\n",
       "      background-color: #E8F0FE;\n",
       "      border: none;\n",
       "      border-radius: 50%;\n",
       "      cursor: pointer;\n",
       "      display: none;\n",
       "      fill: #1967D2;\n",
       "      height: 32px;\n",
       "      padding: 0 0 0 0;\n",
       "      width: 32px;\n",
       "    }\n",
       "\n",
       "    .colab-df-convert:hover {\n",
       "      background-color: #E2EBFA;\n",
       "      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
       "      fill: #174EA6;\n",
       "    }\n",
       "\n",
       "    [theme=dark] .colab-df-convert {\n",
       "      background-color: #3B4455;\n",
       "      fill: #D2E3FC;\n",
       "    }\n",
       "\n",
       "    [theme=dark] .colab-df-convert:hover {\n",
       "      background-color: #434B5C;\n",
       "      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
       "      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
       "      fill: #FFFFFF;\n",
       "    }\n",
       "  </style>\n",
       "\n",
       "      <script>\n",
       "        const buttonEl =\n",
       "          document.querySelector('#df-660e8270-01c1-4d13-b929-fe47d9a75630 button.colab-df-convert');\n",
       "        buttonEl.style.display =\n",
       "          google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
       "\n",
       "        async function convertToInteractive(key) {\n",
       "          const element = document.querySelector('#df-660e8270-01c1-4d13-b929-fe47d9a75630');\n",
       "          const dataTable =\n",
       "            await google.colab.kernel.invokeFunction('convertToInteractive',\n",
       "                                                     [key], {});\n",
       "          if (!dataTable) return;\n",
       "\n",
       "          const docLinkHtml = 'Like what you see? Visit the ' +\n",
       "            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n",
       "            + ' to learn more about interactive tables.';\n",
       "          element.innerHTML = '';\n",
       "          dataTable['output_type'] = 'display_data';\n",
       "          await google.colab.output.renderOutput(dataTable, element);\n",
       "          const docLink = document.createElement('div');\n",
       "          docLink.innerHTML = docLinkHtml;\n",
       "          element.appendChild(docLink);\n",
       "        }\n",
       "      </script>\n",
       "    </div>\n",
       "  </div>\n",
       "  "
      ],
      "text/plain": [
       "     No. of visits  Mean_purch  Sum_purch  Item_count  Total_quantity  \\\n",
       "0                4   55.013478    1265.31          12             156   \n",
       "1                1   19.549792     938.39          48            1005   \n",
       "2                1   23.804667     357.07          15              91   \n",
       "3                1   21.090000     210.90          10              90   \n",
       "4                1   32.650000     326.50          10             321   \n",
       "..             ...         ...        ...         ...             ...   \n",
       "969              1   17.638000     176.38          10             122   \n",
       "970              1   15.678571     548.75          34             356   \n",
       "971              1   22.390000     111.95           5              41   \n",
       "972              1   51.000000      51.00           1              20   \n",
       "973              1   18.060000     180.60          10              45   \n",
       "\n",
       "     Avg_quant  CustomerID  cluster_labels  \n",
       "0     6.782609           5               0  \n",
       "1    20.937500          20               0  \n",
       "2     6.066667          31               0  \n",
       "3     9.000000          34               0  \n",
       "4    32.100000          39               0  \n",
       "..         ...         ...             ...  \n",
       "969  12.200000        4306               1  \n",
       "970  10.171429        4320               1  \n",
       "971   8.200000        4327               1  \n",
       "972  20.000000        4329               1  \n",
       "973   4.500000        4334               1  \n",
       "\n",
       "[962 rows x 8 columns]"
      ]
     },
     "execution_count": 85,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "df_mar2011_new = df_cluster_labels(df_mar2011_person,3)\n",
    "df_mar2011_new"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {
    "colab": {
     "base_uri": "https://localhost:8080/"
    },
    "id": "HMpy7aAtnJVM",
    "outputId": "4f78968b-718f-431f-c6ed-72700e3ff2cf"
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "The Silhouette Score is :- 0.5468712198885177\n"
     ]
    }
   ],
   "source": [
    "silhte_score_mar2011_new = silhouette_score(df_mar2011_person, df_mar2011_new['cluster_labels'])\n",
    "print(\"The Silhouette Score is :- \"+str(silhte_score_mar2011_new))\n",
    "#Indicates that silhouette score is realistic for dataset without outliers"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {
    "colab": {
     "base_uri": "https://localhost:8080/"
    },
    "collapsed": true,
    "id": "2mK-NURB0FBy",
    "outputId": "b5cfa686-6383-483d-d4e3-61a1f98a3ab3"
   },
   "outputs": [
    {
     "data": {
      "text/plain": [
       "0    482\n",
       "1    453\n",
       "2     27\n",
       "Name: cluster_labels, dtype: int64"
      ]
     },
     "execution_count": 87,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "df_mar2011_new['cluster_labels'].value_counts()\n",
    "#These are comparatively good clusters"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {
    "colab": {
     "base_uri": "https://localhost:8080/"
    },
    "collapsed": true,
    "id": "4B51TtJh0IwX",
    "outputId": "12186945-2450-4456-b0d2-786a09a3eb28"
   },
   "outputs": [
    {
     "data": {
      "image/png": "",
      "text/plain": [
       "<Figure size 640x480 with 1 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "plt.scatter(df_mar2011_new['Mean_purch'], df_mar2011_new['Sum_purch'], c=df_mar2011_new['cluster_labels'], cmap='viridis')\n",
    "plt.title(\"For Mar 2011 (After removing outliers)\")\n",
    "plt.xlabel('Mean_purch')\n",
    "plt.ylabel('Sum_purch')\n",
    "plt.show()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {
    "id": "ULf_E46j0Rxj"
   },
   "outputs": [],
   "source": [
    "mar2011 = descrip_dict(og_mar2011,df_mar2011_new)\n",
    "mar2011 = processlis(mar2011)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {
    "colab": {
     "base_uri": "https://localhost:8080/"
    },
    "collapsed": true,
    "id": "keIpEjz20XNl",
    "outputId": "2578435a-121e-43dc-8a93-f798cf4bc522"
   },
   "outputs": [
    {
     "data": {
      "text/plain": [
       "[     CustomerID                                        Description\n",
       " 0             5  [POSTAGE, DELUXE SEWING KIT , PINK HEART SHAPE...\n",
       " 1            20  [GIRLS ALPHABET IRON ON PATCHES , BOYS ALPHABE...\n",
       " 2            31  [RETROSPOT PARTY BAG + STICKER SET, ORGANISER ...\n",
       " 3            34  [SET 3 SONG BIRD PAPER EGGS ASSORTED, SET 3 PA...\n",
       " 4            39  [CHARLOTTE BAG DOLLY GIRL DESIGN, CHARLOTTE BA...\n",
       " ..          ...                                                ...\n",
       " 477        2163  [PAPER CHAIN KIT EMPIRE, SET/20 STRAWBERRY PAP...\n",
       " 478        2164  [Manual, DOORMAT FAIRY CAKE, DOORMAT SPOTTY HO...\n",
       " 479        2168  [CHILLI LIGHTS, SET/5 RED RETROSPOT LID GLASS ...\n",
       " 480        2169                     [HOMEMADE JAM SCENTED CANDLES]\n",
       " 481        2171                                    [PARTY BUNTING]\n",
       " \n",
       " [482 rows x 2 columns],\n",
       "      CustomerID                                        Description\n",
       " 0          2173  [LANTERN CREAM GAZEBO , REGENCY CAKESTAND 3 TI...\n",
       " 1          2176  [PICNIC BASKET WICKER LARGE, CREAM SWEETHEART ...\n",
       " 2          2184  [IVORY GIANT GARDEN THERMOMETER, HERB MARKER R...\n",
       " 3          2209  [RED RETROSPOT CAKE STAND, MEMO BOARD RETROSPO...\n",
       " 4          2212  [12 COLOURED PARTY BALLOONS, PACK OF 12 COLOUR...\n",
       " ..          ...                                                ...\n",
       " 448        4306  [BUNNY WOODEN PAINTED WITH FLOWER , JIGSAW TRE...\n",
       " 449        4320  [PEARL CRYSTAL PUMPKIN T-LIGHT HLDR, HANGING H...\n",
       " 450        4327  [PANTRY SCRUBBING BRUSH, HANGING HEART JAR T-L...\n",
       " 451        4329                           [ART LIGHTS,FUNK MONKEY]\n",
       " 452        4334  [WOOD BLACK BOARD ANT WHITE FINISH, RETROSPOT ...\n",
       " \n",
       " [453 rows x 2 columns]]"
      ]
     },
     "execution_count": 90,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "mar2011"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {
    "colab": {
     "base_uri": "https://localhost:8080/"
    },
    "id": "RNJ8_TpKJeD_",
    "outputId": "95743192-0212-41a9-ab3b-12ad3977d896"
   },
   "outputs": [
    {
     "data": {
      "image/png": "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r9C3b9+qnl2VWrx4MebPn1/TzSAiIqIaVu0f82/ZsiUaNWqEc+fOAQA8PT1x7do1VU1BQQFu3rwJT09PpSYjI0NVY3peVk3x8cVfZ6lGKzo6GpmZmcrj0qVLVi8vERER/flVe0C6fPkybty4AS8vLwBAUFAQbt++jeTkZKXmyy+/RFFREQIDA5WahIQE5OfnKzXx8fFo27Yt3NzclJoDBw6o5hUfH4+goCAAgJ+fHzw9PVU1RqMRSUlJSo2WwWCAi4uL6kFERER1j9UB6e7du0hJSUFKSgqA+52hU1JScPHiRdy9exczZ87E999/jwsXLuDAgQN45pln0Lp1a4SEhAAA2rdvj/79+2P8+PE4fPgwvvvuO0yZMgVDhw6Ft7c3AGD48OHQ6/UIDw/HyZMnsX37dqxatQqRkZFKO6ZPn469e/di2bJlOH36NObNm4cjR45gypQpAACdToeIiAgsWrQIn376KX766SeMHDkS3t7eCAsLq+RqIyIiolrN2o+9HTx4UACYPUaNGiXZ2dnSr18/ady4sdSrV098fX1l/Pjxkp6erprGjRs3ZNiwYeLs7CwuLi4yZswYuXPnjqrmxx9/lCeeeEIMBoM0bdpUlixZYtaWHTt2SJs2bUSv10tAQIDs2bNHNb6oqEjmzJkjHh4eYjAYpG/fvnLmzJlyLys/5k/058Rjj6huq4qP+etERGownz3QjEYjXF1dkZmZWaHbbdl5BfCP2QcAOLUgBI76Ku8TT0QW8Ngjqtsq+/4N8LfYiIiIiMwwIBERERFpMCARERERaTAgEREREWkwIBERERFpMCARERERaTAgEREREWkwIBERERFpMCARERERaTAgEREREWkwIBERERFpMCARERERaTAgEREREWkwIBERERFpMCARERERaTAgEREREWkwIBERERFpMCARERERaTAgEREREWkwIBERERFpMCARERERaTAgEREREWkwIBERERFpMCARERERaTAgEREREWkwIBERERFpMCARERERaTAgEREREWkwIBERERFpMCARERERaTAgEREREWkwIBERERFpMCARERERaTAgEREREWkwIBERERFpMCARERERaTAgEREREWkwIBERERFpMCARERERaVgdkBISEjBw4EB4e3tDp9Nh165dyrj8/HxERUWhQ4cOcHJygre3N0aOHImrV6+qptGiRQvodDrVY8mSJaqa48ePo2fPnrC3t4ePjw9iY2PN2rJz5060a9cO9vb26NChAz777DPVeBFBTEwMvLy84ODggODgYJw9e9baRSYiIqI6xuqAlJWVhU6dOmHNmjVm47Kzs3H06FHMmTMHR48exUcffYQzZ85g0KBBZrULFixAWlqa8pg6daoyzmg0ol+/fvD19UVycjKWLl2KefPmYf369UrNoUOHMGzYMISHh+PYsWMICwtDWFgYTpw4odTExsbi7bffRlxcHJKSkuDk5ISQkBDk5ORYu9hERERUh9hZ+4IBAwZgwIABFse5uroiPj5eNWz16tXo0aMHLl68iObNmyvD69evD09PT4vT2bJlC/Ly8rBhwwbo9XoEBAQgJSUFy5cvx8svvwwAWLVqFfr374+ZM2cCABYuXIj4+HisXr0acXFxEBGsXLkSs2fPxjPPPAMA+Oc//wkPDw/s2rULQ4cOtXbRiYiIqI6o9j5ImZmZ0Ol0aNCggWr4kiVL4O7uji5dumDp0qUoKChQxiUmJqJXr17Q6/XKsJCQEJw5cwa3bt1SaoKDg1XTDAkJQWJiIgAgNTUV6enpqhpXV1cEBgYqNVq5ubkwGo2qBxEREdU9Vl9BskZOTg6ioqIwbNgwuLi4KMOnTZuGrl27omHDhjh06BCio6ORlpaG5cuXAwDS09Ph5+enmpaHh4cyzs3NDenp6cqw4jXp6elKXfHXWarRWrx4MebPn1+JJSYiIqLaoNoCUn5+Pp5//nmICNatW6caFxkZqfy/Y8eO0Ov1mDBhAhYvXgyDwVBdTSpTdHS0qm1GoxE+Pj411h4iIiKqGdVyi80Ujn777TfEx8errh5ZEhgYiIKCAly4cAEA4OnpiYyMDFWN6bmp31JJNcXHF3+dpRotg8EAFxcX1YOIiIjqnioPSKZwdPbsWezfvx/u7u5lviYlJQU2NjZo0qQJACAoKAgJCQnIz89XauLj49G2bVu4ubkpNQcOHFBNJz4+HkFBQQAAPz8/eHp6qmqMRiOSkpKUGiIiIiJLrL7FdvfuXZw7d055npqaipSUFDRs2BBeXl4YMmQIjh49it27d6OwsFDp79OwYUPo9XokJiYiKSkJffr0Qf369ZGYmIgZM2bgxRdfVMLP8OHDMX/+fISHhyMqKgonTpzAqlWrsGLFCmW+06dPR+/evbFs2TKEhoZi27ZtOHLkiPJVADqdDhEREVi0aBEeeugh+Pn5Yc6cOfD29kZYWFhl1hkRERHVdmKlgwcPCgCzx6hRoyQ1NdXiOABy8OBBERFJTk6WwMBAcXV1FXt7e2nfvr288cYbkpOTo5rPjz/+KE888YQYDAZp2rSpLFmyxKwtO3bskDZt2oher5eAgADZs2ePanxRUZHMmTNHPDw8xGAwSN++feXMmTPlXtbMzEwBIJmZmdauJhERycrNF9+o3eIbtVuycvMrNA0ish6PPaK6rbLv3yIiOhGRGklmfwJGoxGurq7IzMysUH+k7LwC+MfsAwCcWhACR321fmiQiP4Pjz2iuq2y798Af4uNiIiIyAwDEhEREZEGAxIRERGRBgMSERERkQYDEhEREZEGAxIRERGRBgMSERERkQYDEhEREZEGAxIRERGRBgMSERERkQYDEhEREZEGAxIRERGRBgMSERERkQYDEhEREZEGAxIRERGRBgMSERERkQYDEhEREZEGAxIRERGRBgMSERERkQYDEhEREZEGAxIRERGRBgMSERERkQYDEhEREZEGAxIRERGRBgMSERERkQYDEhEREZEGAxIRERGRBgMSERERkQYDEhEREZEGAxIRERGRBgMSERERkQYDEhEREZEGAxIRERGRBgMSERERkQYDEhEREZEGAxIRERGRBgMSERERkQYDEhEREZGG1QEpISEBAwcOhLe3N3Q6HXbt2qUaLyKIiYmBl5cXHBwcEBwcjLNnz6pqbt68iREjRsDFxQUNGjRAeHg47t69q6o5fvw4evbsCXt7e/j4+CA2NtasLTt37kS7du1gb2+PDh064LPPPrO6LURERERaVgekrKwsdOrUCWvWrLE4PjY2Fm+//Tbi4uKQlJQEJycnhISEICcnR6kZMWIETp48ifj4eOzevRsJCQl4+eWXlfFGoxH9+vWDr68vkpOTsXTpUsybNw/r169Xag4dOoRhw4YhPDwcx44dQ1hYGMLCwnDixAmr2kJERERkRioBgHz88cfK86KiIvH09JSlS5cqw27fvi0Gg0E+/PBDERE5deqUAJAffvhBqfn8889Fp9PJlStXRERk7dq14ubmJrm5uUpNVFSUtG3bVnn+/PPPS2hoqKo9gYGBMmHChHK3pSyZmZkCQDIzM8tVr5WVmy++UbvFN2q3ZOXmV2gaRGQ9HntEdVtl379FRKq0D1JqairS09MRHBysDHN1dUVgYCASExMBAImJiWjQoAG6d++u1AQHB8PGxgZJSUlKTa9evaDX65WakJAQnDlzBrdu3VJqis/HVGOaT3naopWbmwuj0ah6EBERUd1TpQEpPT0dAODh4aEa7uHhoYxLT09HkyZNVOPt7OzQsGFDVY2laRSfR0k1xceX1RatxYsXw9XVVXn4+PiUY6mJiIiotuGn2IqJjo5GZmam8rh06VJNN4mIiIhqQJUGJE9PTwBARkaGanhGRoYyztPTE9euXVONLygowM2bN1U1lqZRfB4l1RQfX1ZbtAwGA1xcXFQPIiIiqnuqNCD5+fnB09MTBw4cUIYZjUYkJSUhKCgIABAUFITbt28jOTlZqfnyyy9RVFSEwMBApSYhIQH5+flKTXx8PNq2bQs3Nzelpvh8TDWm+ZSnLURERESWWB2Q7t69i5SUFKSkpAC43xk6JSUFFy9ehE6nQ0REBBYtWoRPP/0UP/30E0aOHAlvb2+EhYUBANq3b4/+/ftj/PjxOHz4ML777jtMmTIFQ4cOhbe3NwBg+PDh0Ov1CA8Px8mTJ7F9+3asWrUKkZGRSjumT5+OvXv3YtmyZTh9+jTmzZuHI0eOYMqUKQBQrrYQERERWWTtx94OHjwoAMweo0aNEpH7H6+fM2eOeHh4iMFgkL59+8qZM2dU07hx44YMGzZMnJ2dxcXFRcaMGSN37txR1fz444/yxBNPiMFgkKZNm8qSJUvM2rJjxw5p06aN6PV6CQgIkD179qjGl6ctpeHH/In+nHjsEdVtVfExf52ISA3mswea0WiEq6srMjMzK9QfKTuvAP4x+wAApxaEwFFvV9VNJCILeOwR1W2Vff8G+Ck2IiIiIjMMSEREREQaDEhEREREGgxIRERERBoMSEREREQaDEhEREREGgxIRERERBoMSEREREQaDEhEREREGgxIRERERBoMSEREREQaDEhEREREGgxIRERERBoMSEREREQaDEhEREREGgxIRERERBoMSEREREQaDEhEREREGgxIRERERBoMSEREREQaDEhEREREGgxIRERERBoMSEREREQaDEhEREREGgxIRERERBoMSEREREQaDEhEREREGgxIRERERBoMSEREREQaDEhEREREGgxIRERERBoMSEREREQaDEhEREREGgxIRERERBoMSEREREQa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t9iIiP688rMZjsjcpe95VbEK8JIGEVFt8Oo5QO9Y062gmpSXDbzVuqZbUWswIBER1QZ6R946JqpCvMVGREREpMGARERERKTBgERERESkwYBEREREpMGARERERKTBgERERESkwYBEREREpMGARERERKTBgERERESkwYBEREREpMGARERERKTBgERERESkwYBEREREpMGARERERKTBgERERESkwYBEREREpMGARERERKTBgERERESkwYBEREREpMGARERERKTBgERERESkwYBEREREpMGARERERKTBgERERESkwYBEREREpMGARERERKTBgERERESkwYBEREREpMGARERERKTBgERERESkwYBEREREpMGARERERKTBgERERESkwYBEREREpGFX0w0gIiKqFUSA/Oyam39etuX/14R6joBOV7NtqKQqD0iLFy/GRx99hNOnT8PBwQGPPfYY3nzzTbRt21apefLJJ/H111+rXjdhwgTExcUpzy9evIhJkybh4MGDcHZ2xqhRo7B48WLY2f23yV999RUiIyNx8uRJ+Pj4YPbs2Rg9erRqumvWrMHSpUuRnp6OTp064Z133kGPHj2qerGJiKguEwE2hACXkmq6Jfe91bpm5+/zKDB27586JFX5Lbavv/4akydPxvfff4/4+Hjk5+ejX79+yMrKUtWNHz8eaWlpyiM2NlYZV1hYiNDQUOTl5eHQoUPYvHkzNm3ahJiYGKUmNTUVoaGh6NOnD1JSUhAREYFx48Zh3759Ss327dsRGRmJuXPn4ujRo+jUqRNCQkJw7dq1ql5sIiKqy/KzH5xw9CC49H3NXk2rAlV+BWnv3r2q55s2bUKTJk2QnJyMXr16KcMdHR3h6elpcRpffPEFTp06hf3798PDwwOdO3fGwoULERUVhXnz5kGv1yMuLg5+fn5YtmwZAKB9+/b49ttvsWLFCoSEhAAAli9fjvHjx2PMmDEAgLi4OOzZswcbNmzA//zP/1T1ohMREQGvngP0jjXdipqRl13zV6+qSLX3QcrMzAQANGzYUDV8y5Yt+OCDD+Dp6YmBAwdizpw5cHS8v0MlJiaiQ4cO8PDwUOpDQkIwadIknDx5El26dEFiYiKCg4NV0wwJCUFERAQAIC8vD8nJyYiOjlbG29jYIDg4GImJiRbbmpubi9zcXOW50Wis+IITEVHdpHcE9E41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",
      "text/plain": [
       "<Figure size 640x480 with 1 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "data": {
      "image/png": "",
      "text/plain": [
       "<Figure size 500x500 with 1 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "(967, 4)\n",
      "(1, 4)\n",
      "(7, 4)\n"
     ]
    },
    {
     "data": {
      "image/png": "",
      "text/plain": [
       "<Figure size 640x480 with 1 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "data": {
      "image/png": "",
      "text/plain": [
       "<Figure size 500x500 with 1 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "(505, 5)\n",
      "(462, 5)\n"
     ]
    },
    {
     "data": {
      "text/plain": [
       "[     CustomerID                                        Description\n",
       " 0             5  [POSTAGE, DELUXE SEWING KIT , PINK HEART SHAPE...\n",
       " 1            20  [GIRLS ALPHABET IRON ON PATCHES , BOYS ALPHABE...\n",
       " 2            31  [RETROSPOT PARTY BAG + STICKER SET, ORGANISER ...\n",
       " 3            34  [SET 3 SONG BIRD PAPER EGGS ASSORTED, SET 3 PA...\n",
       " 4            39  [CHARLOTTE BAG DOLLY GIRL DESIGN, CHARLOTTE BA...\n",
       " ..          ...                                                ...\n",
       " 500        3157  [BAG 250g SWIRLY MARBLES, VINTAGE SNAP CARDS, ...\n",
       " 501        3653  [DOORMAT RED RETROSPOT, DOORMAT 3 SMILEY CATS,...\n",
       " 502        3671  [FELTCRAFT CUSHION OWL, FELTCRAFT CUSHION RABB...\n",
       " 503        3729  [HEART OF WICKER SMALL, VINTAGE UNION JACK BUN...\n",
       " 504        4156    [LUNCH BOX I LOVE LONDON, DOLLY GIRL LUNCH BOX]\n",
       " \n",
       " [505 rows x 2 columns],\n",
       "      CustomerID                                        Description\n",
       " 0          1469  [3 HOOK PHOTO SHELF ANTIQUE WHITE, VINTAGE SNA...\n",
       " 1          1649  [PARTY CONES CANDY ASSORTED, PINK PARTY BAGS, ...\n",
       " 2          1864  [GINGHAM HEART DECORATION, 6 RIBBONS RUSTIC CH...\n",
       " 3          1880  [FRENCH ENAMEL CANDLEHOLDER, VICTORIAN GLASS H...\n",
       " 4          2057  [SET OF 4 PANTRY JELLY MOULDS, TRAVEL CARD WAL...\n",
       " ..          ...                                                ...\n",
       " 457        4287  [HANGING SPRING FLOWER EGG SMALL, S/12 MINI RA...\n",
       " 458        4292  [SET OF 4 PANTRY JELLY MOULDS, SET OF 5 MINI G...\n",
       " 459        4293  [BAG 250g SWIRLY MARBLES, MOUSE TOY WITH PINK ...\n",
       " 460        4294  [PLEASE ONE PERSON METAL SIGN, MAN FLU METAL S...\n",
       " 461        4295  [GARLAND WOODEN HAPPY EASTER, PARTY BUNTING, V...\n",
       " \n",
       " [462 rows x 2 columns]]"
      ]
     },
     "execution_count": 91,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "pca = PCA(n_components = 3)\n",
    "pca.fit(X = dvt_mar2011)\n",
    "new_dvt = pca.transform(dvt_mar2011)\n",
    "\n",
    "new_dvt = pd.DataFrame(data = new_dvt,columns = ['X0','X1','X2'])\n",
    "model = AgglomerativeClustering(distance_threshold=0, n_clusters=None, linkage='ward').fit(new_dvt)\n",
    "\n",
    "plot_dendrogram(model, truncate_mode=\"level\", p=4)\n",
    "\n",
    "dict_mar2011 =  Agglocls(new_dvt,3)\n",
    "\n",
    "final_dvt_mar2011 = dict_mar2011[0]\n",
    "pca_mar2011 = PCA(n_components = 3)\n",
    "pca_mar2011.fit(X = final_dvt_mar2011)\n",
    "final_dvt_mar2011 = pca_mar2011.transform(final_dvt_mar2011)\n",
    "final_dvt_mar2011 = pd.DataFrame(data = final_dvt_mar2011,columns = ['X0','X1','X2'])\n",
    "AggloDendo(final_dvt_mar2011)\n",
    "\n",
    "dict_mar2011_final =  AggloPca(final_dvt_mar2011,2,dvt_mar2011,'X0','X2')\n",
    "\n",
    "mar2011_agg = descrip_dict(og_mar2011,final_dvt_mar2011)\n",
    "\n",
    "mar2011_agg = processlis(mar2011_agg)\n",
    "mar2011_agg\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {
    "id": "K_-JuFifv3s7"
   },
   "outputs": [],
   "source": [
    "Cluster_dict['mar2011'] = (len(mar2011),len(mar2011_agg))\n",
    "dicti_2011mar = {}\n",
    "klis = []\n",
    "for i in range(Cluster_dict['mar2011'][0]):\n",
    "  temp = apriori_rules(mar2011[i],0.075)\n",
    "  klis.append(temp)\n",
    "alis = []\n",
    "for i in range(Cluster_dict['mar2011'][1]):\n",
    "  temp = apriori_rules(mar2011_agg[i],0.075)\n",
    "  alis.append(temp)\n",
    "#apriori_rules(1_agg[0],0.075)\n",
    "dicti_2011mar['K-means'] = klis\n",
    "dicti_2011mar['Agglo'] = alis\n",
    "\n",
    "Rules_dict['mar2011'] = dicti_2011mar"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {
    "id": "HcyydKJJ0kKO"
   },
   "source": [
    "## For Apr 2011"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {
    "colab": {
     "base_uri": "https://localhost:8080/"
    },
    "collapsed": true,
    "id": "R1xBLkJW0jwg",
    "outputId": "c1644e17-0669-46ac-814f-9bf2ef77fe9d"
   },
   "outputs": [
    {
     "data": {
      "text/html": [
       "\n",
       "  <div id=\"df-814870e1-02a5-47bd-90a2-ca7479c25b54\">\n",
       "    <div class=\"colab-df-container\">\n",
       "      <div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>InvoiceNo</th>\n",
       "      <th>StockCode</th>\n",
       "      <th>Description</th>\n",
       "      <th>Quantity</th>\n",
       "      <th>UnitPrice</th>\n",
       "      <th>CustomerID</th>\n",
       "      <th>Country</th>\n",
       "      <th>time_intervals</th>\n",
       "      <th>Total Price</th>\n",
       "      <th>Money_bins</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>142083</th>\n",
       "      <td>548550</td>\n",
       "      <td>22662</td>\n",
       "      <td>LUNCH BAG DOLLY GIRL DESIGN</td>\n",
       "      <td>10</td>\n",
       "      <td>1.65</td>\n",
       "      <td>4245</td>\n",
       "      <td>United Kingdom</td>\n",
       "      <td>04:00-07:59</td>\n",
       "      <td>16.50</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>142084</th>\n",
       "      <td>548550</td>\n",
       "      <td>22296</td>\n",
       "      <td>HEART IVORY TRELLIS LARGE</td>\n",
       "      <td>12</td>\n",
       "      <td>1.65</td>\n",
       "      <td>4245</td>\n",
       "      <td>United Kingdom</td>\n",
       "      <td>04:00-07:59</td>\n",
       "      <td>19.80</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>142085</th>\n",
       "      <td>548550</td>\n",
       "      <td>21790</td>\n",
       "      <td>VINTAGE SNAP CARDS</td>\n",
       "      <td>12</td>\n",
       "      <td>0.85</td>\n",
       "      <td>4245</td>\n",
       "      <td>United Kingdom</td>\n",
       "      <td>04:00-07:59</td>\n",
       "      <td>10.20</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>142086</th>\n",
       "      <td>548550</td>\n",
       "      <td>22622</td>\n",
       "      <td>BOX OF VINTAGE ALPHABET BLOCKS</td>\n",
       "      <td>2</td>\n",
       "      <td>9.95</td>\n",
       "      <td>4245</td>\n",
       "      <td>United Kingdom</td>\n",
       "      <td>04:00-07:59</td>\n",
       "      <td>19.90</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>142087</th>\n",
       "      <td>548550</td>\n",
       "      <td>22393</td>\n",
       "      <td>PAPERWEIGHT VINTAGE COLLAGE</td>\n",
       "      <td>6</td>\n",
       "      <td>2.55</td>\n",
       "      <td>4245</td>\n",
       "      <td>United Kingdom</td>\n",
       "      <td>04:00-07:59</td>\n",
       "      <td>15.30</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>...</th>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>171979</th>\n",
       "      <td>551507</td>\n",
       "      <td>22557</td>\n",
       "      <td>PLASTERS IN TIN VINTAGE PAISLEY</td>\n",
       "      <td>12</td>\n",
       "      <td>1.65</td>\n",
       "      <td>4328</td>\n",
       "      <td>United Kingdom</td>\n",
       "      <td>16:00-19:59</td>\n",
       "      <td>19.80</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>171980</th>\n",
       "      <td>551507</td>\n",
       "      <td>22554</td>\n",
       "      <td>PLASTERS IN TIN WOODLAND ANIMALS</td>\n",
       "      <td>12</td>\n",
       "      <td>1.65</td>\n",
       "      <td>4328</td>\n",
       "      <td>United Kingdom</td>\n",
       "      <td>16:00-19:59</td>\n",
       "      <td>19.80</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>171996</th>\n",
       "      <td>551514</td>\n",
       "      <td>20816</td>\n",
       "      <td>GOLD FLOWER CUSHION COVER</td>\n",
       "      <td>6</td>\n",
       "      <td>1.95</td>\n",
       "      <td>4037</td>\n",
       "      <td>United Kingdom</td>\n",
       "      <td>16:00-19:59</td>\n",
       "      <td>11.70</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>171997</th>\n",
       "      <td>551514</td>\n",
       "      <td>20622</td>\n",
       "      <td>VIPPASSPORT COVER</td>\n",
       "      <td>3</td>\n",
       "      <td>2.10</td>\n",
       "      <td>4037</td>\n",
       "      <td>United Kingdom</td>\n",
       "      <td>16:00-19:59</td>\n",
       "      <td>6.30</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>171998</th>\n",
       "      <td>551514</td>\n",
       "      <td>21625</td>\n",
       "      <td>VINTAGE UNION JACK APRON</td>\n",
       "      <td>11</td>\n",
       "      <td>6.95</td>\n",
       "      <td>4037</td>\n",
       "      <td>United Kingdom</td>\n",
       "      <td>16:00-19:59</td>\n",
       "      <td>76.45</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "<p>29171 rows × 10 columns</p>\n",
       "</div>\n",
       "      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-814870e1-02a5-47bd-90a2-ca7479c25b54')\"\n",
       "              title=\"Convert this dataframe to an interactive table.\"\n",
       "              style=\"display:none;\">\n",
       "        \n",
       "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
       "       width=\"24px\">\n",
       "    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n",
       "    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n",
       "  </svg>\n",
       "      </button>\n",
       "      \n",
       "  <style>\n",
       "    .colab-df-container {\n",
       "      display:flex;\n",
       "      flex-wrap:wrap;\n",
       "      gap: 12px;\n",
       "    }\n",
       "\n",
       "    .colab-df-convert {\n",
       "      background-color: #E8F0FE;\n",
       "      border: none;\n",
       "      border-radius: 50%;\n",
       "      cursor: pointer;\n",
       "      display: none;\n",
       "      fill: #1967D2;\n",
       "      height: 32px;\n",
       "      padding: 0 0 0 0;\n",
       "      width: 32px;\n",
       "    }\n",
       "\n",
       "    .colab-df-convert:hover {\n",
       "      background-color: #E2EBFA;\n",
       "      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
       "      fill: #174EA6;\n",
       "    }\n",
       "\n",
       "    [theme=dark] .colab-df-convert {\n",
       "      background-color: #3B4455;\n",
       "      fill: #D2E3FC;\n",
       "    }\n",
       "\n",
       "    [theme=dark] .colab-df-convert:hover {\n",
       "      background-color: #434B5C;\n",
       "      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
       "      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
       "      fill: #FFFFFF;\n",
       "    }\n",
       "  </style>\n",
       "\n",
       "      <script>\n",
       "        const buttonEl =\n",
       "          document.querySelector('#df-814870e1-02a5-47bd-90a2-ca7479c25b54 button.colab-df-convert');\n",
       "        buttonEl.style.display =\n",
       "          google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
       "\n",
       "        async function convertToInteractive(key) {\n",
       "          const element = document.querySelector('#df-814870e1-02a5-47bd-90a2-ca7479c25b54');\n",
       "          const dataTable =\n",
       "            await google.colab.kernel.invokeFunction('convertToInteractive',\n",
       "                                                     [key], {});\n",
       "          if (!dataTable) return;\n",
       "\n",
       "          const docLinkHtml = 'Like what you see? Visit the ' +\n",
       "            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n",
       "            + ' to learn more about interactive tables.';\n",
       "          element.innerHTML = '';\n",
       "          dataTable['output_type'] = 'display_data';\n",
       "          await google.colab.output.renderOutput(dataTable, element);\n",
       "          const docLink = document.createElement('div');\n",
       "          docLink.innerHTML = docLinkHtml;\n",
       "          element.appendChild(docLink);\n",
       "        }\n",
       "      </script>\n",
       "    </div>\n",
       "  </div>\n",
       "  "
      ],
      "text/plain": [
       "       InvoiceNo StockCode                       Description  Quantity  \\\n",
       "142083    548550     22662       LUNCH BAG DOLLY GIRL DESIGN        10   \n",
       "142084    548550     22296         HEART IVORY TRELLIS LARGE        12   \n",
       "142085    548550     21790                VINTAGE SNAP CARDS        12   \n",
       "142086    548550     22622    BOX OF VINTAGE ALPHABET BLOCKS         2   \n",
       "142087    548550     22393       PAPERWEIGHT VINTAGE COLLAGE         6   \n",
       "...          ...       ...                               ...       ...   \n",
       "171979    551507     22557  PLASTERS IN TIN VINTAGE PAISLEY         12   \n",
       "171980    551507     22554  PLASTERS IN TIN WOODLAND ANIMALS        12   \n",
       "171996    551514     20816        GOLD FLOWER CUSHION COVER          6   \n",
       "171997    551514     20622                VIPPASSPORT COVER          3   \n",
       "171998    551514     21625          VINTAGE UNION JACK APRON        11   \n",
       "\n",
       "        UnitPrice  CustomerID         Country time_intervals  Total Price  \\\n",
       "142083       1.65        4245  United Kingdom    04:00-07:59        16.50   \n",
       "142084       1.65        4245  United Kingdom    04:00-07:59        19.80   \n",
       "142085       0.85        4245  United Kingdom    04:00-07:59        10.20   \n",
       "142086       9.95        4245  United Kingdom    04:00-07:59        19.90   \n",
       "142087       2.55        4245  United Kingdom    04:00-07:59        15.30   \n",
       "...           ...         ...             ...            ...          ...   \n",
       "171979       1.65        4328  United Kingdom    16:00-19:59        19.80   \n",
       "171980       1.65        4328  United Kingdom    16:00-19:59        19.80   \n",
       "171996       1.95        4037  United Kingdom    16:00-19:59        11.70   \n",
       "171997       2.10        4037  United Kingdom    16:00-19:59         6.30   \n",
       "171998       6.95        4037  United Kingdom    16:00-19:59        76.45   \n",
       "\n",
       "        Money_bins  \n",
       "142083           0  \n",
       "142084           0  \n",
       "142085           0  \n",
       "142086           0  \n",
       "142087           0  \n",
       "...            ...  \n",
       "171979           0  \n",
       "171980           0  \n",
       "171996           0  \n",
       "171997           0  \n",
       "171998           0  \n",
       "\n",
       "[29171 rows x 10 columns]"
      ]
     },
     "execution_count": 93,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "og_apr2011 = df_list_month_intervals[4]\n",
    "og_apr2011\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {
    "colab": {
     "base_uri": "https://localhost:8080/"
    },
    "collapsed": true,
    "id": "FtYH9yM_0tZe",
    "outputId": "b5066fa1-bc39-413b-96d8-f9ca2cafdaa1"
   },
   "outputs": [
    {
     "data": {
      "text/html": [
       "\n",
       "  <div id=\"df-b26e7780-e444-4c6a-bd8b-23577ad3d420\">\n",
       "    <div class=\"colab-df-container\">\n",
       "      <div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>No. of visits</th>\n",
       "      <th>Mean_purch</th>\n",
       "      <th>Sum_purch</th>\n",
       "      <th>Item_count</th>\n",
       "      <th>Total_quantity</th>\n",
       "      <th>Avg_quant</th>\n",
       "      <th>CustomerID</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>1</td>\n",
       "      <td>26.510417</td>\n",
       "      <td>636.25</td>\n",
       "      <td>24</td>\n",
       "      <td>483</td>\n",
       "      <td>20.125000</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>1</td>\n",
       "      <td>73.400000</td>\n",
       "      <td>367.00</td>\n",
       "      <td>5</td>\n",
       "      <td>269</td>\n",
       "      <td>53.800000</td>\n",
       "      <td>2</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>1</td>\n",
       "      <td>18.610345</td>\n",
       "      <td>1079.40</td>\n",
       "      <td>58</td>\n",
       "      <td>530</td>\n",
       "      <td>9.137931</td>\n",
       "      <td>7</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>1</td>\n",
       "      <td>22.926667</td>\n",
       "      <td>481.46</td>\n",
       "      <td>21</td>\n",
       "      <td>370</td>\n",
       "      <td>17.619048</td>\n",
       "      <td>9</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>1</td>\n",
       "      <td>17.077241</td>\n",
       "      <td>495.24</td>\n",
       "      <td>29</td>\n",
       "      <td>275</td>\n",
       "      <td>9.482759</td>\n",
       "      <td>15</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>...</th>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>852</th>\n",
       "      <td>1</td>\n",
       "      <td>23.767368</td>\n",
       "      <td>451.58</td>\n",
       "      <td>19</td>\n",
       "      <td>314</td>\n",
       "      <td>16.526316</td>\n",
       "      <td>4320</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>853</th>\n",
       "      <td>1</td>\n",
       "      <td>20.506667</td>\n",
       "      <td>307.60</td>\n",
       "      <td>15</td>\n",
       "      <td>328</td>\n",
       "      <td>21.866667</td>\n",
       "      <td>4323</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>854</th>\n",
       "      <td>2</td>\n",
       "      <td>17.828000</td>\n",
       "      <td>980.54</td>\n",
       "      <td>47</td>\n",
       "      <td>788</td>\n",
       "      <td>14.327273</td>\n",
       "      <td>4328</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>855</th>\n",
       "      <td>1</td>\n",
       "      <td>2.101429</td>\n",
       "      <td>117.68</td>\n",
       "      <td>55</td>\n",
       "      <td>87</td>\n",
       "      <td>1.553571</td>\n",
       "      <td>4337</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>856</th>\n",
       "      <td>169</td>\n",
       "      <td>10.511454</td>\n",
       "      <td>68608.26</td>\n",
       "      <td>1634</td>\n",
       "      <td>19951</td>\n",
       "      <td>3.056688</td>\n",
       "      <td>4339</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "<p>857 rows × 7 columns</p>\n",
       "</div>\n",
       "      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-b26e7780-e444-4c6a-bd8b-23577ad3d420')\"\n",
       "              title=\"Convert this dataframe to an interactive table.\"\n",
       "              style=\"display:none;\">\n",
       "        \n",
       "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
       "       width=\"24px\">\n",
       "    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n",
       "    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n",
       "  </svg>\n",
       "      </button>\n",
       "      \n",
       "  <style>\n",
       "    .colab-df-container {\n",
       "      display:flex;\n",
       "      flex-wrap:wrap;\n",
       "      gap: 12px;\n",
       "    }\n",
       "\n",
       "    .colab-df-convert {\n",
       "      background-color: #E8F0FE;\n",
       "      border: none;\n",
       "      border-radius: 50%;\n",
       "      cursor: pointer;\n",
       "      display: none;\n",
       "      fill: #1967D2;\n",
       "      height: 32px;\n",
       "      padding: 0 0 0 0;\n",
       "      width: 32px;\n",
       "    }\n",
       "\n",
       "    .colab-df-convert:hover {\n",
       "      background-color: #E2EBFA;\n",
       "      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
       "      fill: #174EA6;\n",
       "    }\n",
       "\n",
       "    [theme=dark] .colab-df-convert {\n",
       "      background-color: #3B4455;\n",
       "      fill: #D2E3FC;\n",
       "    }\n",
       "\n",
       "    [theme=dark] .colab-df-convert:hover {\n",
       "      background-color: #434B5C;\n",
       "      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
       "      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
       "      fill: #FFFFFF;\n",
       "    }\n",
       "  </style>\n",
       "\n",
       "      <script>\n",
       "        const buttonEl =\n",
       "          document.querySelector('#df-b26e7780-e444-4c6a-bd8b-23577ad3d420 button.colab-df-convert');\n",
       "        buttonEl.style.display =\n",
       "          google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
       "\n",
       "        async function convertToInteractive(key) {\n",
       "          const element = document.querySelector('#df-b26e7780-e444-4c6a-bd8b-23577ad3d420');\n",
       "          const dataTable =\n",
       "            await google.colab.kernel.invokeFunction('convertToInteractive',\n",
       "                                                     [key], {});\n",
       "          if (!dataTable) return;\n",
       "\n",
       "          const docLinkHtml = 'Like what you see? Visit the ' +\n",
       "            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n",
       "            + ' to learn more about interactive tables.';\n",
       "          element.innerHTML = '';\n",
       "          dataTable['output_type'] = 'display_data';\n",
       "          await google.colab.output.renderOutput(dataTable, element);\n",
       "          const docLink = document.createElement('div');\n",
       "          docLink.innerHTML = docLinkHtml;\n",
       "          element.appendChild(docLink);\n",
       "        }\n",
       "      </script>\n",
       "    </div>\n",
       "  </div>\n",
       "  "
      ],
      "text/plain": [
       "     No. of visits  Mean_purch  Sum_purch  Item_count  Total_quantity  \\\n",
       "0                1   26.510417     636.25          24             483   \n",
       "1                1   73.400000     367.00           5             269   \n",
       "2                1   18.610345    1079.40          58             530   \n",
       "3                1   22.926667     481.46          21             370   \n",
       "4                1   17.077241     495.24          29             275   \n",
       "..             ...         ...        ...         ...             ...   \n",
       "852              1   23.767368     451.58          19             314   \n",
       "853              1   20.506667     307.60          15             328   \n",
       "854              2   17.828000     980.54          47             788   \n",
       "855              1    2.101429     117.68          55              87   \n",
       "856            169   10.511454   68608.26        1634           19951   \n",
       "\n",
       "     Avg_quant  CustomerID  \n",
       "0    20.125000           1  \n",
       "1    53.800000           2  \n",
       "2     9.137931           7  \n",
       "3    17.619048           9  \n",
       "4     9.482759          15  \n",
       "..         ...         ...  \n",
       "852  16.526316        4320  \n",
       "853  21.866667        4323  \n",
       "854  14.327273        4328  \n",
       "855   1.553571        4337  \n",
       "856   3.056688        4339  \n",
       "\n",
       "[857 rows x 7 columns]"
      ]
     },
     "execution_count": 94,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "dvt_apr2011= person_df(og_apr2011) #Our function gives such a dataframe\n",
    "#By which we can form clusters using KMeans\n",
    "dvt_apr2011"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {
    "colab": {
     "base_uri": "https://localhost:8080/"
    },
    "collapsed": true,
    "id": "DL5pQy8u05wz",
    "outputId": "aa7351dd-3063-40c3-8880-2ff7d750aa4c"
   },
   "outputs": [
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "/usr/local/lib/python3.9/dist-packages/sklearn/cluster/_kmeans.py:870: FutureWarning: The default value of `n_init` will change from 10 to 'auto' in 1.4. Set the value of `n_init` explicitly to suppress the warning\n",
      "  warnings.warn(\n"
     ]
    },
    {
     "data": {
      "text/html": [
       "\n",
       "  <div id=\"df-0f23159d-ae63-41b8-a1cd-3c7460263fc6\">\n",
       "    <div class=\"colab-df-container\">\n",
       "      <div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>No. of visits</th>\n",
       "      <th>Mean_purch</th>\n",
       "      <th>Sum_purch</th>\n",
       "      <th>Item_count</th>\n",
       "      <th>Total_quantity</th>\n",
       "      <th>Avg_quant</th>\n",
       "      <th>CustomerID</th>\n",
       "      <th>cluster_labels</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>1</td>\n",
       "      <td>26.510417</td>\n",
       "      <td>636.25</td>\n",
       "      <td>24</td>\n",
       "      <td>483</td>\n",
       "      <td>20.125000</td>\n",
       "      <td>1</td>\n",
       "      <td>2</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>1</td>\n",
       "      <td>73.400000</td>\n",
       "      <td>367.00</td>\n",
       "      <td>5</td>\n",
       "      <td>269</td>\n",
       "      <td>53.800000</td>\n",
       "      <td>2</td>\n",
       "      <td>2</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>1</td>\n",
       "      <td>18.610345</td>\n",
       "      <td>1079.40</td>\n",
       "      <td>58</td>\n",
       "      <td>530</td>\n",
       "      <td>9.137931</td>\n",
       "      <td>7</td>\n",
       "      <td>2</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>1</td>\n",
       "      <td>22.926667</td>\n",
       "      <td>481.46</td>\n",
       "      <td>21</td>\n",
       "      <td>370</td>\n",
       "      <td>17.619048</td>\n",
       "      <td>9</td>\n",
       "      <td>2</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>1</td>\n",
       "      <td>17.077241</td>\n",
       "      <td>495.24</td>\n",
       "      <td>29</td>\n",
       "      <td>275</td>\n",
       "      <td>9.482759</td>\n",
       "      <td>15</td>\n",
       "      <td>2</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>...</th>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>852</th>\n",
       "      <td>1</td>\n",
       "      <td>23.767368</td>\n",
       "      <td>451.58</td>\n",
       "      <td>19</td>\n",
       "      <td>314</td>\n",
       "      <td>16.526316</td>\n",
       "      <td>4320</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>853</th>\n",
       "      <td>1</td>\n",
       "      <td>20.506667</td>\n",
       "      <td>307.60</td>\n",
       "      <td>15</td>\n",
       "      <td>328</td>\n",
       "      <td>21.866667</td>\n",
       "      <td>4323</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>854</th>\n",
       "      <td>2</td>\n",
       "      <td>17.828000</td>\n",
       "      <td>980.54</td>\n",
       "      <td>47</td>\n",
       "      <td>788</td>\n",
       "      <td>14.327273</td>\n",
       "      <td>4328</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>855</th>\n",
       "      <td>1</td>\n",
       "      <td>2.101429</td>\n",
       "      <td>117.68</td>\n",
       "      <td>55</td>\n",
       "      <td>87</td>\n",
       "      <td>1.553571</td>\n",
       "      <td>4337</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>856</th>\n",
       "      <td>169</td>\n",
       "      <td>10.511454</td>\n",
       "      <td>68608.26</td>\n",
       "      <td>1634</td>\n",
       "      <td>19951</td>\n",
       "      <td>3.056688</td>\n",
       "      <td>4339</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "<p>857 rows × 8 columns</p>\n",
       "</div>\n",
       "      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-0f23159d-ae63-41b8-a1cd-3c7460263fc6')\"\n",
       "              title=\"Convert this dataframe to an interactive table.\"\n",
       "              style=\"display:none;\">\n",
       "        \n",
       "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
       "       width=\"24px\">\n",
       "    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n",
       "    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n",
       "  </svg>\n",
       "      </button>\n",
       "      \n",
       "  <style>\n",
       "    .colab-df-container {\n",
       "      display:flex;\n",
       "      flex-wrap:wrap;\n",
       "      gap: 12px;\n",
       "    }\n",
       "\n",
       "    .colab-df-convert {\n",
       "      background-color: #E8F0FE;\n",
       "      border: none;\n",
       "      border-radius: 50%;\n",
       "      cursor: pointer;\n",
       "      display: none;\n",
       "      fill: #1967D2;\n",
       "      height: 32px;\n",
       "      padding: 0 0 0 0;\n",
       "      width: 32px;\n",
       "    }\n",
       "\n",
       "    .colab-df-convert:hover {\n",
       "      background-color: #E2EBFA;\n",
       "      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
       "      fill: #174EA6;\n",
       "    }\n",
       "\n",
       "    [theme=dark] .colab-df-convert {\n",
       "      background-color: #3B4455;\n",
       "      fill: #D2E3FC;\n",
       "    }\n",
       "\n",
       "    [theme=dark] .colab-df-convert:hover {\n",
       "      background-color: #434B5C;\n",
       "      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
       "      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
       "      fill: #FFFFFF;\n",
       "    }\n",
       "  </style>\n",
       "\n",
       "      <script>\n",
       "        const buttonEl =\n",
       "          document.querySelector('#df-0f23159d-ae63-41b8-a1cd-3c7460263fc6 button.colab-df-convert');\n",
       "        buttonEl.style.display =\n",
       "          google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
       "\n",
       "        async function convertToInteractive(key) {\n",
       "          const element = document.querySelector('#df-0f23159d-ae63-41b8-a1cd-3c7460263fc6');\n",
       "          const dataTable =\n",
       "            await google.colab.kernel.invokeFunction('convertToInteractive',\n",
       "                                                     [key], {});\n",
       "          if (!dataTable) return;\n",
       "\n",
       "          const docLinkHtml = 'Like what you see? Visit the ' +\n",
       "            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n",
       "            + ' to learn more about interactive tables.';\n",
       "          element.innerHTML = '';\n",
       "          dataTable['output_type'] = 'display_data';\n",
       "          await google.colab.output.renderOutput(dataTable, element);\n",
       "          const docLink = document.createElement('div');\n",
       "          docLink.innerHTML = docLinkHtml;\n",
       "          element.appendChild(docLink);\n",
       "        }\n",
       "      </script>\n",
       "    </div>\n",
       "  </div>\n",
       "  "
      ],
      "text/plain": [
       "     No. of visits  Mean_purch  Sum_purch  Item_count  Total_quantity  \\\n",
       "0                1   26.510417     636.25          24             483   \n",
       "1                1   73.400000     367.00           5             269   \n",
       "2                1   18.610345    1079.40          58             530   \n",
       "3                1   22.926667     481.46          21             370   \n",
       "4                1   17.077241     495.24          29             275   \n",
       "..             ...         ...        ...         ...             ...   \n",
       "852              1   23.767368     451.58          19             314   \n",
       "853              1   20.506667     307.60          15             328   \n",
       "854              2   17.828000     980.54          47             788   \n",
       "855              1    2.101429     117.68          55              87   \n",
       "856            169   10.511454   68608.26        1634           19951   \n",
       "\n",
       "     Avg_quant  CustomerID  cluster_labels  \n",
       "0    20.125000           1               2  \n",
       "1    53.800000           2               2  \n",
       "2     9.137931           7               2  \n",
       "3    17.619048           9               2  \n",
       "4     9.482759          15               2  \n",
       "..         ...         ...             ...  \n",
       "852  16.526316        4320               0  \n",
       "853  21.866667        4323               0  \n",
       "854  14.327273        4328               0  \n",
       "855   1.553571        4337               0  \n",
       "856   3.056688        4339               1  \n",
       "\n",
       "[857 rows x 8 columns]"
      ]
     },
     "execution_count": 95,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "df_apr2011 = df_cluster_labels(dvt_apr2011,3)\n",
    "df_apr2011\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {
    "colab": {
     "base_uri": "https://localhost:8080/"
    },
    "id": "Us9dugDGnWvv",
    "outputId": "00643340-5ecb-4e9e-854a-78edc2341e98"
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "The Silhouette Score is :- 0.5057646671259068\n"
     ]
    }
   ],
   "source": [
    "silhte_score_apr2011 = silhouette_score(dvt_apr2011, df_apr2011['cluster_labels'])\n",
    "print(\"The Silhouette Score is :- \"+str(silhte_score_apr2011))\n",
    "#Which is good silhouette score without outliers"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {
    "colab": {
     "base_uri": "https://localhost:8080/"
    },
    "collapsed": true,
    "id": "kJiO7d-g0-4M",
    "outputId": "d4d52eec-21a7-41c6-a96b-d0d7eb20e81a"
   },
   "outputs": [
    {
     "data": {
      "text/plain": [
       "2    441\n",
       "0    415\n",
       "1      1\n",
       "Name: cluster_labels, dtype: int64"
      ]
     },
     "execution_count": 97,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "df_apr2011['cluster_labels'].value_counts()\n",
    "#Except for cluster no.1 , the clustering is good"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {
    "colab": {
     "base_uri": "https://localhost:8080/"
    },
    "collapsed": true,
    "id": "6-mwpfwV1DNI",
    "outputId": "b7662909-e66e-4576-85f5-62df1b259faa"
   },
   "outputs": [
    {
     "data": {
      "image/png": "",
      "text/plain": [
       "<Figure size 640x480 with 1 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "plt.scatter(df_apr2011['Mean_purch'], df_apr2011['Sum_purch'], c=df_apr2011['cluster_labels'], cmap='rainbow')\n",
    "plt.title(\"For Apr 2011\")\n",
    "plt.xlabel('Mean_purch')\n",
    "plt.ylabel('avg_quantity')\n",
    "plt.show()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {
    "id": "4KIeR7GW1ORL"
   },
   "outputs": [],
   "source": [
    "apr2011 = descrip_dict(og_apr2011,df_apr2011)\n",
    "apr2011 = processlis(apr2011)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {
    "colab": {
     "base_uri": "https://localhost:8080/"
    },
    "collapsed": true,
    "id": "8g3h0uIH1XD1",
    "outputId": "3c27984d-a81d-4b6c-a356-28d465c984b4"
   },
   "outputs": [
    {
     "data": {
      "text/plain": [
       "[     CustomerID                                        Description\n",
       " 0             1  [AIRLINE BAG VINTAGE JET SET WHITE, AIRLINE BA...\n",
       " 1             2  [DOUGHNUT LIP GLOSS , ICE CREAM PEN LIP GLOSS ...\n",
       " 2             7  [JUMBO BAG ALPHABET, CHARLOTTE BAG APPLES DESI...\n",
       " 3             9  [60 TEATIME FAIRY CAKE CASES, PACK OF 72 RETRO...\n",
       " 4            15  [UNION JACK FLAG LUGGAGE TAG, RED RETROSPOT MI...\n",
       " ..          ...                                                ...\n",
       " 436        2212  [WORLD WAR 2 GLIDERS ASSTD DESIGNS, CHILDRENS ...\n",
       " 437        2219  [LUNCH BAG SUKI DESIGN , PLASTERS IN TIN VINTA...\n",
       " 438        2254  [GARLAND WOODEN HAPPY EASTER, MOROCCAN TEA GLA...\n",
       " 439        2503  [WHITE HANGING HEART T-LIGHT HOLDER, TEA TIME ...\n",
       " 440        2922  [RED  HARMONICA IN BOX , 4 TRADITIONAL SPINNIN...\n",
       " \n",
       " [441 rows x 2 columns],\n",
       "      CustomerID                                        Description\n",
       " 0          2211  [SET OF 36 DOILIES SPACEBOY DESIGN , SET OF 72...\n",
       " 1          2249  [REGENCY CAKESTAND 3 TIER, ROSES REGENCY TEACU...\n",
       " 2          2252  [COFFEE MUG CAT + BIRD DESIGN, RECYCLED ACAPUL...\n",
       " 3          2269  [BRIGHT BLUES RIBBONS , 6 RIBBONS RUSTIC CHARM...\n",
       " 4          2273  [EDWARDIAN PARASOL NATURAL, EDWARDIAN PARASOL ...\n",
       " ..          ...                                                ...\n",
       " 410        4311    [WHITE METAL LANTERN, PAPER BUNTING WHITE LACE]\n",
       " 411        4320  [VINTAGE UNION JACK APRON, RETROSPOT LAMP, PAP...\n",
       " 412        4323  [VINTAGE SNAP CARDS, TRADITIONAL KNITTING NANC...\n",
       " 413        4328  [RETROSPOT RED WASHING UP GLOVES, RED HEART SH...\n",
       " 414        4337  [STRAWBERRY   PICNIC BAG, SMALL POPCORN HOLDER...\n",
       " \n",
       " [415 rows x 2 columns]]"
      ]
     },
     "execution_count": 100,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "apr2011"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {
    "colab": {
     "base_uri": "https://localhost:8080/"
    },
    "id": "8bbaCI3vLyAn",
    "outputId": "02058f2c-2816-48b6-a3be-aed722baf7a8"
   },
   "outputs": [
    {
     "data": {
      "image/png": "",
      "text/plain": [
       "<Figure size 640x480 with 1 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "data": {
      "image/png": "",
      "text/plain": [
       "<Figure size 500x500 with 1 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "(853, 4)\n",
      "(1, 4)\n",
      "(3, 4)\n"
     ]
    },
    {
     "data": {
      "image/png": "",
      "text/plain": [
       "<Figure size 640x480 with 1 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "data": {
      "image/png": "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",
      "text/plain": [
       "<Figure size 500x500 with 1 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "(362, 5)\n",
      "(260, 5)\n",
      "(231, 5)\n"
     ]
    },
    {
     "data": {
      "text/plain": [
       "[     CustomerID                                        Description\n",
       " 0             1  [AIRLINE BAG VINTAGE JET SET WHITE, AIRLINE BA...\n",
       " 1             2  [DOUGHNUT LIP GLOSS , ICE CREAM PEN LIP GLOSS ...\n",
       " 2             7  [JUMBO BAG ALPHABET, CHARLOTTE BAG APPLES DESI...\n",
       " 3             9  [60 TEATIME FAIRY CAKE CASES, PACK OF 72 RETRO...\n",
       " 4            15  [UNION JACK FLAG LUGGAGE TAG, RED RETROSPOT MI...\n",
       " ..          ...                                                ...\n",
       " 226        1360  [LARGE CIRCULAR MIRROR MOBILE, METAL TUBE CHIM...\n",
       " 227        1408  [CERAMIC CAKE BOWL + HANGING CAKES, MINI CAKE ...\n",
       " 228        1425  [PACK OF 12 COLOURED PENCILS, PACK OF 12 TRADI...\n",
       " 229        1684  [PARTY BUNTING, REGENCY CAKESTAND 3 TIER, NATU...\n",
       " 230        1964  [NEW BAROQUE B'FLY NECKLACE PINK, PINK HEART O...\n",
       " \n",
       " [231 rows x 2 columns],\n",
       "      CustomerID                                        Description\n",
       " 0           324  [Manual, Manual, Manual, Manual, Manual, DOORM...\n",
       " 1           331  [WORLD WAR 2 GLIDERS ASSTD DESIGNS, MINI PAINT...\n",
       " 2           519  [72 SWEETHEART FAIRY CAKE CASES, 60 TEATIME FA...\n",
       " 3           997  [APRON MODERN VINTAGE COTTON, SET/6 FRUIT SALA...\n",
       " 4          1104                      [LARGE CHINESE STYLE SCISSOR]\n",
       " ..          ...                                                ...\n",
       " 357        3935  [HEN HOUSE DECORATION, BUNNY EGG GARLAND, BLAC...\n",
       " 358        3993  [SET OF 6 SOLDIER SKITTLES, HAPPY EASTER HANGI...\n",
       " 359        4015  [LETTER SHAPE PENCIL SHARPENER, JARDIN ETCHED ...\n",
       " 360        4072  [I LOVE LONDON BABY GIFT SET, FELTCRAFT BOY JE...\n",
       " 361        4172  [PAPER CHAIN KIT EMPIRE, PAPER BUNTING RETROSPOT]\n",
       " \n",
       " [362 rows x 2 columns],\n",
       "      CustomerID                                        Description\n",
       " 0          2904  [HEN PARTY CORDON BARRIER TAPE, EDWARDIAN PARA...\n",
       " 1          2922  [RED  HARMONICA IN BOX , 4 TRADITIONAL SPINNIN...\n",
       " 2          2954  [LARGE IVORY HEART WALL ORGANISER, LAVENDER SC...\n",
       " 3          2970  [TRAVEL CARD WALLET TRANSPORT, TRAVEL CARD WAL...\n",
       " 4          2982  [DOORMAT AIRMAIL , DOORMAT ENGLISH ROSE , DOOR...\n",
       " ..          ...                                                ...\n",
       " 255        4299  [PLEASE ONE PERSON METAL SIGN, VINYL RECORD FR...\n",
       " 256        4300  [CREAM SWEETHEART MINI CHEST, WHITE HANGING HE...\n",
       " 257        4304  [IVORY ENCHANTED FOREST PLACEMAT, DOORMAT HOME...\n",
       " 258        4311    [WHITE METAL LANTERN, PAPER BUNTING WHITE LACE]\n",
       " 259        4320  [VINTAGE UNION JACK APRON, RETROSPOT LAMP, PAP...\n",
       " \n",
       " [260 rows x 2 columns]]"
      ]
     },
     "execution_count": 101,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "pca = PCA(n_components = 3)\n",
    "pca.fit(X = dvt_apr2011)\n",
    "new_dvt = pca.transform(dvt_apr2011)\n",
    "\n",
    "new_dvt = pd.DataFrame(data = new_dvt,columns = ['X0','X1','X2'])\n",
    "model = AgglomerativeClustering(distance_threshold=0, n_clusters=None, linkage='ward').fit(new_dvt)\n",
    "\n",
    "plot_dendrogram(model, truncate_mode=\"level\", p=4)\n",
    "\n",
    "dict_apr2011 =  Agglocls(new_dvt,3)\n",
    "\n",
    "final_dvt_apr2011 = dict_apr2011[0]\n",
    "pca_apr2011 = PCA(n_components = 3)\n",
    "pca_apr2011.fit(X = final_dvt_apr2011)\n",
    "final_dvt_apr2011 = pca_apr2011.transform(final_dvt_apr2011)\n",
    "final_dvt_apr2011 = pd.DataFrame(data = final_dvt_apr2011,columns = ['X0','X1','X2'])\n",
    "AggloDendo(final_dvt_apr2011)\n",
    "\n",
    "dict_apr2011_final =  AggloPca(final_dvt_apr2011,3,dvt_apr2011,'X0','X2')\n",
    "\n",
    "apr2011_agg = descrip_dict(og_apr2011,final_dvt_apr2011)\n",
    "apr2011_agg = processlis(apr2011_agg)\n",
    "apr2011_agg\n",
    "\n",
    "\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {
    "colab": {
     "base_uri": "https://localhost:8080/"
    },
    "id": "kerVh9Pw8xdh",
    "outputId": "95d2f431-53e7-40d5-c216-f98461c9fd4c"
   },
   "outputs": [
    {
     "data": {
      "text/plain": [
       "(2, 3)"
      ]
     },
     "execution_count": 102,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "apr2011 = processlis(apr2011)\n",
    "apr2011_agg = processlis(apr2011_agg)\n",
    "len(apr2011),len(apr2011_agg)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {
    "id": "nOnyuKTNwHwm"
   },
   "outputs": [],
   "source": [
    "Cluster_dict['apr2011'] = (len(apr2011),len(apr2011_agg))\n",
    "dicti_2011apr = {}\n",
    "klis = []\n",
    "for i in range(Cluster_dict['apr2011'][0]):\n",
    "  temp = apriori_rules(apr2011[i],0.075)\n",
    "  klis.append(temp)\n",
    "alis = []\n",
    "for i in range(Cluster_dict['apr2011'][1]):\n",
    "  temp = apriori_rules(apr2011_agg[i],0.075)\n",
    "  alis.append(temp)\n",
    "#apriori_rules(1_agg[0],0.075)\n",
    "dicti_2011apr['K-means'] = klis\n",
    "dicti_2011apr['Agglo'] = alis\n",
    "\n",
    "Rules_dict['apr2011'] = dicti_2011apr"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {
    "id": "bbGh2-Dz2g6A"
   },
   "source": [
    "## For May 2011"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {
    "colab": {
     "base_uri": "https://localhost:8080/"
    },
    "collapsed": true,
    "id": "COf2ZalY2guK",
    "outputId": "5d9373c4-9533-4f96-edf4-9c7ec71f6568"
   },
   "outputs": [
    {
     "data": {
      "text/html": [
       "\n",
       "  <div id=\"df-06d5b9b9-cee5-4d36-834f-6da16513177a\">\n",
       "    <div class=\"colab-df-container\">\n",
       "      <div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>InvoiceNo</th>\n",
       "      <th>StockCode</th>\n",
       "      <th>Description</th>\n",
       "      <th>Quantity</th>\n",
       "      <th>UnitPrice</th>\n",
       "      <th>CustomerID</th>\n",
       "      <th>Country</th>\n",
       "      <th>time_intervals</th>\n",
       "      <th>Total Price</th>\n",
       "      <th>Money_bins</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>171999</th>\n",
       "      <td>551515</td>\n",
       "      <td>21731</td>\n",
       "      <td>RED TOADSTOOL LED NIGHT LIGHT</td>\n",
       "      <td>12</td>\n",
       "      <td>1.65</td>\n",
       "      <td>2396</td>\n",
       "      <td>United Kingdom</td>\n",
       "      <td>08:00-11:59</td>\n",
       "      <td>19.80</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>172000</th>\n",
       "      <td>551515</td>\n",
       "      <td>20749</td>\n",
       "      <td>ASSORTED COLOUR MINI CASES</td>\n",
       "      <td>12</td>\n",
       "      <td>6.35</td>\n",
       "      <td>2396</td>\n",
       "      <td>United Kingdom</td>\n",
       "      <td>08:00-11:59</td>\n",
       "      <td>76.20</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>172001</th>\n",
       "      <td>551515</td>\n",
       "      <td>22729</td>\n",
       "      <td>ALARM CLOCK BAKELIKE ORANGE</td>\n",
       "      <td>8</td>\n",
       "      <td>3.75</td>\n",
       "      <td>2396</td>\n",
       "      <td>United Kingdom</td>\n",
       "      <td>08:00-11:59</td>\n",
       "      <td>30.00</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>172002</th>\n",
       "      <td>551515</td>\n",
       "      <td>22998</td>\n",
       "      <td>TRAVEL CARD WALLET KEEP CALM</td>\n",
       "      <td>24</td>\n",
       "      <td>0.42</td>\n",
       "      <td>2396</td>\n",
       "      <td>United Kingdom</td>\n",
       "      <td>08:00-11:59</td>\n",
       "      <td>10.08</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>172003</th>\n",
       "      <td>551515</td>\n",
       "      <td>22665</td>\n",
       "      <td>RECIPE BOX BLUE SKETCHBOOK DESIGN</td>\n",
       "      <td>24</td>\n",
       "      <td>2.55</td>\n",
       "      <td>2396</td>\n",
       "      <td>United Kingdom</td>\n",
       "      <td>08:00-11:59</td>\n",
       "      <td>61.20</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>...</th>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>209024</th>\n",
       "      <td>555150</td>\n",
       "      <td>22895</td>\n",
       "      <td>SET OF 2 TEA TOWELS APPLE AND PEARS</td>\n",
       "      <td>3</td>\n",
       "      <td>3.25</td>\n",
       "      <td>4339</td>\n",
       "      <td>United Kingdom</td>\n",
       "      <td>12:00-15:59</td>\n",
       "      <td>9.75</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>209025</th>\n",
       "      <td>555150</td>\n",
       "      <td>22983</td>\n",
       "      <td>CARD BILLBOARD FONT</td>\n",
       "      <td>3</td>\n",
       "      <td>0.42</td>\n",
       "      <td>4339</td>\n",
       "      <td>United Kingdom</td>\n",
       "      <td>12:00-15:59</td>\n",
       "      <td>1.26</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>209026</th>\n",
       "      <td>555150</td>\n",
       "      <td>23169</td>\n",
       "      <td>CLASSIC GLASS COOKIE JAR</td>\n",
       "      <td>3</td>\n",
       "      <td>4.15</td>\n",
       "      <td>4339</td>\n",
       "      <td>United Kingdom</td>\n",
       "      <td>12:00-15:59</td>\n",
       "      <td>12.45</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>209027</th>\n",
       "      <td>555150</td>\n",
       "      <td>23298</td>\n",
       "      <td>SPOTTY BUNTING</td>\n",
       "      <td>5</td>\n",
       "      <td>4.95</td>\n",
       "      <td>4339</td>\n",
       "      <td>United Kingdom</td>\n",
       "      <td>12:00-15:59</td>\n",
       "      <td>24.75</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>209028</th>\n",
       "      <td>555150</td>\n",
       "      <td>23118</td>\n",
       "      <td>PARISIENNE JEWELLERY DRAWER</td>\n",
       "      <td>2</td>\n",
       "      <td>7.50</td>\n",
       "      <td>4339</td>\n",
       "      <td>United Kingdom</td>\n",
       "      <td>12:00-15:59</td>\n",
       "      <td>15.00</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "<p>36292 rows × 10 columns</p>\n",
       "</div>\n",
       "      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-06d5b9b9-cee5-4d36-834f-6da16513177a')\"\n",
       "              title=\"Convert this dataframe to an interactive table.\"\n",
       "              style=\"display:none;\">\n",
       "        \n",
       "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
       "       width=\"24px\">\n",
       "    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n",
       "    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n",
       "  </svg>\n",
       "      </button>\n",
       "      \n",
       "  <style>\n",
       "    .colab-df-container {\n",
       "      display:flex;\n",
       "      flex-wrap:wrap;\n",
       "      gap: 12px;\n",
       "    }\n",
       "\n",
       "    .colab-df-convert {\n",
       "      background-color: #E8F0FE;\n",
       "      border: none;\n",
       "      border-radius: 50%;\n",
       "      cursor: pointer;\n",
       "      display: none;\n",
       "      fill: #1967D2;\n",
       "      height: 32px;\n",
       "      padding: 0 0 0 0;\n",
       "      width: 32px;\n",
       "    }\n",
       "\n",
       "    .colab-df-convert:hover {\n",
       "      background-color: #E2EBFA;\n",
       "      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
       "      fill: #174EA6;\n",
       "    }\n",
       "\n",
       "    [theme=dark] .colab-df-convert {\n",
       "      background-color: #3B4455;\n",
       "      fill: #D2E3FC;\n",
       "    }\n",
       "\n",
       "    [theme=dark] .colab-df-convert:hover {\n",
       "      background-color: #434B5C;\n",
       "      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
       "      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
       "      fill: #FFFFFF;\n",
       "    }\n",
       "  </style>\n",
       "\n",
       "      <script>\n",
       "        const buttonEl =\n",
       "          document.querySelector('#df-06d5b9b9-cee5-4d36-834f-6da16513177a button.colab-df-convert');\n",
       "        buttonEl.style.display =\n",
       "          google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
       "\n",
       "        async function convertToInteractive(key) {\n",
       "          const element = document.querySelector('#df-06d5b9b9-cee5-4d36-834f-6da16513177a');\n",
       "          const dataTable =\n",
       "            await google.colab.kernel.invokeFunction('convertToInteractive',\n",
       "                                                     [key], {});\n",
       "          if (!dataTable) return;\n",
       "\n",
       "          const docLinkHtml = 'Like what you see? Visit the ' +\n",
       "            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n",
       "            + ' to learn more about interactive tables.';\n",
       "          element.innerHTML = '';\n",
       "          dataTable['output_type'] = 'display_data';\n",
       "          await google.colab.output.renderOutput(dataTable, element);\n",
       "          const docLink = document.createElement('div');\n",
       "          docLink.innerHTML = docLinkHtml;\n",
       "          element.appendChild(docLink);\n",
       "        }\n",
       "      </script>\n",
       "    </div>\n",
       "  </div>\n",
       "  "
      ],
      "text/plain": [
       "       InvoiceNo StockCode                          Description  Quantity  \\\n",
       "171999    551515     21731        RED TOADSTOOL LED NIGHT LIGHT        12   \n",
       "172000    551515     20749           ASSORTED COLOUR MINI CASES        12   \n",
       "172001    551515     22729          ALARM CLOCK BAKELIKE ORANGE         8   \n",
       "172002    551515     22998         TRAVEL CARD WALLET KEEP CALM        24   \n",
       "172003    551515     22665    RECIPE BOX BLUE SKETCHBOOK DESIGN        24   \n",
       "...          ...       ...                                  ...       ...   \n",
       "209024    555150     22895  SET OF 2 TEA TOWELS APPLE AND PEARS         3   \n",
       "209025    555150     22983                  CARD BILLBOARD FONT         3   \n",
       "209026    555150     23169             CLASSIC GLASS COOKIE JAR         3   \n",
       "209027    555150     23298                       SPOTTY BUNTING         5   \n",
       "209028    555150     23118         PARISIENNE JEWELLERY DRAWER          2   \n",
       "\n",
       "        UnitPrice  CustomerID         Country time_intervals  Total Price  \\\n",
       "171999       1.65        2396  United Kingdom    08:00-11:59        19.80   \n",
       "172000       6.35        2396  United Kingdom    08:00-11:59        76.20   \n",
       "172001       3.75        2396  United Kingdom    08:00-11:59        30.00   \n",
       "172002       0.42        2396  United Kingdom    08:00-11:59        10.08   \n",
       "172003       2.55        2396  United Kingdom    08:00-11:59        61.20   \n",
       "...           ...         ...             ...            ...          ...   \n",
       "209024       3.25        4339  United Kingdom    12:00-15:59         9.75   \n",
       "209025       0.42        4339  United Kingdom    12:00-15:59         1.26   \n",
       "209026       4.15        4339  United Kingdom    12:00-15:59        12.45   \n",
       "209027       4.95        4339  United Kingdom    12:00-15:59        24.75   \n",
       "209028       7.50        4339  United Kingdom    12:00-15:59        15.00   \n",
       "\n",
       "        Money_bins  \n",
       "171999           0  \n",
       "172000           0  \n",
       "172001           0  \n",
       "172002           0  \n",
       "172003           0  \n",
       "...            ...  \n",
       "209024           0  \n",
       "209025           0  \n",
       "209026           0  \n",
       "209027           0  \n",
       "209028           0  \n",
       "\n",
       "[36292 rows x 10 columns]"
      ]
     },
     "execution_count": 104,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "og_may2011 = df_list_month_intervals[5]\n",
    "og_may2011"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {
    "colab": {
     "base_uri": "https://localhost:8080/"
    },
    "collapsed": true,
    "id": "_53dJmi12ryL",
    "outputId": "0908813f-52b1-4c26-8418-29a4b64b02c6"
   },
   "outputs": [
    {
     "data": {
      "text/html": [
       "\n",
       "  <div id=\"df-6367599d-74af-4290-928c-455902f2af8c\">\n",
       "    <div class=\"colab-df-container\">\n",
       "      <div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>No. of visits</th>\n",
       "      <th>Mean_purch</th>\n",
       "      <th>Sum_purch</th>\n",
       "      <th>Item_count</th>\n",
       "      <th>Total_quantity</th>\n",
       "      <th>Avg_quant</th>\n",
       "      <th>CustomerID</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>1</td>\n",
       "      <td>22.250000</td>\n",
       "      <td>89.00</td>\n",
       "      <td>4</td>\n",
       "      <td>20</td>\n",
       "      <td>5.000000</td>\n",
       "      <td>6</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>1</td>\n",
       "      <td>35.338462</td>\n",
       "      <td>459.40</td>\n",
       "      <td>13</td>\n",
       "      <td>240</td>\n",
       "      <td>18.461538</td>\n",
       "      <td>8</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>1</td>\n",
       "      <td>24.079556</td>\n",
       "      <td>1083.58</td>\n",
       "      <td>45</td>\n",
       "      <td>434</td>\n",
       "      <td>9.644444</td>\n",
       "      <td>13</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>1</td>\n",
       "      <td>27.142105</td>\n",
       "      <td>515.70</td>\n",
       "      <td>19</td>\n",
       "      <td>368</td>\n",
       "      <td>19.368421</td>\n",
       "      <td>22</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>1</td>\n",
       "      <td>18.146667</td>\n",
       "      <td>381.08</td>\n",
       "      <td>21</td>\n",
       "      <td>182</td>\n",
       "      <td>8.666667</td>\n",
       "      <td>38</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>...</th>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1052</th>\n",
       "      <td>1</td>\n",
       "      <td>21.023529</td>\n",
       "      <td>357.40</td>\n",
       "      <td>17</td>\n",
       "      <td>192</td>\n",
       "      <td>11.294118</td>\n",
       "      <td>4318</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1053</th>\n",
       "      <td>1</td>\n",
       "      <td>21.398500</td>\n",
       "      <td>427.97</td>\n",
       "      <td>20</td>\n",
       "      <td>144</td>\n",
       "      <td>7.200000</td>\n",
       "      <td>4320</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1054</th>\n",
       "      <td>1</td>\n",
       "      <td>2.260682</td>\n",
       "      <td>99.47</td>\n",
       "      <td>32</td>\n",
       "      <td>62</td>\n",
       "      <td>1.409091</td>\n",
       "      <td>4337</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1055</th>\n",
       "      <td>1</td>\n",
       "      <td>26.388966</td>\n",
       "      <td>765.28</td>\n",
       "      <td>27</td>\n",
       "      <td>488</td>\n",
       "      <td>16.827586</td>\n",
       "      <td>4338</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1056</th>\n",
       "      <td>176</td>\n",
       "      <td>11.535942</td>\n",
       "      <td>91941.46</td>\n",
       "      <td>1643</td>\n",
       "      <td>25740</td>\n",
       "      <td>3.229611</td>\n",
       "      <td>4339</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "<p>1057 rows × 7 columns</p>\n",
       "</div>\n",
       "      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-6367599d-74af-4290-928c-455902f2af8c')\"\n",
       "              title=\"Convert this dataframe to an interactive table.\"\n",
       "              style=\"display:none;\">\n",
       "        \n",
       "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
       "       width=\"24px\">\n",
       "    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n",
       "    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n",
       "  </svg>\n",
       "      </button>\n",
       "      \n",
       "  <style>\n",
       "    .colab-df-container {\n",
       "      display:flex;\n",
       "      flex-wrap:wrap;\n",
       "      gap: 12px;\n",
       "    }\n",
       "\n",
       "    .colab-df-convert {\n",
       "      background-color: #E8F0FE;\n",
       "      border: none;\n",
       "      border-radius: 50%;\n",
       "      cursor: pointer;\n",
       "      display: none;\n",
       "      fill: #1967D2;\n",
       "      height: 32px;\n",
       "      padding: 0 0 0 0;\n",
       "      width: 32px;\n",
       "    }\n",
       "\n",
       "    .colab-df-convert:hover {\n",
       "      background-color: #E2EBFA;\n",
       "      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
       "      fill: #174EA6;\n",
       "    }\n",
       "\n",
       "    [theme=dark] .colab-df-convert {\n",
       "      background-color: #3B4455;\n",
       "      fill: #D2E3FC;\n",
       "    }\n",
       "\n",
       "    [theme=dark] .colab-df-convert:hover {\n",
       "      background-color: #434B5C;\n",
       "      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
       "      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
       "      fill: #FFFFFF;\n",
       "    }\n",
       "  </style>\n",
       "\n",
       "      <script>\n",
       "        const buttonEl =\n",
       "          document.querySelector('#df-6367599d-74af-4290-928c-455902f2af8c button.colab-df-convert');\n",
       "        buttonEl.style.display =\n",
       "          google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
       "\n",
       "        async function convertToInteractive(key) {\n",
       "          const element = document.querySelector('#df-6367599d-74af-4290-928c-455902f2af8c');\n",
       "          const dataTable =\n",
       "            await google.colab.kernel.invokeFunction('convertToInteractive',\n",
       "                                                     [key], {});\n",
       "          if (!dataTable) return;\n",
       "\n",
       "          const docLinkHtml = 'Like what you see? Visit the ' +\n",
       "            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n",
       "            + ' to learn more about interactive tables.';\n",
       "          element.innerHTML = '';\n",
       "          dataTable['output_type'] = 'display_data';\n",
       "          await google.colab.output.renderOutput(dataTable, element);\n",
       "          const docLink = document.createElement('div');\n",
       "          docLink.innerHTML = docLinkHtml;\n",
       "          element.appendChild(docLink);\n",
       "        }\n",
       "      </script>\n",
       "    </div>\n",
       "  </div>\n",
       "  "
      ],
      "text/plain": [
       "      No. of visits  Mean_purch  Sum_purch  Item_count  Total_quantity  \\\n",
       "0                 1   22.250000      89.00           4              20   \n",
       "1                 1   35.338462     459.40          13             240   \n",
       "2                 1   24.079556    1083.58          45             434   \n",
       "3                 1   27.142105     515.70          19             368   \n",
       "4                 1   18.146667     381.08          21             182   \n",
       "...             ...         ...        ...         ...             ...   \n",
       "1052              1   21.023529     357.40          17             192   \n",
       "1053              1   21.398500     427.97          20             144   \n",
       "1054              1    2.260682      99.47          32              62   \n",
       "1055              1   26.388966     765.28          27             488   \n",
       "1056            176   11.535942   91941.46        1643           25740   \n",
       "\n",
       "      Avg_quant  CustomerID  \n",
       "0      5.000000           6  \n",
       "1     18.461538           8  \n",
       "2      9.644444          13  \n",
       "3     19.368421          22  \n",
       "4      8.666667          38  \n",
       "...         ...         ...  \n",
       "1052  11.294118        4318  \n",
       "1053   7.200000        4320  \n",
       "1054   1.409091        4337  \n",
       "1055  16.827586        4338  \n",
       "1056   3.229611        4339  \n",
       "\n",
       "[1057 rows x 7 columns]"
      ]
     },
     "execution_count": 105,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "dvt_may2011= person_df(og_may2011) #Our function gives such a dataframe\n",
    "#By which we can form clusters using KMeans\n",
    "dvt_may2011\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {
    "colab": {
     "base_uri": "https://localhost:8080/"
    },
    "collapsed": true,
    "id": "JSiiCL8d2zeT",
    "outputId": "ee4bf697-013d-4630-b7bf-c1801b489c7c"
   },
   "outputs": [
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "/usr/local/lib/python3.9/dist-packages/sklearn/cluster/_kmeans.py:870: FutureWarning: The default value of `n_init` will change from 10 to 'auto' in 1.4. Set the value of `n_init` explicitly to suppress the warning\n",
      "  warnings.warn(\n"
     ]
    },
    {
     "data": {
      "text/html": [
       "\n",
       "  <div id=\"df-d78ea9ef-e3b6-436b-aea4-364967bcd0fa\">\n",
       "    <div class=\"colab-df-container\">\n",
       "      <div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>No. of visits</th>\n",
       "      <th>Mean_purch</th>\n",
       "      <th>Sum_purch</th>\n",
       "      <th>Item_count</th>\n",
       "      <th>Total_quantity</th>\n",
       "      <th>Avg_quant</th>\n",
       "      <th>CustomerID</th>\n",
       "      <th>cluster_labels</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>1</td>\n",
       "      <td>22.250000</td>\n",
       "      <td>89.00</td>\n",
       "      <td>4</td>\n",
       "      <td>20</td>\n",
       "      <td>5.000000</td>\n",
       "      <td>6</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>1</td>\n",
       "      <td>35.338462</td>\n",
       "      <td>459.40</td>\n",
       "      <td>13</td>\n",
       "      <td>240</td>\n",
       "      <td>18.461538</td>\n",
       "      <td>8</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>1</td>\n",
       "      <td>24.079556</td>\n",
       "      <td>1083.58</td>\n",
       "      <td>45</td>\n",
       "      <td>434</td>\n",
       "      <td>9.644444</td>\n",
       "      <td>13</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>1</td>\n",
       "      <td>27.142105</td>\n",
       "      <td>515.70</td>\n",
       "      <td>19</td>\n",
       "      <td>368</td>\n",
       "      <td>19.368421</td>\n",
       "      <td>22</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>1</td>\n",
       "      <td>18.146667</td>\n",
       "      <td>381.08</td>\n",
       "      <td>21</td>\n",
       "      <td>182</td>\n",
       "      <td>8.666667</td>\n",
       "      <td>38</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>...</th>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1052</th>\n",
       "      <td>1</td>\n",
       "      <td>21.023529</td>\n",
       "      <td>357.40</td>\n",
       "      <td>17</td>\n",
       "      <td>192</td>\n",
       "      <td>11.294118</td>\n",
       "      <td>4318</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1053</th>\n",
       "      <td>1</td>\n",
       "      <td>21.398500</td>\n",
       "      <td>427.97</td>\n",
       "      <td>20</td>\n",
       "      <td>144</td>\n",
       "      <td>7.200000</td>\n",
       "      <td>4320</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1054</th>\n",
       "      <td>1</td>\n",
       "      <td>2.260682</td>\n",
       "      <td>99.47</td>\n",
       "      <td>32</td>\n",
       "      <td>62</td>\n",
       "      <td>1.409091</td>\n",
       "      <td>4337</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1055</th>\n",
       "      <td>1</td>\n",
       "      <td>26.388966</td>\n",
       "      <td>765.28</td>\n",
       "      <td>27</td>\n",
       "      <td>488</td>\n",
       "      <td>16.827586</td>\n",
       "      <td>4338</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1056</th>\n",
       "      <td>176</td>\n",
       "      <td>11.535942</td>\n",
       "      <td>91941.46</td>\n",
       "      <td>1643</td>\n",
       "      <td>25740</td>\n",
       "      <td>3.229611</td>\n",
       "      <td>4339</td>\n",
       "      <td>2</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "<p>1057 rows × 8 columns</p>\n",
       "</div>\n",
       "      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-d78ea9ef-e3b6-436b-aea4-364967bcd0fa')\"\n",
       "              title=\"Convert this dataframe to an interactive table.\"\n",
       "              style=\"display:none;\">\n",
       "        \n",
       "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
       "       width=\"24px\">\n",
       "    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n",
       "    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n",
       "  </svg>\n",
       "      </button>\n",
       "      \n",
       "  <style>\n",
       "    .colab-df-container {\n",
       "      display:flex;\n",
       "      flex-wrap:wrap;\n",
       "      gap: 12px;\n",
       "    }\n",
       "\n",
       "    .colab-df-convert {\n",
       "      background-color: #E8F0FE;\n",
       "      border: none;\n",
       "      border-radius: 50%;\n",
       "      cursor: pointer;\n",
       "      display: none;\n",
       "      fill: #1967D2;\n",
       "      height: 32px;\n",
       "      padding: 0 0 0 0;\n",
       "      width: 32px;\n",
       "    }\n",
       "\n",
       "    .colab-df-convert:hover {\n",
       "      background-color: #E2EBFA;\n",
       "      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
       "      fill: #174EA6;\n",
       "    }\n",
       "\n",
       "    [theme=dark] .colab-df-convert {\n",
       "      background-color: #3B4455;\n",
       "      fill: #D2E3FC;\n",
       "    }\n",
       "\n",
       "    [theme=dark] .colab-df-convert:hover {\n",
       "      background-color: #434B5C;\n",
       "      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
       "      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
       "      fill: #FFFFFF;\n",
       "    }\n",
       "  </style>\n",
       "\n",
       "      <script>\n",
       "        const buttonEl =\n",
       "          document.querySelector('#df-d78ea9ef-e3b6-436b-aea4-364967bcd0fa button.colab-df-convert');\n",
       "        buttonEl.style.display =\n",
       "          google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
       "\n",
       "        async function convertToInteractive(key) {\n",
       "          const element = document.querySelector('#df-d78ea9ef-e3b6-436b-aea4-364967bcd0fa');\n",
       "          const dataTable =\n",
       "            await google.colab.kernel.invokeFunction('convertToInteractive',\n",
       "                                                     [key], {});\n",
       "          if (!dataTable) return;\n",
       "\n",
       "          const docLinkHtml = 'Like what you see? Visit the ' +\n",
       "            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n",
       "            + ' to learn more about interactive tables.';\n",
       "          element.innerHTML = '';\n",
       "          dataTable['output_type'] = 'display_data';\n",
       "          await google.colab.output.renderOutput(dataTable, element);\n",
       "          const docLink = document.createElement('div');\n",
       "          docLink.innerHTML = docLinkHtml;\n",
       "          element.appendChild(docLink);\n",
       "        }\n",
       "      </script>\n",
       "    </div>\n",
       "  </div>\n",
       "  "
      ],
      "text/plain": [
       "      No. of visits  Mean_purch  Sum_purch  Item_count  Total_quantity  \\\n",
       "0                 1   22.250000      89.00           4              20   \n",
       "1                 1   35.338462     459.40          13             240   \n",
       "2                 1   24.079556    1083.58          45             434   \n",
       "3                 1   27.142105     515.70          19             368   \n",
       "4                 1   18.146667     381.08          21             182   \n",
       "...             ...         ...        ...         ...             ...   \n",
       "1052              1   21.023529     357.40          17             192   \n",
       "1053              1   21.398500     427.97          20             144   \n",
       "1054              1    2.260682      99.47          32              62   \n",
       "1055              1   26.388966     765.28          27             488   \n",
       "1056            176   11.535942   91941.46        1643           25740   \n",
       "\n",
       "      Avg_quant  CustomerID  cluster_labels  \n",
       "0      5.000000           6               0  \n",
       "1     18.461538           8               0  \n",
       "2      9.644444          13               0  \n",
       "3     19.368421          22               0  \n",
       "4      8.666667          38               0  \n",
       "...         ...         ...             ...  \n",
       "1052  11.294118        4318               0  \n",
       "1053   7.200000        4320               0  \n",
       "1054   1.409091        4337               0  \n",
       "1055  16.827586        4338               0  \n",
       "1056   3.229611        4339               2  \n",
       "\n",
       "[1057 rows x 8 columns]"
      ]
     },
     "execution_count": 106,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "df_may2011 = df_cluster_labels(dvt_may2011,3)\n",
    "df_may2011"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {
    "colab": {
     "base_uri": "https://localhost:8080/"
    },
    "id": "M78_2y26np28",
    "outputId": "fd316e4c-96ca-4280-ed3b-43c463402e33"
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "The Silhouette Score is :- 0.8878455774488703\n"
     ]
    }
   ],
   "source": [
    "silhte_score_may2011 = silhouette_score(dvt_may2011, df_may2011['cluster_labels'])\n",
    "print(\"The Silhouette Score is :- \"+str(silhte_score_may2011))"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {
    "colab": {
     "base_uri": "https://localhost:8080/"
    },
    "collapsed": true,
    "id": "N-_1Hqg423-k",
    "outputId": "e5d92236-06d5-4409-fd4a-41dfeda19f67"
   },
   "outputs": [
    {
     "data": {
      "text/plain": [
       "0    1049\n",
       "1       7\n",
       "2       1\n",
       "Name: cluster_labels, dtype: int64"
      ]
     },
     "execution_count": 108,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "df_may2011['cluster_labels'].value_counts()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {
    "colab": {
     "base_uri": "https://localhost:8080/"
    },
    "collapsed": true,
    "id": "ervhCmmG29Uo",
    "outputId": "cbef6a68-97e1-4179-faf0-7369352b89c7"
   },
   "outputs": [
    {
     "data": {
      "image/png": "",
      "text/plain": [
       "<Figure size 640x480 with 1 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "plt.scatter(df_may2011['Mean_purch'], df_may2011['Sum_purch'], c=df_may2011['cluster_labels'], cmap='viridis')\n",
    "plt.title(\"For May 2011\")\n",
    "plt.xlabel('Mean_purch')\n",
    "plt.ylabel('Sum_purch')\n",
    "plt.show()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {
    "colab": {
     "base_uri": "https://localhost:8080/"
    },
    "collapsed": true,
    "id": "sjOx-eoA3Esc",
    "outputId": "f18da799-17a2-4302-bbff-f6d3fc81e755"
   },
   "outputs": [
    {
     "data": {
      "text/html": [
       "\n",
       "  <div id=\"df-d01eb23e-53b3-45cd-862b-562ccc3543bf\">\n",
       "    <div class=\"colab-df-container\">\n",
       "      <div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>No. of visits</th>\n",
       "      <th>Mean_purch</th>\n",
       "      <th>Sum_purch</th>\n",
       "      <th>Item_count</th>\n",
       "      <th>Total_quantity</th>\n",
       "      <th>Avg_quant</th>\n",
       "      <th>CustomerID</th>\n",
       "      <th>cluster_labels</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>1</td>\n",
       "      <td>22.250000</td>\n",
       "      <td>89.00</td>\n",
       "      <td>4</td>\n",
       "      <td>20</td>\n",
       "      <td>5.000000</td>\n",
       "      <td>6</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>1</td>\n",
       "      <td>35.338462</td>\n",
       "      <td>459.40</td>\n",
       "      <td>13</td>\n",
       "      <td>240</td>\n",
       "      <td>18.461538</td>\n",
       "      <td>8</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>1</td>\n",
       "      <td>24.079556</td>\n",
       "      <td>1083.58</td>\n",
       "      <td>45</td>\n",
       "      <td>434</td>\n",
       "      <td>9.644444</td>\n",
       "      <td>13</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>1</td>\n",
       "      <td>27.142105</td>\n",
       "      <td>515.70</td>\n",
       "      <td>19</td>\n",
       "      <td>368</td>\n",
       "      <td>19.368421</td>\n",
       "      <td>22</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>1</td>\n",
       "      <td>18.146667</td>\n",
       "      <td>381.08</td>\n",
       "      <td>21</td>\n",
       "      <td>182</td>\n",
       "      <td>8.666667</td>\n",
       "      <td>38</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>...</th>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1051</th>\n",
       "      <td>2</td>\n",
       "      <td>13.550811</td>\n",
       "      <td>501.38</td>\n",
       "      <td>37</td>\n",
       "      <td>406</td>\n",
       "      <td>10.972973</td>\n",
       "      <td>4310</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1052</th>\n",
       "      <td>1</td>\n",
       "      <td>21.023529</td>\n",
       "      <td>357.40</td>\n",
       "      <td>17</td>\n",
       "      <td>192</td>\n",
       "      <td>11.294118</td>\n",
       "      <td>4318</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1053</th>\n",
       "      <td>1</td>\n",
       "      <td>21.398500</td>\n",
       "      <td>427.97</td>\n",
       "      <td>20</td>\n",
       "      <td>144</td>\n",
       "      <td>7.200000</td>\n",
       "      <td>4320</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1054</th>\n",
       "      <td>1</td>\n",
       "      <td>2.260682</td>\n",
       "      <td>99.47</td>\n",
       "      <td>32</td>\n",
       "      <td>62</td>\n",
       "      <td>1.409091</td>\n",
       "      <td>4337</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1055</th>\n",
       "      <td>1</td>\n",
       "      <td>26.388966</td>\n",
       "      <td>765.28</td>\n",
       "      <td>27</td>\n",
       "      <td>488</td>\n",
       "      <td>16.827586</td>\n",
       "      <td>4338</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "<p>1049 rows × 8 columns</p>\n",
       "</div>\n",
       "      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-d01eb23e-53b3-45cd-862b-562ccc3543bf')\"\n",
       "              title=\"Convert this dataframe to an interactive table.\"\n",
       "              style=\"display:none;\">\n",
       "        \n",
       "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
       "       width=\"24px\">\n",
       "    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n",
       "    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n",
       "  </svg>\n",
       "      </button>\n",
       "      \n",
       "  <style>\n",
       "    .colab-df-container {\n",
       "      display:flex;\n",
       "      flex-wrap:wrap;\n",
       "      gap: 12px;\n",
       "    }\n",
       "\n",
       "    .colab-df-convert {\n",
       "      background-color: #E8F0FE;\n",
       "      border: none;\n",
       "      border-radius: 50%;\n",
       "      cursor: pointer;\n",
       "      display: none;\n",
       "      fill: #1967D2;\n",
       "      height: 32px;\n",
       "      padding: 0 0 0 0;\n",
       "      width: 32px;\n",
       "    }\n",
       "\n",
       "    .colab-df-convert:hover {\n",
       "      background-color: #E2EBFA;\n",
       "      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
       "      fill: #174EA6;\n",
       "    }\n",
       "\n",
       "    [theme=dark] .colab-df-convert {\n",
       "      background-color: #3B4455;\n",
       "      fill: #D2E3FC;\n",
       "    }\n",
       "\n",
       "    [theme=dark] .colab-df-convert:hover {\n",
       "      background-color: #434B5C;\n",
       "      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
       "      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
       "      fill: #FFFFFF;\n",
       "    }\n",
       "  </style>\n",
       "\n",
       "      <script>\n",
       "        const buttonEl =\n",
       "          document.querySelector('#df-d01eb23e-53b3-45cd-862b-562ccc3543bf button.colab-df-convert');\n",
       "        buttonEl.style.display =\n",
       "          google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
       "\n",
       "        async function convertToInteractive(key) {\n",
       "          const element = document.querySelector('#df-d01eb23e-53b3-45cd-862b-562ccc3543bf');\n",
       "          const dataTable =\n",
       "            await google.colab.kernel.invokeFunction('convertToInteractive',\n",
       "                                                     [key], {});\n",
       "          if (!dataTable) return;\n",
       "\n",
       "          const docLinkHtml = 'Like what you see? Visit the ' +\n",
       "            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n",
       "            + ' to learn more about interactive tables.';\n",
       "          element.innerHTML = '';\n",
       "          dataTable['output_type'] = 'display_data';\n",
       "          await google.colab.output.renderOutput(dataTable, element);\n",
       "          const docLink = document.createElement('div');\n",
       "          docLink.innerHTML = docLinkHtml;\n",
       "          element.appendChild(docLink);\n",
       "        }\n",
       "      </script>\n",
       "    </div>\n",
       "  </div>\n",
       "  "
      ],
      "text/plain": [
       "      No. of visits  Mean_purch  Sum_purch  Item_count  Total_quantity  \\\n",
       "0                 1   22.250000      89.00           4              20   \n",
       "1                 1   35.338462     459.40          13             240   \n",
       "2                 1   24.079556    1083.58          45             434   \n",
       "3                 1   27.142105     515.70          19             368   \n",
       "4                 1   18.146667     381.08          21             182   \n",
       "...             ...         ...        ...         ...             ...   \n",
       "1051              2   13.550811     501.38          37             406   \n",
       "1052              1   21.023529     357.40          17             192   \n",
       "1053              1   21.398500     427.97          20             144   \n",
       "1054              1    2.260682      99.47          32              62   \n",
       "1055              1   26.388966     765.28          27             488   \n",
       "\n",
       "      Avg_quant  CustomerID  cluster_labels  \n",
       "0      5.000000           6               0  \n",
       "1     18.461538           8               0  \n",
       "2      9.644444          13               0  \n",
       "3     19.368421          22               0  \n",
       "4      8.666667          38               0  \n",
       "...         ...         ...             ...  \n",
       "1051  10.972973        4310               0  \n",
       "1052  11.294118        4318               0  \n",
       "1053   7.200000        4320               0  \n",
       "1054   1.409091        4337               0  \n",
       "1055  16.827586        4338               0  \n",
       "\n",
       "[1049 rows x 8 columns]"
      ]
     },
     "execution_count": 110,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "#Below is for outliers:-\n",
    "df_may2011 = df_may2011[df_may2011['cluster_labels']!=1]\n",
    "df_may2011 = df_may2011[df_may2011['cluster_labels']!=2]\n",
    "df_may2011"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {
    "colab": {
     "base_uri": "https://localhost:8080/"
    },
    "collapsed": true,
    "id": "L1kBSKme3OOg",
    "outputId": "d5f9a12c-8a64-4558-dde0-075956db617b"
   },
   "outputs": [
    {
     "data": {
      "text/plain": [
       "0    1049\n",
       "Name: cluster_labels, dtype: int64"
      ]
     },
     "execution_count": 111,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "df_may2011['cluster_labels'].value_counts()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {
    "colab": {
     "base_uri": "https://localhost:8080/"
    },
    "collapsed": true,
    "id": "dJwr3SFr3SO-",
    "outputId": "81944588-7b7e-422b-9d34-00c5bb7c68aa"
   },
   "outputs": [
    {
     "data": {
      "text/html": [
       "\n",
       "  <div id=\"df-a891c189-1a87-4f69-96d5-f0626c3d7e61\">\n",
       "    <div class=\"colab-df-container\">\n",
       "      <div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>No. of visits</th>\n",
       "      <th>Mean_purch</th>\n",
       "      <th>Sum_purch</th>\n",
       "      <th>Item_count</th>\n",
       "      <th>Total_quantity</th>\n",
       "      <th>Avg_quant</th>\n",
       "      <th>CustomerID</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>1</td>\n",
       "      <td>22.250000</td>\n",
       "      <td>89.00</td>\n",
       "      <td>4</td>\n",
       "      <td>20</td>\n",
       "      <td>5.000000</td>\n",
       "      <td>6</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>1</td>\n",
       "      <td>35.338462</td>\n",
       "      <td>459.40</td>\n",
       "      <td>13</td>\n",
       "      <td>240</td>\n",
       "      <td>18.461538</td>\n",
       "      <td>8</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>1</td>\n",
       "      <td>24.079556</td>\n",
       "      <td>1083.58</td>\n",
       "      <td>45</td>\n",
       "      <td>434</td>\n",
       "      <td>9.644444</td>\n",
       "      <td>13</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>1</td>\n",
       "      <td>27.142105</td>\n",
       "      <td>515.70</td>\n",
       "      <td>19</td>\n",
       "      <td>368</td>\n",
       "      <td>19.368421</td>\n",
       "      <td>22</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>1</td>\n",
       "      <td>18.146667</td>\n",
       "      <td>381.08</td>\n",
       "      <td>21</td>\n",
       "      <td>182</td>\n",
       "      <td>8.666667</td>\n",
       "      <td>38</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>...</th>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1051</th>\n",
       "      <td>2</td>\n",
       "      <td>13.550811</td>\n",
       "      <td>501.38</td>\n",
       "      <td>37</td>\n",
       "      <td>406</td>\n",
       "      <td>10.972973</td>\n",
       "      <td>4310</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1052</th>\n",
       "      <td>1</td>\n",
       "      <td>21.023529</td>\n",
       "      <td>357.40</td>\n",
       "      <td>17</td>\n",
       "      <td>192</td>\n",
       "      <td>11.294118</td>\n",
       "      <td>4318</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1053</th>\n",
       "      <td>1</td>\n",
       "      <td>21.398500</td>\n",
       "      <td>427.97</td>\n",
       "      <td>20</td>\n",
       "      <td>144</td>\n",
       "      <td>7.200000</td>\n",
       "      <td>4320</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1054</th>\n",
       "      <td>1</td>\n",
       "      <td>2.260682</td>\n",
       "      <td>99.47</td>\n",
       "      <td>32</td>\n",
       "      <td>62</td>\n",
       "      <td>1.409091</td>\n",
       "      <td>4337</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1055</th>\n",
       "      <td>1</td>\n",
       "      <td>26.388966</td>\n",
       "      <td>765.28</td>\n",
       "      <td>27</td>\n",
       "      <td>488</td>\n",
       "      <td>16.827586</td>\n",
       "      <td>4338</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "<p>1049 rows × 7 columns</p>\n",
       "</div>\n",
       "      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-a891c189-1a87-4f69-96d5-f0626c3d7e61')\"\n",
       "              title=\"Convert this dataframe to an interactive table.\"\n",
       "              style=\"display:none;\">\n",
       "        \n",
       "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
       "       width=\"24px\">\n",
       "    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n",
       "    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n",
       "  </svg>\n",
       "      </button>\n",
       "      \n",
       "  <style>\n",
       "    .colab-df-container {\n",
       "      display:flex;\n",
       "      flex-wrap:wrap;\n",
       "      gap: 12px;\n",
       "    }\n",
       "\n",
       "    .colab-df-convert {\n",
       "      background-color: #E8F0FE;\n",
       "      border: none;\n",
       "      border-radius: 50%;\n",
       "      cursor: pointer;\n",
       "      display: none;\n",
       "      fill: #1967D2;\n",
       "      height: 32px;\n",
       "      padding: 0 0 0 0;\n",
       "      width: 32px;\n",
       "    }\n",
       "\n",
       "    .colab-df-convert:hover {\n",
       "      background-color: #E2EBFA;\n",
       "      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
       "      fill: #174EA6;\n",
       "    }\n",
       "\n",
       "    [theme=dark] .colab-df-convert {\n",
       "      background-color: #3B4455;\n",
       "      fill: #D2E3FC;\n",
       "    }\n",
       "\n",
       "    [theme=dark] .colab-df-convert:hover {\n",
       "      background-color: #434B5C;\n",
       "      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
       "      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
       "      fill: #FFFFFF;\n",
       "    }\n",
       "  </style>\n",
       "\n",
       "      <script>\n",
       "        const buttonEl =\n",
       "          document.querySelector('#df-a891c189-1a87-4f69-96d5-f0626c3d7e61 button.colab-df-convert');\n",
       "        buttonEl.style.display =\n",
       "          google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
       "\n",
       "        async function convertToInteractive(key) {\n",
       "          const element = document.querySelector('#df-a891c189-1a87-4f69-96d5-f0626c3d7e61');\n",
       "          const dataTable =\n",
       "            await google.colab.kernel.invokeFunction('convertToInteractive',\n",
       "                                                     [key], {});\n",
       "          if (!dataTable) return;\n",
       "\n",
       "          const docLinkHtml = 'Like what you see? Visit the ' +\n",
       "            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n",
       "            + ' to learn more about interactive tables.';\n",
       "          element.innerHTML = '';\n",
       "          dataTable['output_type'] = 'display_data';\n",
       "          await google.colab.output.renderOutput(dataTable, element);\n",
       "          const docLink = document.createElement('div');\n",
       "          docLink.innerHTML = docLinkHtml;\n",
       "          element.appendChild(docLink);\n",
       "        }\n",
       "      </script>\n",
       "    </div>\n",
       "  </div>\n",
       "  "
      ],
      "text/plain": [
       "      No. of visits  Mean_purch  Sum_purch  Item_count  Total_quantity  \\\n",
       "0                 1   22.250000      89.00           4              20   \n",
       "1                 1   35.338462     459.40          13             240   \n",
       "2                 1   24.079556    1083.58          45             434   \n",
       "3                 1   27.142105     515.70          19             368   \n",
       "4                 1   18.146667     381.08          21             182   \n",
       "...             ...         ...        ...         ...             ...   \n",
       "1051              2   13.550811     501.38          37             406   \n",
       "1052              1   21.023529     357.40          17             192   \n",
       "1053              1   21.398500     427.97          20             144   \n",
       "1054              1    2.260682      99.47          32              62   \n",
       "1055              1   26.388966     765.28          27             488   \n",
       "\n",
       "      Avg_quant  CustomerID  \n",
       "0      5.000000           6  \n",
       "1     18.461538           8  \n",
       "2      9.644444          13  \n",
       "3     19.368421          22  \n",
       "4      8.666667          38  \n",
       "...         ...         ...  \n",
       "1051  10.972973        4310  \n",
       "1052  11.294118        4318  \n",
       "1053   7.200000        4320  \n",
       "1054   1.409091        4337  \n",
       "1055  16.827586        4338  \n",
       "\n",
       "[1049 rows x 7 columns]"
      ]
     },
     "execution_count": 112,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "df_may2011_person = df_may2011.copy(deep=True)\n",
    "df_may2011_person.drop(['cluster_labels'],axis=1,inplace=True)\n",
    "df_may2011_person"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {
    "colab": {
     "base_uri": "https://localhost:8080/"
    },
    "collapsed": true,
    "id": "j-vIWmbr3WSt",
    "outputId": "65f2a36d-b21c-45e4-9e38-c3b9dee439b4"
   },
   "outputs": [
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "/usr/local/lib/python3.9/dist-packages/sklearn/cluster/_kmeans.py:870: FutureWarning: The default value of `n_init` will change from 10 to 'auto' in 1.4. Set the value of `n_init` explicitly to suppress the warning\n",
      "  warnings.warn(\n"
     ]
    },
    {
     "data": {
      "text/html": [
       "\n",
       "  <div id=\"df-cca1fb0d-2bb7-44ff-bfdd-7cd912324cb4\">\n",
       "    <div class=\"colab-df-container\">\n",
       "      <div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>No. of visits</th>\n",
       "      <th>Mean_purch</th>\n",
       "      <th>Sum_purch</th>\n",
       "      <th>Item_count</th>\n",
       "      <th>Total_quantity</th>\n",
       "      <th>Avg_quant</th>\n",
       "      <th>CustomerID</th>\n",
       "      <th>cluster_labels</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>1</td>\n",
       "      <td>22.250000</td>\n",
       "      <td>89.00</td>\n",
       "      <td>4</td>\n",
       "      <td>20</td>\n",
       "      <td>5.000000</td>\n",
       "      <td>6</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>1</td>\n",
       "      <td>35.338462</td>\n",
       "      <td>459.40</td>\n",
       "      <td>13</td>\n",
       "      <td>240</td>\n",
       "      <td>18.461538</td>\n",
       "      <td>8</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>1</td>\n",
       "      <td>24.079556</td>\n",
       "      <td>1083.58</td>\n",
       "      <td>45</td>\n",
       "      <td>434</td>\n",
       "      <td>9.644444</td>\n",
       "      <td>13</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>1</td>\n",
       "      <td>27.142105</td>\n",
       "      <td>515.70</td>\n",
       "      <td>19</td>\n",
       "      <td>368</td>\n",
       "      <td>19.368421</td>\n",
       "      <td>22</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>1</td>\n",
       "      <td>18.146667</td>\n",
       "      <td>381.08</td>\n",
       "      <td>21</td>\n",
       "      <td>182</td>\n",
       "      <td>8.666667</td>\n",
       "      <td>38</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>...</th>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1051</th>\n",
       "      <td>2</td>\n",
       "      <td>13.550811</td>\n",
       "      <td>501.38</td>\n",
       "      <td>37</td>\n",
       "      <td>406</td>\n",
       "      <td>10.972973</td>\n",
       "      <td>4310</td>\n",
       "      <td>2</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1052</th>\n",
       "      <td>1</td>\n",
       "      <td>21.023529</td>\n",
       "      <td>357.40</td>\n",
       "      <td>17</td>\n",
       "      <td>192</td>\n",
       "      <td>11.294118</td>\n",
       "      <td>4318</td>\n",
       "      <td>2</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1053</th>\n",
       "      <td>1</td>\n",
       "      <td>21.398500</td>\n",
       "      <td>427.97</td>\n",
       "      <td>20</td>\n",
       "      <td>144</td>\n",
       "      <td>7.200000</td>\n",
       "      <td>4320</td>\n",
       "      <td>2</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1054</th>\n",
       "      <td>1</td>\n",
       "      <td>2.260682</td>\n",
       "      <td>99.47</td>\n",
       "      <td>32</td>\n",
       "      <td>62</td>\n",
       "      <td>1.409091</td>\n",
       "      <td>4337</td>\n",
       "      <td>2</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1055</th>\n",
       "      <td>1</td>\n",
       "      <td>26.388966</td>\n",
       "      <td>765.28</td>\n",
       "      <td>27</td>\n",
       "      <td>488</td>\n",
       "      <td>16.827586</td>\n",
       "      <td>4338</td>\n",
       "      <td>2</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "<p>1049 rows × 8 columns</p>\n",
       "</div>\n",
       "      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-cca1fb0d-2bb7-44ff-bfdd-7cd912324cb4')\"\n",
       "              title=\"Convert this dataframe to an interactive table.\"\n",
       "              style=\"display:none;\">\n",
       "        \n",
       "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
       "       width=\"24px\">\n",
       "    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n",
       "    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n",
       "  </svg>\n",
       "      </button>\n",
       "      \n",
       "  <style>\n",
       "    .colab-df-container {\n",
       "      display:flex;\n",
       "      flex-wrap:wrap;\n",
       "      gap: 12px;\n",
       "    }\n",
       "\n",
       "    .colab-df-convert {\n",
       "      background-color: #E8F0FE;\n",
       "      border: none;\n",
       "      border-radius: 50%;\n",
       "      cursor: pointer;\n",
       "      display: none;\n",
       "      fill: #1967D2;\n",
       "      height: 32px;\n",
       "      padding: 0 0 0 0;\n",
       "      width: 32px;\n",
       "    }\n",
       "\n",
       "    .colab-df-convert:hover {\n",
       "      background-color: #E2EBFA;\n",
       "      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
       "      fill: #174EA6;\n",
       "    }\n",
       "\n",
       "    [theme=dark] .colab-df-convert {\n",
       "      background-color: #3B4455;\n",
       "      fill: #D2E3FC;\n",
       "    }\n",
       "\n",
       "    [theme=dark] .colab-df-convert:hover {\n",
       "      background-color: #434B5C;\n",
       "      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
       "      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
       "      fill: #FFFFFF;\n",
       "    }\n",
       "  </style>\n",
       "\n",
       "      <script>\n",
       "        const buttonEl =\n",
       "          document.querySelector('#df-cca1fb0d-2bb7-44ff-bfdd-7cd912324cb4 button.colab-df-convert');\n",
       "        buttonEl.style.display =\n",
       "          google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
       "\n",
       "        async function convertToInteractive(key) {\n",
       "          const element = document.querySelector('#df-cca1fb0d-2bb7-44ff-bfdd-7cd912324cb4');\n",
       "          const dataTable =\n",
       "            await google.colab.kernel.invokeFunction('convertToInteractive',\n",
       "                                                     [key], {});\n",
       "          if (!dataTable) return;\n",
       "\n",
       "          const docLinkHtml = 'Like what you see? Visit the ' +\n",
       "            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n",
       "            + ' to learn more about interactive tables.';\n",
       "          element.innerHTML = '';\n",
       "          dataTable['output_type'] = 'display_data';\n",
       "          await google.colab.output.renderOutput(dataTable, element);\n",
       "          const docLink = document.createElement('div');\n",
       "          docLink.innerHTML = docLinkHtml;\n",
       "          element.appendChild(docLink);\n",
       "        }\n",
       "      </script>\n",
       "    </div>\n",
       "  </div>\n",
       "  "
      ],
      "text/plain": [
       "      No. of visits  Mean_purch  Sum_purch  Item_count  Total_quantity  \\\n",
       "0                 1   22.250000      89.00           4              20   \n",
       "1                 1   35.338462     459.40          13             240   \n",
       "2                 1   24.079556    1083.58          45             434   \n",
       "3                 1   27.142105     515.70          19             368   \n",
       "4                 1   18.146667     381.08          21             182   \n",
       "...             ...         ...        ...         ...             ...   \n",
       "1051              2   13.550811     501.38          37             406   \n",
       "1052              1   21.023529     357.40          17             192   \n",
       "1053              1   21.398500     427.97          20             144   \n",
       "1054              1    2.260682      99.47          32              62   \n",
       "1055              1   26.388966     765.28          27             488   \n",
       "\n",
       "      Avg_quant  CustomerID  cluster_labels  \n",
       "0      5.000000           6               1  \n",
       "1     18.461538           8               1  \n",
       "2      9.644444          13               1  \n",
       "3     19.368421          22               1  \n",
       "4      8.666667          38               1  \n",
       "...         ...         ...             ...  \n",
       "1051  10.972973        4310               2  \n",
       "1052  11.294118        4318               2  \n",
       "1053   7.200000        4320               2  \n",
       "1054   1.409091        4337               2  \n",
       "1055  16.827586        4338               2  \n",
       "\n",
       "[1049 rows x 8 columns]"
      ]
     },
     "execution_count": 113,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "df_may2011_new = df_cluster_labels(df_may2011_person,3)\n",
    "df_may2011_new"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {
    "colab": {
     "base_uri": "https://localhost:8080/"
    },
    "id": "LmYalMLGnxTf",
    "outputId": "e9ea37f3-0680-41df-e2bf-337e3c170d59"
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "The Silhouette Score is :- 0.5419356979120104\n"
     ]
    }
   ],
   "source": [
    "silhte_score_may2011_new = silhouette_score(df_may2011_person, df_may2011_new['cluster_labels'])\n",
    "print(\"The Silhouette Score is :- \"+str(silhte_score_may2011_new))\n",
    "#Indicates that silhouette score is realistic for dataset without outliers"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {
    "colab": {
     "base_uri": "https://localhost:8080/"
    },
    "collapsed": true,
    "id": "wpcQCdCA3cFS",
    "outputId": "8c00947a-491e-41ac-f6ac-476ec4200e11"
   },
   "outputs": [
    {
     "data": {
      "text/plain": [
       "1    525\n",
       "2    495\n",
       "0     29\n",
       "Name: cluster_labels, dtype: int64"
      ]
     },
     "execution_count": 115,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "df_may2011_new['cluster_labels'].value_counts()\n",
    "#These are comparatively good clusters"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {
    "colab": {
     "base_uri": "https://localhost:8080/"
    },
    "collapsed": true,
    "id": "RjDAh8cX3kSk",
    "outputId": "7dd007f3-4732-4c81-fcb8-39cfa9af3687"
   },
   "outputs": [
    {
     "data": {
      "image/png": "",
      "text/plain": [
       "<Figure size 640x480 with 1 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "plt.scatter(df_may2011_new['Mean_purch'], df_may2011_new['Sum_purch'], c=df_may2011_new['cluster_labels'], cmap='viridis')\n",
    "plt.title(\"For May 2011 (After removing outliers)\")\n",
    "plt.xlabel('Mean_purch')\n",
    "plt.ylabel('Sum_purch')\n",
    "plt.show()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {
    "id": "CAnrFTdy5HJK"
   },
   "outputs": [],
   "source": [
    "may2011 = descrip_dict(og_dec2010,df_dec2010_new)\n",
    "may2011 = processlis(may2011)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {
    "colab": {
     "base_uri": "https://localhost:8080/"
    },
    "collapsed": true,
    "id": "z2umOQ3u5LWe",
    "outputId": "06310b1e-ebb2-4848-bcdc-3b32f9ded279"
   },
   "outputs": [
    {
     "data": {
      "text/plain": [
       "[     CustomerID                                        Description\n",
       " 0             1  [BLACK CANDELABRA T-LIGHT HOLDER, AIRLINE BAG ...\n",
       " 1             2  [72 SWEETHEART FAIRY CAKE CASES, 60 CAKE CASES...\n",
       " 2            20  [WHITE HANGING HEART T-LIGHT HOLDER, SPACE CAD...\n",
       " 3            26  [HOT WATER BOTTLE BABUSHKA LARGE, CHOCOLATE HO...\n",
       " 4            31  [SET/10 RED POLKADOT PARTY CANDLES, SET/10 PIN...\n",
       " ..          ...                                                ...\n",
       " 398        2226  [JAM MAKING SET WITH JARS, JAM MAKING SET PRIN...\n",
       " 399        2227                       [HAND OPEN SHAPE DECO.WHITE]\n",
       " 400        2230  [SKULL DESIGN TV DINNER TRAY, TV DINNER TRAY D...\n",
       " 401        2235  [DANISH ROSE ROUND SEWING BOX, 3 STRIPEY MICE ...\n",
       " 402        2237  [DOLLY GIRL LUNCH BOX, SPACEBOY LUNCH BOX , LU...\n",
       " \n",
       " [403 rows x 2 columns],\n",
       "      CustomerID                                        Description\n",
       " 0          2261  [CHOCOLATE HOT WATER BOTTLE, PAPER CHAIN KIT V...\n",
       " 1          2283  [RETROSPOT HEART HOT WATER BOTTLE, CHOCOLATE H...\n",
       " 2          2284  [TOOTHPASTE TUBE PEN, LIPSTICK PEN RED, CHOCOL...\n",
       " 3          2287  [BOUDOIR SQUARE TISSUE BOX, RECIPE BOX RETROSP...\n",
       " 4          2291  [DOORMAT FANCY FONT HOME SWEET HOME, DOORMAT S...\n",
       " ..          ...                                                ...\n",
       " 440        4306  [WHITE HANGING HEART T-LIGHT HOLDER, HANGING H...\n",
       " 441        4310  [VINTAGE PAISLEY STATIONERY SET, COLOURING PEN...\n",
       " 442        4319  [WICKER STAR , HEART OF WICKER LARGE, HAND WAR...\n",
       " 443        4320  [CHILLI LIGHTS, MEASURING TAPE BABUSHKA PINK, ...\n",
       " 444        4326  [HOT WATER BOTTLE BABUSHKA , RED TOADSTOOL LED...\n",
       " \n",
       " [445 rows x 2 columns]]"
      ]
     },
     "execution_count": 118,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "may2011"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {
    "colab": {
     "base_uri": "https://localhost:8080/"
    },
    "id": "MxP63HYJMOBV",
    "outputId": "6c458e59-7cc9-4bb4-9585-562ce7879058"
   },
   "outputs": [
    {
     "data": {
      "image/png": "",
      "text/plain": [
       "<Figure size 640x480 with 1 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "data": {
      "image/png": "",
      "text/plain": [
       "<Figure size 500x500 with 1 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "(1049, 4)\n",
      "(1, 4)\n",
      "(7, 4)\n"
     ]
    },
    {
     "data": {
      "image/png": "",
      "text/plain": [
       "<Figure size 640x480 with 1 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "data": {
      "image/png": "",
      "text/plain": [
       "<Figure size 500x500 with 1 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "(533, 5)\n",
      "(494, 5)\n",
      "(22, 5)\n"
     ]
    },
    {
     "data": {
      "text/plain": [
       "[     CustomerID                                        Description\n",
       " 0             6  [CERAMIC CAKE STAND + HANGING CAKES, MINI CAKE...\n",
       " 1             8  [GROW A FLYTRAP OR SUNFLOWER IN TIN, ICE CREAM...\n",
       " 2            13  [SET/6 RED SPOTTY PAPER PLATES, SET/6 RED SPOT...\n",
       " 3            22  [DOLLY GIRL LUNCH BOX, WRAP CAROUSEL, WRAP PIN...\n",
       " 4            38  [SPACEBOY LUNCH BOX , PLASTERS IN TIN SPACEBOY...\n",
       " ..          ...                                                ...\n",
       " 489        2178  [CHILDRENS CUTLERY POLKADOT PINK, CHILDRENS CU...\n",
       " 490        2211  [SPOTTY BUNTING, TEA TIME PARTY BUNTING, PARTY...\n",
       " 491        2223  [BIRD DECORATION GREEN POLKADOT, SINGLE ANTIQU...\n",
       " 492        2307  [ SET 2 TEA TOWELS I LOVE LONDON , TREASURE IS...\n",
       " 493        2512                      [WOODEN ROUNDERS GARDEN SET ]\n",
       " \n",
       " [494 rows x 2 columns],\n",
       "      CustomerID                                        Description\n",
       " 0          1898  [BLUE HAPPY BIRTHDAY BUNTING, PINK HAPPY BIRTH...\n",
       " 1          1931  [SILVER HEARTS TABLE DECORATION, PLASTERS IN T...\n",
       " 2          1938  [RETROSPOT TEA SET CERAMIC 11 PC , PHOTO CUBE,...\n",
       " 3          1949  [SPACEBOY CHILDRENS EGG CUP, WHITE HANGING BEA...\n",
       " 4          1955  [HEART IVORY TRELLIS SMALL, HEART FILIGREE DOV...\n",
       " ..          ...                                                ...\n",
       " 528        4299  [YOU'RE CONFUSING ME METAL SIGN , VINYL RECORD...\n",
       " 529        4300  [DOORMAT UNION FLAG, DOORMAT KEEP CALM AND COM...\n",
       " 530        4301  [NATURAL SLATE HEART CHALKBOARD , LOCAL CAFE M...\n",
       " 531        4303  [60 CAKE CASES DOLLY GIRL DESIGN, HANGING HEAR...\n",
       " 532        4306  [SET 12 LAVENDER  BOTANICAL T-LIGHTS, CITRONEL...\n",
       " \n",
       " [533 rows x 2 columns]]"
      ]
     },
     "execution_count": 119,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "pca = PCA(n_components = 3)\n",
    "pca.fit(X = dvt_may2011)\n",
    "new_dvt = pca.transform(dvt_may2011)\n",
    "\n",
    "new_dvt = pd.DataFrame(data = new_dvt,columns = ['X0','X1','X2'])\n",
    "model = AgglomerativeClustering(distance_threshold=0, n_clusters=None, linkage='ward').fit(new_dvt)\n",
    "\n",
    "plot_dendrogram(model, truncate_mode=\"level\", p=4)\n",
    "\n",
    "dict_may2011 =  Agglocls(new_dvt,3)\n",
    "\n",
    "final_dvt_may2011 = dict_may2011[0]\n",
    "pca_may2011 = PCA(n_components = 3)\n",
    "pca_may2011.fit(X = final_dvt_may2011)\n",
    "final_dvt_may2011 = pca_may2011.transform(final_dvt_may2011)\n",
    "final_dvt_may2011 = pd.DataFrame(data = final_dvt_may2011,columns = ['X0','X1','X2'])\n",
    "AggloDendo(final_dvt_may2011)\n",
    "\n",
    "dict_may2011_final =  AggloPca(final_dvt_may2011,3,dvt_may2011,'X0','X2')\n",
    "\n",
    "may2011_agg = descrip_dict(og_may2011,final_dvt_may2011)\n",
    "may2011_agg = processlis(may2011_agg)\n",
    "may2011_agg\n",
    "\n",
    "\n",
    "#apr2011 = processlis(apr2011)\n",
    "#apr2011_agg = processlis(apr2011_agg)\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {
    "id": "V60zjIsiwfED"
   },
   "outputs": [],
   "source": [
    "Cluster_dict['may2011'] = (len(may2011),len(may2011_agg))\n",
    "dicti_2011may = {}\n",
    "klis = []\n",
    "for i in range(Cluster_dict['may2011'][0]):\n",
    "  temp = apriori_rules(may2011[i],0.075)\n",
    "  klis.append(temp)\n",
    "alis = []\n",
    "for i in range(Cluster_dict['may2011'][1]):\n",
    "  temp = apriori_rules(may2011_agg[i],0.075)\n",
    "  alis.append(temp)\n",
    "#apriori_rules(1_agg[0],0.075)\n",
    "dicti_2011may['K-means'] = klis\n",
    "dicti_2011may['Agglo'] = alis\n",
    "\n",
    "Rules_dict['may2011'] = dicti_2011may"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {
    "id": "1YqUumCX5WQi"
   },
   "source": [
    "## For June 2011"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {
    "colab": {
     "base_uri": "https://localhost:8080/",
     "height": 424
    },
    "collapsed": true,
    "id": "N0yZru705WHJ",
    "outputId": "b523388b-a9c2-406f-c15b-e53fa160edc3"
   },
   "outputs": [
    {
     "data": {
      "text/html": [
       "\n",
       "  <div id=\"df-02a01f34-dee3-49d9-9444-cad19a821494\">\n",
       "    <div class=\"colab-df-container\">\n",
       "      <div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>InvoiceNo</th>\n",
       "      <th>StockCode</th>\n",
       "      <th>Description</th>\n",
       "      <th>Quantity</th>\n",
       "      <th>UnitPrice</th>\n",
       "      <th>CustomerID</th>\n",
       "      <th>Country</th>\n",
       "      <th>time_intervals</th>\n",
       "      <th>Total Price</th>\n",
       "      <th>Money_bins</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>209029</th>\n",
       "      <td>555156</td>\n",
       "      <td>23299</td>\n",
       "      <td>FOOD COVER WITH BEADS SET 2</td>\n",
       "      <td>6</td>\n",
       "      <td>3.75</td>\n",
       "      <td>2422</td>\n",
       "      <td>United Kingdom</td>\n",
       "      <td>04:00-07:59</td>\n",
       "      <td>22.50</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>209030</th>\n",
       "      <td>555156</td>\n",
       "      <td>22847</td>\n",
       "      <td>BREAD BIN DINER STYLE IVORY</td>\n",
       "      <td>1</td>\n",
       "      <td>16.95</td>\n",
       "      <td>2422</td>\n",
       "      <td>United Kingdom</td>\n",
       "      <td>04:00-07:59</td>\n",
       "      <td>16.95</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>209031</th>\n",
       "      <td>555157</td>\n",
       "      <td>23075</td>\n",
       "      <td>PARLOUR CERAMIC WALL HOOK</td>\n",
       "      <td>16</td>\n",
       "      <td>4.15</td>\n",
       "      <td>2422</td>\n",
       "      <td>United Kingdom</td>\n",
       "      <td>04:00-07:59</td>\n",
       "      <td>66.40</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>209032</th>\n",
       "      <td>555157</td>\n",
       "      <td>47590B</td>\n",
       "      <td>PINK HAPPY BIRTHDAY BUNTING</td>\n",
       "      <td>6</td>\n",
       "      <td>5.45</td>\n",
       "      <td>2422</td>\n",
       "      <td>United Kingdom</td>\n",
       "      <td>04:00-07:59</td>\n",
       "      <td>32.70</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>209033</th>\n",
       "      <td>555157</td>\n",
       "      <td>22423</td>\n",
       "      <td>REGENCY CAKESTAND 3 TIER</td>\n",
       "      <td>4</td>\n",
       "      <td>12.75</td>\n",
       "      <td>2422</td>\n",
       "      <td>United Kingdom</td>\n",
       "      <td>04:00-07:59</td>\n",
       "      <td>51.00</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>...</th>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>245898</th>\n",
       "      <td>558637</td>\n",
       "      <td>22032</td>\n",
       "      <td>BOTANICAL LILY GREETING CARD</td>\n",
       "      <td>12</td>\n",
       "      <td>0.42</td>\n",
       "      <td>4051</td>\n",
       "      <td>United Kingdom</td>\n",
       "      <td>16:00-19:59</td>\n",
       "      <td>5.04</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>245899</th>\n",
       "      <td>558637</td>\n",
       "      <td>22028</td>\n",
       "      <td>PENNY FARTHING BIRTHDAY CARD</td>\n",
       "      <td>12</td>\n",
       "      <td>0.42</td>\n",
       "      <td>4051</td>\n",
       "      <td>United Kingdom</td>\n",
       "      <td>16:00-19:59</td>\n",
       "      <td>5.04</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>245900</th>\n",
       "      <td>558637</td>\n",
       "      <td>22033</td>\n",
       "      <td>BOTANICAL ROSE GREETING CARD</td>\n",
       "      <td>12</td>\n",
       "      <td>0.42</td>\n",
       "      <td>4051</td>\n",
       "      <td>United Kingdom</td>\n",
       "      <td>16:00-19:59</td>\n",
       "      <td>5.04</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>245901</th>\n",
       "      <td>558637</td>\n",
       "      <td>22029</td>\n",
       "      <td>SPACEBOY BIRTHDAY CARD</td>\n",
       "      <td>12</td>\n",
       "      <td>0.42</td>\n",
       "      <td>4051</td>\n",
       "      <td>United Kingdom</td>\n",
       "      <td>16:00-19:59</td>\n",
       "      <td>5.04</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>245902</th>\n",
       "      <td>558637</td>\n",
       "      <td>22024</td>\n",
       "      <td>RAINY LADIES BIRTHDAY CARD</td>\n",
       "      <td>12</td>\n",
       "      <td>0.42</td>\n",
       "      <td>4051</td>\n",
       "      <td>United Kingdom</td>\n",
       "      <td>16:00-19:59</td>\n",
       "      <td>5.04</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "<p>36056 rows × 10 columns</p>\n",
       "</div>\n",
       "      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-02a01f34-dee3-49d9-9444-cad19a821494')\"\n",
       "              title=\"Convert this dataframe to an interactive table.\"\n",
       "              style=\"display:none;\">\n",
       "        \n",
       "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
       "       width=\"24px\">\n",
       "    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n",
       "    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n",
       "  </svg>\n",
       "      </button>\n",
       "      \n",
       "  <style>\n",
       "    .colab-df-container {\n",
       "      display:flex;\n",
       "      flex-wrap:wrap;\n",
       "      gap: 12px;\n",
       "    }\n",
       "\n",
       "    .colab-df-convert {\n",
       "      background-color: #E8F0FE;\n",
       "      border: none;\n",
       "      border-radius: 50%;\n",
       "      cursor: pointer;\n",
       "      display: none;\n",
       "      fill: #1967D2;\n",
       "      height: 32px;\n",
       "      padding: 0 0 0 0;\n",
       "      width: 32px;\n",
       "    }\n",
       "\n",
       "    .colab-df-convert:hover {\n",
       "      background-color: #E2EBFA;\n",
       "      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
       "      fill: #174EA6;\n",
       "    }\n",
       "\n",
       "    [theme=dark] .colab-df-convert {\n",
       "      background-color: #3B4455;\n",
       "      fill: #D2E3FC;\n",
       "    }\n",
       "\n",
       "    [theme=dark] .colab-df-convert:hover {\n",
       "      background-color: #434B5C;\n",
       "      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
       "      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
       "      fill: #FFFFFF;\n",
       "    }\n",
       "  </style>\n",
       "\n",
       "      <script>\n",
       "        const buttonEl =\n",
       "          document.querySelector('#df-02a01f34-dee3-49d9-9444-cad19a821494 button.colab-df-convert');\n",
       "        buttonEl.style.display =\n",
       "          google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
       "\n",
       "        async function convertToInteractive(key) {\n",
       "          const element = document.querySelector('#df-02a01f34-dee3-49d9-9444-cad19a821494');\n",
       "          const dataTable =\n",
       "            await google.colab.kernel.invokeFunction('convertToInteractive',\n",
       "                                                     [key], {});\n",
       "          if (!dataTable) return;\n",
       "\n",
       "          const docLinkHtml = 'Like what you see? Visit the ' +\n",
       "            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n",
       "            + ' to learn more about interactive tables.';\n",
       "          element.innerHTML = '';\n",
       "          dataTable['output_type'] = 'display_data';\n",
       "          await google.colab.output.renderOutput(dataTable, element);\n",
       "          const docLink = document.createElement('div');\n",
       "          docLink.innerHTML = docLinkHtml;\n",
       "          element.appendChild(docLink);\n",
       "        }\n",
       "      </script>\n",
       "    </div>\n",
       "  </div>\n",
       "  "
      ],
      "text/plain": [
       "       InvoiceNo StockCode                   Description  Quantity  UnitPrice  \\\n",
       "209029    555156     23299  FOOD COVER WITH BEADS SET 2          6       3.75   \n",
       "209030    555156     22847   BREAD BIN DINER STYLE IVORY         1      16.95   \n",
       "209031    555157     23075     PARLOUR CERAMIC WALL HOOK        16       4.15   \n",
       "209032    555157    47590B   PINK HAPPY BIRTHDAY BUNTING         6       5.45   \n",
       "209033    555157     22423      REGENCY CAKESTAND 3 TIER         4      12.75   \n",
       "...          ...       ...                           ...       ...        ...   \n",
       "245898    558637     22032  BOTANICAL LILY GREETING CARD        12       0.42   \n",
       "245899    558637     22028  PENNY FARTHING BIRTHDAY CARD        12       0.42   \n",
       "245900    558637     22033  BOTANICAL ROSE GREETING CARD        12       0.42   \n",
       "245901    558637     22029        SPACEBOY BIRTHDAY CARD        12       0.42   \n",
       "245902    558637     22024    RAINY LADIES BIRTHDAY CARD        12       0.42   \n",
       "\n",
       "        CustomerID         Country time_intervals  Total Price  Money_bins  \n",
       "209029        2422  United Kingdom    04:00-07:59        22.50           0  \n",
       "209030        2422  United Kingdom    04:00-07:59        16.95           0  \n",
       "209031        2422  United Kingdom    04:00-07:59        66.40           0  \n",
       "209032        2422  United Kingdom    04:00-07:59        32.70           0  \n",
       "209033        2422  United Kingdom    04:00-07:59        51.00           0  \n",
       "...            ...             ...            ...          ...         ...  \n",
       "245898        4051  United Kingdom    16:00-19:59         5.04           0  \n",
       "245899        4051  United Kingdom    16:00-19:59         5.04           0  \n",
       "245900        4051  United Kingdom    16:00-19:59         5.04           0  \n",
       "245901        4051  United Kingdom    16:00-19:59         5.04           0  \n",
       "245902        4051  United Kingdom    16:00-19:59         5.04           0  \n",
       "\n",
       "[36056 rows x 10 columns]"
      ]
     },
     "execution_count": 121,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "og_jun2011 = df_list_month_intervals[6]\n",
    "og_jun2011"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {
    "colab": {
     "base_uri": "https://localhost:8080/",
     "height": 424
    },
    "collapsed": true,
    "id": "iyFTsxN25dmP",
    "outputId": "68d32463-7c27-415b-e73e-46a05856979f"
   },
   "outputs": [
    {
     "data": {
      "text/html": [
       "\n",
       "  <div id=\"df-7cf30c16-93bd-4c52-b406-51b5c0dcb9cc\">\n",
       "    <div class=\"colab-df-container\">\n",
       "      <div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>No. of visits</th>\n",
       "      <th>Mean_purch</th>\n",
       "      <th>Sum_purch</th>\n",
       "      <th>Item_count</th>\n",
       "      <th>Total_quantity</th>\n",
       "      <th>Avg_quant</th>\n",
       "      <th>CustomerID</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>1</td>\n",
       "      <td>21.251111</td>\n",
       "      <td>382.52</td>\n",
       "      <td>18</td>\n",
       "      <td>196</td>\n",
       "      <td>10.888889</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>1</td>\n",
       "      <td>23.602553</td>\n",
       "      <td>1109.32</td>\n",
       "      <td>47</td>\n",
       "      <td>356</td>\n",
       "      <td>7.574468</td>\n",
       "      <td>12</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>1</td>\n",
       "      <td>22.992000</td>\n",
       "      <td>459.84</td>\n",
       "      <td>20</td>\n",
       "      <td>211</td>\n",
       "      <td>10.550000</td>\n",
       "      <td>28</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>1</td>\n",
       "      <td>16.876389</td>\n",
       "      <td>607.55</td>\n",
       "      <td>36</td>\n",
       "      <td>293</td>\n",
       "      <td>8.138889</td>\n",
       "      <td>29</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>1</td>\n",
       "      <td>19.890000</td>\n",
       "      <td>99.45</td>\n",
       "      <td>5</td>\n",
       "      <td>20</td>\n",
       "      <td>4.000000</td>\n",
       "      <td>31</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>...</th>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>987</th>\n",
       "      <td>1</td>\n",
       "      <td>21.440000</td>\n",
       "      <td>214.40</td>\n",
       "      <td>10</td>\n",
       "      <td>92</td>\n",
       "      <td>9.200000</td>\n",
       "      <td>4318</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>988</th>\n",
       "      <td>1</td>\n",
       "      <td>18.570870</td>\n",
       "      <td>427.13</td>\n",
       "      <td>23</td>\n",
       "      <td>177</td>\n",
       "      <td>7.695652</td>\n",
       "      <td>4320</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>989</th>\n",
       "      <td>1</td>\n",
       "      <td>11.545714</td>\n",
       "      <td>80.82</td>\n",
       "      <td>7</td>\n",
       "      <td>54</td>\n",
       "      <td>7.714286</td>\n",
       "      <td>4335</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>990</th>\n",
       "      <td>2</td>\n",
       "      <td>2.770541</td>\n",
       "      <td>307.53</td>\n",
       "      <td>77</td>\n",
       "      <td>209</td>\n",
       "      <td>1.882883</td>\n",
       "      <td>4337</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>991</th>\n",
       "      <td>183</td>\n",
       "      <td>11.332004</td>\n",
       "      <td>100526.21</td>\n",
       "      <td>1904</td>\n",
       "      <td>30638</td>\n",
       "      <td>3.453726</td>\n",
       "      <td>4339</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "<p>992 rows × 7 columns</p>\n",
       "</div>\n",
       "      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-7cf30c16-93bd-4c52-b406-51b5c0dcb9cc')\"\n",
       "              title=\"Convert this dataframe to an interactive table.\"\n",
       "              style=\"display:none;\">\n",
       "        \n",
       "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
       "       width=\"24px\">\n",
       "    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n",
       "    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n",
       "  </svg>\n",
       "      </button>\n",
       "      \n",
       "  <style>\n",
       "    .colab-df-container {\n",
       "      display:flex;\n",
       "      flex-wrap:wrap;\n",
       "      gap: 12px;\n",
       "    }\n",
       "\n",
       "    .colab-df-convert {\n",
       "      background-color: #E8F0FE;\n",
       "      border: none;\n",
       "      border-radius: 50%;\n",
       "      cursor: pointer;\n",
       "      display: none;\n",
       "      fill: #1967D2;\n",
       "      height: 32px;\n",
       "      padding: 0 0 0 0;\n",
       "      width: 32px;\n",
       "    }\n",
       "\n",
       "    .colab-df-convert:hover {\n",
       "      background-color: #E2EBFA;\n",
       "      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
       "      fill: #174EA6;\n",
       "    }\n",
       "\n",
       "    [theme=dark] .colab-df-convert {\n",
       "      background-color: #3B4455;\n",
       "      fill: #D2E3FC;\n",
       "    }\n",
       "\n",
       "    [theme=dark] .colab-df-convert:hover {\n",
       "      background-color: #434B5C;\n",
       "      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
       "      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
       "      fill: #FFFFFF;\n",
       "    }\n",
       "  </style>\n",
       "\n",
       "      <script>\n",
       "        const buttonEl =\n",
       "          document.querySelector('#df-7cf30c16-93bd-4c52-b406-51b5c0dcb9cc button.colab-df-convert');\n",
       "        buttonEl.style.display =\n",
       "          google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
       "\n",
       "        async function convertToInteractive(key) {\n",
       "          const element = document.querySelector('#df-7cf30c16-93bd-4c52-b406-51b5c0dcb9cc');\n",
       "          const dataTable =\n",
       "            await google.colab.kernel.invokeFunction('convertToInteractive',\n",
       "                                                     [key], {});\n",
       "          if (!dataTable) return;\n",
       "\n",
       "          const docLinkHtml = 'Like what you see? Visit the ' +\n",
       "            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n",
       "            + ' to learn more about interactive tables.';\n",
       "          element.innerHTML = '';\n",
       "          dataTable['output_type'] = 'display_data';\n",
       "          await google.colab.output.renderOutput(dataTable, element);\n",
       "          const docLink = document.createElement('div');\n",
       "          docLink.innerHTML = docLinkHtml;\n",
       "          element.appendChild(docLink);\n",
       "        }\n",
       "      </script>\n",
       "    </div>\n",
       "  </div>\n",
       "  "
      ],
      "text/plain": [
       "     No. of visits  Mean_purch  Sum_purch  Item_count  Total_quantity  \\\n",
       "0                1   21.251111     382.52          18             196   \n",
       "1                1   23.602553    1109.32          47             356   \n",
       "2                1   22.992000     459.84          20             211   \n",
       "3                1   16.876389     607.55          36             293   \n",
       "4                1   19.890000      99.45           5              20   \n",
       "..             ...         ...        ...         ...             ...   \n",
       "987              1   21.440000     214.40          10              92   \n",
       "988              1   18.570870     427.13          23             177   \n",
       "989              1   11.545714      80.82           7              54   \n",
       "990              2    2.770541     307.53          77             209   \n",
       "991            183   11.332004  100526.21        1904           30638   \n",
       "\n",
       "     Avg_quant  CustomerID  \n",
       "0    10.888889           1  \n",
       "1     7.574468          12  \n",
       "2    10.550000          28  \n",
       "3     8.138889          29  \n",
       "4     4.000000          31  \n",
       "..         ...         ...  \n",
       "987   9.200000        4318  \n",
       "988   7.695652        4320  \n",
       "989   7.714286        4335  \n",
       "990   1.882883        4337  \n",
       "991   3.453726        4339  \n",
       "\n",
       "[992 rows x 7 columns]"
      ]
     },
     "execution_count": 122,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "dvt_jun2011= person_df(og_jun2011) #Our function gives such a dataframe\n",
    "#By which we can form clusters using KMeans\n",
    "dvt_jun2011"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {
    "colab": {
     "base_uri": "https://localhost:8080/",
     "height": 478
    },
    "collapsed": true,
    "id": "hFgcdT2a5i51",
    "outputId": "c5438c15-bcb6-4978-f7ff-0738909db558"
   },
   "outputs": [
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "/usr/local/lib/python3.9/dist-packages/sklearn/cluster/_kmeans.py:870: FutureWarning: The default value of `n_init` will change from 10 to 'auto' in 1.4. Set the value of `n_init` explicitly to suppress the warning\n",
      "  warnings.warn(\n"
     ]
    },
    {
     "data": {
      "text/html": [
       "\n",
       "  <div id=\"df-86d35e90-0a05-4f5b-bcb0-d53e1214bf20\">\n",
       "    <div class=\"colab-df-container\">\n",
       "      <div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>No. of visits</th>\n",
       "      <th>Mean_purch</th>\n",
       "      <th>Sum_purch</th>\n",
       "      <th>Item_count</th>\n",
       "      <th>Total_quantity</th>\n",
       "      <th>Avg_quant</th>\n",
       "      <th>CustomerID</th>\n",
       "      <th>cluster_labels</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>1</td>\n",
       "      <td>21.251111</td>\n",
       "      <td>382.52</td>\n",
       "      <td>18</td>\n",
       "      <td>196</td>\n",
       "      <td>10.888889</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>1</td>\n",
       "      <td>23.602553</td>\n",
       "      <td>1109.32</td>\n",
       "      <td>47</td>\n",
       "      <td>356</td>\n",
       "      <td>7.574468</td>\n",
       "      <td>12</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>1</td>\n",
       "      <td>22.992000</td>\n",
       "      <td>459.84</td>\n",
       "      <td>20</td>\n",
       "      <td>211</td>\n",
       "      <td>10.550000</td>\n",
       "      <td>28</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>1</td>\n",
       "      <td>16.876389</td>\n",
       "      <td>607.55</td>\n",
       "      <td>36</td>\n",
       "      <td>293</td>\n",
       "      <td>8.138889</td>\n",
       "      <td>29</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>1</td>\n",
       "      <td>19.890000</td>\n",
       "      <td>99.45</td>\n",
       "      <td>5</td>\n",
       "      <td>20</td>\n",
       "      <td>4.000000</td>\n",
       "      <td>31</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>...</th>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>987</th>\n",
       "      <td>1</td>\n",
       "      <td>21.440000</td>\n",
       "      <td>214.40</td>\n",
       "      <td>10</td>\n",
       "      <td>92</td>\n",
       "      <td>9.200000</td>\n",
       "      <td>4318</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>988</th>\n",
       "      <td>1</td>\n",
       "      <td>18.570870</td>\n",
       "      <td>427.13</td>\n",
       "      <td>23</td>\n",
       "      <td>177</td>\n",
       "      <td>7.695652</td>\n",
       "      <td>4320</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>989</th>\n",
       "      <td>1</td>\n",
       "      <td>11.545714</td>\n",
       "      <td>80.82</td>\n",
       "      <td>7</td>\n",
       "      <td>54</td>\n",
       "      <td>7.714286</td>\n",
       "      <td>4335</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>990</th>\n",
       "      <td>2</td>\n",
       "      <td>2.770541</td>\n",
       "      <td>307.53</td>\n",
       "      <td>77</td>\n",
       "      <td>209</td>\n",
       "      <td>1.882883</td>\n",
       "      <td>4337</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>991</th>\n",
       "      <td>183</td>\n",
       "      <td>11.332004</td>\n",
       "      <td>100526.21</td>\n",
       "      <td>1904</td>\n",
       "      <td>30638</td>\n",
       "      <td>3.453726</td>\n",
       "      <td>4339</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "<p>992 rows × 8 columns</p>\n",
       "</div>\n",
       "      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-86d35e90-0a05-4f5b-bcb0-d53e1214bf20')\"\n",
       "              title=\"Convert this dataframe to an interactive table.\"\n",
       "              style=\"display:none;\">\n",
       "        \n",
       "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
       "       width=\"24px\">\n",
       "    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n",
       "    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n",
       "  </svg>\n",
       "      </button>\n",
       "      \n",
       "  <style>\n",
       "    .colab-df-container {\n",
       "      display:flex;\n",
       "      flex-wrap:wrap;\n",
       "      gap: 12px;\n",
       "    }\n",
       "\n",
       "    .colab-df-convert {\n",
       "      background-color: #E8F0FE;\n",
       "      border: none;\n",
       "      border-radius: 50%;\n",
       "      cursor: pointer;\n",
       "      display: none;\n",
       "      fill: #1967D2;\n",
       "      height: 32px;\n",
       "      padding: 0 0 0 0;\n",
       "      width: 32px;\n",
       "    }\n",
       "\n",
       "    .colab-df-convert:hover {\n",
       "      background-color: #E2EBFA;\n",
       "      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
       "      fill: #174EA6;\n",
       "    }\n",
       "\n",
       "    [theme=dark] .colab-df-convert {\n",
       "      background-color: #3B4455;\n",
       "      fill: #D2E3FC;\n",
       "    }\n",
       "\n",
       "    [theme=dark] .colab-df-convert:hover {\n",
       "      background-color: #434B5C;\n",
       "      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
       "      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
       "      fill: #FFFFFF;\n",
       "    }\n",
       "  </style>\n",
       "\n",
       "      <script>\n",
       "        const buttonEl =\n",
       "          document.querySelector('#df-86d35e90-0a05-4f5b-bcb0-d53e1214bf20 button.colab-df-convert');\n",
       "        buttonEl.style.display =\n",
       "          google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
       "\n",
       "        async function convertToInteractive(key) {\n",
       "          const element = document.querySelector('#df-86d35e90-0a05-4f5b-bcb0-d53e1214bf20');\n",
       "          const dataTable =\n",
       "            await google.colab.kernel.invokeFunction('convertToInteractive',\n",
       "                                                     [key], {});\n",
       "          if (!dataTable) return;\n",
       "\n",
       "          const docLinkHtml = 'Like what you see? Visit the ' +\n",
       "            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n",
       "            + ' to learn more about interactive tables.';\n",
       "          element.innerHTML = '';\n",
       "          dataTable['output_type'] = 'display_data';\n",
       "          await google.colab.output.renderOutput(dataTable, element);\n",
       "          const docLink = document.createElement('div');\n",
       "          docLink.innerHTML = docLinkHtml;\n",
       "          element.appendChild(docLink);\n",
       "        }\n",
       "      </script>\n",
       "    </div>\n",
       "  </div>\n",
       "  "
      ],
      "text/plain": [
       "     No. of visits  Mean_purch  Sum_purch  Item_count  Total_quantity  \\\n",
       "0                1   21.251111     382.52          18             196   \n",
       "1                1   23.602553    1109.32          47             356   \n",
       "2                1   22.992000     459.84          20             211   \n",
       "3                1   16.876389     607.55          36             293   \n",
       "4                1   19.890000      99.45           5              20   \n",
       "..             ...         ...        ...         ...             ...   \n",
       "987              1   21.440000     214.40          10              92   \n",
       "988              1   18.570870     427.13          23             177   \n",
       "989              1   11.545714      80.82           7              54   \n",
       "990              2    2.770541     307.53          77             209   \n",
       "991            183   11.332004  100526.21        1904           30638   \n",
       "\n",
       "     Avg_quant  CustomerID  cluster_labels  \n",
       "0    10.888889           1               0  \n",
       "1     7.574468          12               0  \n",
       "2    10.550000          28               0  \n",
       "3     8.138889          29               0  \n",
       "4     4.000000          31               0  \n",
       "..         ...         ...             ...  \n",
       "987   9.200000        4318               0  \n",
       "988   7.695652        4320               0  \n",
       "989   7.714286        4335               0  \n",
       "990   1.882883        4337               0  \n",
       "991   3.453726        4339               1  \n",
       "\n",
       "[992 rows x 8 columns]"
      ]
     },
     "execution_count": 123,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "df_jun2011 = df_cluster_labels(dvt_jun2011,3)\n",
    "df_jun2011"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {
    "colab": {
     "base_uri": "https://localhost:8080/"
    },
    "id": "B6kd6-pGn7by",
    "outputId": "58580e17-11c7-4010-b404-3b58c5206fb3"
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "The Silhouette Score is :- 0.942123363502381\n"
     ]
    }
   ],
   "source": [
    "silhte_score_jun2011 = silhouette_score(dvt_jun2011, df_jun2011['cluster_labels'])\n",
    "print(\"The Silhouette Score is :- \"+str(silhte_score_jun2011))"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {
    "colab": {
     "base_uri": "https://localhost:8080/"
    },
    "collapsed": true,
    "id": "QDxM9EZ85v5P",
    "outputId": "1bc6868a-ec6e-4f42-c075-e0dc233af62f"
   },
   "outputs": [
    {
     "data": {
      "text/plain": [
       "0    986\n",
       "2      5\n",
       "1      1\n",
       "Name: cluster_labels, dtype: int64"
      ]
     },
     "execution_count": 125,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "df_jun2011['cluster_labels'].value_counts()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {
    "colab": {
     "base_uri": "https://localhost:8080/",
     "height": 472
    },
    "collapsed": true,
    "id": "Nejx-VzE51LK",
    "outputId": "7cbe008f-88fb-441f-e7c7-3c0c49f0d44e"
   },
   "outputs": [
    {
     "data": {
      "image/png": "iVBORw0KGgoAAAANSUhEUgAAAlYAAAHHCAYAAAB9dxZkAAAAOXRFWHRTb2Z0d2FyZQBNYXRwbG90bGliIHZlcnNpb24zLjcuMSwgaHR0cHM6Ly9tYXRwbG90bGliLm9yZy/bCgiHAAAACXBIWXMAAA9hAAAPYQGoP6dpAABIoklEQVR4nO3deVxWdd7/8fdhuwAVcAVUVEzT3HcirX6NFJUzaXvcTpnZ4laZZeqU2dRdMlrdjWXacpc2pZaTbW5FuKUSlvsWOaOpqYCmgCayXd/fH96c8QoXwAN4wev5eFwPub7fz3XO5xwecr0f5zrnXJYxxggAAAAXzKeqGwAAAKguCFYAAAAOIVgBAAA4hGAFAADgEIIVAACAQwhWAAAADiFYAQAAOIRgBQAA4BCCFQAAgEMIVgAAAA4hWAGoNDNnzpRlWWd8jBs3rkLXvXz5clmWpX/+858Vup4LceLECU2bNk3XXXedIiMjVadOHXXt2lXTp09XUVFRiXq3263JkycrOjpagYGB6tSpk+bMmVOibu3atRo+fLi6d+8uf39/WZZ11h6mT5+u22+/Xc2aNZNlWbr33nud3ESg2vOr6gYA1DzPPfecoqOjPcY6dOhQRd1cPHbt2qWHH35Yffv21ejRoxUSEqKvvvpKw4cP13fffadZs2Z51D/11FNKTEzUAw88oJ49e+rzzz/Xf/3Xf8myLN1111123aJFi/TOO++oU6dOatmypX766aez9vC3v/1Nx44dU69evXTw4MEK21ag2jIAUEnee+89I8l8//33FbL848ePn3Vu2bJlRpKZN29ehazbCYcOHTJbt24tMT548GAjyezcudMe++WXX4y/v78ZMWKEPeZ2u82VV15pmjZtagoLC+3x9PR0c+LECWOMMSNGjDDn+tP/888/G7fbbYwxplatWmbQoEEXullAjcJHgQAuOkuXLtWVV16pWrVqKSwsTP3799eOHTs8ap599llZlqXt27frv/7rv1S3bl316dOnTOu599571aJFixLjxcs+nWVZGjlypD777DN16NBBLpdL7du315IlS0q8fv/+/brvvvsUHh5u17377rvn7adBgwZq3759ifGbb75Zkjz2weeff66CggINHz7co8dhw4bpl19+UUpKij0eHh6uoKCg865fkpo3b37OjwoBnBsfBQKodNnZ2Tp8+LDHWIMG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t99+U+fOnTVt2rQzzk+ePFlTp07VjBkzlJqaqlq1aik+Pl4nT560awYOHKht27YpKSlJCxYs0MqVK/Xggw/a8zk5ObruuuvUvHlzrVu3TlOmTNGzzz6rt956y65Zs2aNEhISNGTIEG3YsEEDBgzQgAEDtHXr1jL1Upne37xBPuf4Mkhfy9LsrZsqsSMAAGAZY8z5yyqeZVn69NNPNWDAAEmnjhA1btxYjz/+uJ544glJUnZ2tsLDwzVz5kzddddd2rFjh9q1a6fvv/9ePXr0kCQtWbJEN954o3755Rc1btxY06dP11NPPaX09HQFBARIksaNG6fPPvtMP/74oyTpzjvv1G+//aYFCxbY/Vx++eXq0qWLZsyYUapeSiMnJ0ehoaHKzs5WSEjIBe2v9m9MVW7huU9W79W4qebeducFrQcAgJquLO/fF+05Vrt371Z6erri4uLssdDQUMXExCglJUWSlJKSorCwMDtUSVJcXJx8fHyUmppq11x11VV2qJKk+Ph4paWl6ejRo3bN6esprileT2l6qWyBfr7nnLckBflzbQIAAJXpog1W6enpkqTw8HCP8fDwcHsuPT1djRo18pj38/NTvXr1PGrOtIzT13G2mtPnz9fLmeTl5SknJ8fj4ZTrW10q33N8FGgkxV/S2rH1AQCA87tog1V1MGnSJIWGhtqPqKgox5Z9X5du8vXxkaWS4crXshRRq7ZuanOZY+sDAADnd9EGq4iICElSRkaGx3hGRoY9FxERoczMTI/5wsJCHTlyxKPmTMs4fR1nqzl9/ny9nMn48eOVnZ1tP/bt23eerS69S+rV1zt/ulnB/v6SToUpP+vUrzOydh19cMvt9hwAAKgcF22wio6OVkREhJKTk+2xnJwcpaamKjY2VpIUGxurrKwsrVu3zq5ZunSp3G63YmJi7JqVK1eq4LS7kiclJalNmzaqW7euXXP6eopritdTml7OxOVyKSQkxOPhpD7NmitlyEP672vidPNl7XRbu/aaduOflHzPfWpZt56j6wIAAKVgqtCxY8fMhg0bzIYNG4wk88orr5gNGzaYPXv2GGOMSUxMNGFhYebzzz83mzdvNv379zfR0dEmNzfXXsb1119vunbtalJTU82qVatM69atTUJCgj2flZVlwsPDzd133222bt1q5s6da4KDg82bb75p16xevdr4+fmZl156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NGvWLElSenq6JCk8PNzjdeHh4fZcenq6GjVq5DHv5+enevXqedScaRmnr+NsNcXzZzJp0iSFhobaj6ioqDJtPwAA8C7lClbx8fEeJ5BXFLfbrW7duunFF19U165d9eCDD+qBBx7QjBkzKnzdThg/fryys7Ptx759+6q6JQAAUIFKffL6F198Yf/cr18/jRkzRtu3b1fHjh3l7+/vUXvTTTc50lxkZKTatWvnMXbZZZfpk08+kSRFRERIkjIyMhQZGWnXZGRkqEuXLnZNZmamxzIKCwt15MgR+/URERHKyMjwqCl+fr6a4vkzcblccrlcpdpWAADg/UodrAYMGFBi7LnnnisxZlmWioqKLqipYr1791ZaWprH2E8//aTmzZtLkqKjoxUREaHk5GQ7SOXk5Cg1NVXDhg2TJMXGxiorK0vr1q1T9+7dJUlLly6V2+1WTEyMXfPUU0+poKDADolJSUlq06aNfQVibGyskpOTNWrUKLuXpKQkxcbGOrKtAACgGqiEk+nLbe3atcbPz8+88MILZufOnebDDz80wcHB5oMPPrBrEhMTTVhYmPn888/N5s2bTf/+/U10dLTJzc21a66//nrTtWtXk5qaalatWmVat25tEhIS7PmsrCwTHh5u7r77brN161Yzd+5cExwcbN588027ZvXq1cbPz8+89NJLZseOHWbixInG39/fbNmypdTbw1WBAAB4n7K8f1/UwcoYY7788kvToUMH43K5TNu2bc1bb73lMe92u82ECRNMeHi4cblcpm/fviYtLc2j5tdffzUJCQmmdu3aJiQkxAwePNgcO3bMo2bTpk2mT58+xuVymSZNmpjExMQSvXz88cfm0ksvNQEBAaZ9+/Zm4cKFZdoWghUAAN6nLO/fljHGlPUo1yOPPKJWrVrpkUce8Rh//fXX9a9//UuvvvqqEwfTqp2cnByFhoYqOztbISEhVd0OAAAohbK8f5frqsBPPvlEvXv3LjF+xRVX6J///Gd5FgkAAOD1yhWsfv31V4WGhpYYDwkJ0eHDhy+4KQAAAG9UrmDVqlUrLVmypMT44sWL1bJlywtuCgAAwBuV60uYR48erZEjR+rQoUP6wx/+IElKTk7Wyy+/zPlVAACgxipXsLrvvvuUl5enF154Qc8//7wkqUWLFpo+fbruueceRxsEAADwFmUOVoWFhZo9e7ZuueUWDRs2TIcOHVJQUJBq165dEf0BAAB4jTKfY+Xn56ehQ4fq5MmTkqSGDRsSqgAAAFTOk9d79eqlDRs2ON0LAACAVyvXOVbDhw/X448/rl9++UXdu3dXrVq1POY7derkSHMAAADepFx3XvfxKXmgy7IsGWMc/RLm6oY7rwMA4H3K8v5driNWu3fvLldjAAAA1Vm5glXz5s2d7gMAAMDrlStYvf/+++ec515WAACgJirXOVZ169b1eF5QUKATJ04oICBAwcHBOnLkiGMNViecYwUAgPcpy/t3uW63cPToUY/H8ePHlZaWpj59+mjOnDnlahoAAMDblStYnUnr1q2VmJioRx991KlFAgAAeBXHgpV06q7sBw4ccHKRAAAAXqNcJ69/8cUXHs+NMTp48KBef/119e7d25HGAAAAvE25gtWAAQM8nluWpYYNG+oPf/iDXn75ZSf6AgAA8DrlClZut9vpPgAAALzeBZ9jZYxROe7YAAAAUO2UO1j97//+rzp06KDAwEAFBgaqQ4cOeuedd5zsDQAAwKuU66PAZ555Rq+88ooefvhhxcbGSpJSUlL02GOPae/evXruueccbRIAAMAblOvO6w0bNtTUqVOVkJDgMT5nzhw9/PDDOnz4sGMNVifceR0AAO9T4XdeLygoUI8ePUqMd+/eXYWFheVZJAAAgNcrV7C6++67NX369BLjb731lgYOHHjBTQEAAHijcp1jJZ06ef3rr7/W5ZdfLklKTU3V3r17dc8992j06NF23SuvvHLhXQIAAHiBcgWrrVu3qlu3bpKkf//735KkBg0aqEGDBtq6datdZ1mWAy0CAAB4h3IFq2XLlpWq7pdffpHb7ZaPj6NfSQgAAHBRqtDE065dO/38888VuQoAAICLRoUGK+7IDgAAahI+owMAAHAIwQoAAMAhBCsAAACHVGiw4nYLAACgJuHkdQAAAIeU+87rpbF9+3Y1bty4IlcBAABw0ShXsDp58qRee+01LVu2TJmZmXK73R7z69evlyRFRUVdeIcAAABeolzBasiQIfr666912223qVevXpxLBQAAoHIGqwULFmjRokXq3bu30/0AAAB4rXKdvN6kSRPVqVPH6V4AAAC8WrmC1csvv6yxY8dqz549TvcDAADgtcr1UWCPHj108uRJtWzZUsHBwfL39/eYP3LkiCPNAQAAeJNyBauEhATt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HSEhITX+P0Ax9oUn9ocn9ocn9sd/sC88sT9OOd+RqmKcvA4AAOAQghUAAIBDCFbVhMvl0sSJE+Vyuaq6lSrHvvDE/vDE/vDE/vgP9oUn9kf5cPI6AACAQzhiBQAA4BCCFQAAgEMIVgAAAA4hWAEAADiEYFUNTJs2TS1atFBgYKBiYmK0du3aqm7pgk2aNEk9e/ZUnTp11KhRIw0YMEBpaWkeNSdPntSIESNUv3591a5dW7feeqsyMjI8avbu3at+/fopODhYjRo10pgxY1RYWOhRs3z5cnXr1k0ul0utWrXSzJkzK3rzLkhiYqIsy9KoUaPssZq2L/bv368///nPql+/voKCgtSxY0f98MMP9rwxRs8884wiIyMVFBSkuLg47dy502MZR44c0cCBAxUSEqKwsDANGTJEx48f96jZvHmzrrzySgUGBioqKkqTJ0+ulO0ri6KiIk2YMEHR0dEKCgrSJZdcoueff97jO82q8/5YuXKl/vSnP6lx48ayLEufffaZx3xlbvu8efPUtm1bBQYGqmPHjlq0aJHj23s+59ofBQUFGjt2rDp27KhatWqpcePGuueee3TgwAGPZVSn/VElDLza3LlzTUBAgHn33XfNtm3bzAMPPGDCwsJMRkZGVbd2QeLj4817771ntm7dajZu3GhuvPFG06xZM3P8+HG7ZujQoSYqKsokJyebH374wVx++eXmiiuusOcLCwtNhw4dTFxcnNmwYYNZtGiRadCggRk/frxds2vXLhMcHGxGjx5ttm/fbl577TXj6+trlixZUqnbW1pr1641LVq0MJ06dTKPPvqoPV6T9sWRI0dM8+bNzb333mtSU1PNrl27zFdffWX+9a9/2TWJiYkmNDTUfPbZZ2bTpk3mpptuMtHR0SY3N9euuf76603nzp3Nd999Z7799lvTqlUrk5CQYM9nZ2eb8PBwM3DgQLN161YzZ84cExQUZN58881K3d7zeeGFF0z9+vXNggULzO7du828efNM7dq1zd///ne7pjrvj0WLFpmnnnrKzJ8/30gyn376qcd8ZW376tWrja+vr5k8ebLZvn27efrpp42/v7/ZsmVLhe+D051rf2RlZZm4uDjz0UcfmR9//NGkpKSYXr16me7du3ssozrtj6pAsPJyvXr1MiNGjLCfFxUVmcaNG5tJkyZVYVfOy8zMNJLMihUrjDGn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ly4er2nfvr18fX3t55GRkdqyZUupe42NjS3x/NVXXy3164v16NHD/nnHjh3Ky8tT3759z/maTp062T9HRkZKkjIzM9W2bdsyrx9A6RGsAHid++67TyNHjpQkj/OWJOn48eOSpIULF6pJkyYecy6XS5I0d+5cPfHEE3r55ZcVGxurOnXqaMqUKUpNTfWo9/f393huWZbcbrcj2+Djc+pMDGOMPXa287dq1apl/xwUFFSq5Z/eu2VZkuRY7wDOjmAFwOtcf/31ys/Pl2VZio+P95hr166dXC6X9u7dq6uvvvqMr1+9erWuuOIKDR8+3B7797//7Xif3333XYnnl112maRTR94k6eDBg/aRtNLce6p169YKCgpScnKy7r//fmcbBnDBCFYAvI6vr6927Nhh/3y6OnXq6IknntBjjz0mt9utPn36KDs7W6tXr1ZISIgGDRqk1q1b6/3339dXX32l6Oho/eMf/9D333+v6OhoR/tcvXq1Jk+erAEDBigpKUnz5s3TwoULJZ068nT55ZcrMTFR0dHRyszM1NNPP33eZQYGBmrs2LF68sknFRAQoN69e+vQoUPatm2bhgwZ4mj/AMqOYAXAK4WEhJx17vnnn1fDhg01adIk7dq1S2FhYerWrZv+8pe/SJIeeughbdiwQXfeeacsy1JCQoKGDx+uxYsXO9rj448/rh9++EF//etfFRISoldeecXjCNu7776rIUOGqHv37mrTpo0mT56s66677rzLnTBhgvz8/PTMM8/owIEDioyMPOONUwFUPsuc/gE/AMARLVq00KhRozRq1KiqbgVAJeI+VgAAAA4hWAFAGX377beqXbv2WR8Aai4+CgSAMsrNzdX+/fvPOt+qVatK7AbAxYRgBQAA4BA+CgQAAHAIwQoAAMAhBCsAAACHEKwAAAAcQrACAABwCMEKAADAIQQrAAAAhxCsAAAAHPL/AT1iOOTQO0scAAAAAElFTkSuQmCC",
      "text/plain": [
       "<Figure size 640x480 with 1 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "plt.scatter(df_jun2011['Mean_purch'], df_jun2011['Sum_purch'], c=df_jun2011['cluster_labels'], cmap='viridis')\n",
    "plt.title(\"For June 2011\")\n",
    "plt.xlabel('Mean_purch')\n",
    "plt.ylabel('Sum_purch')\n",
    "plt.show()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {
    "colab": {
     "base_uri": "https://localhost:8080/",
     "height": 424
    },
    "collapsed": true,
    "id": "GXUkQVRN6Gat",
    "outputId": "c2b0c128-4107-402b-a7fd-9bc23f7b9c49"
   },
   "outputs": [
    {
     "data": {
      "text/html": [
       "\n",
       "  <div id=\"df-b9d466d6-fb89-4d75-bd3d-fe361dd424ed\">\n",
       "    <div class=\"colab-df-container\">\n",
       "      <div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>No. of visits</th>\n",
       "      <th>Mean_purch</th>\n",
       "      <th>Sum_purch</th>\n",
       "      <th>Item_count</th>\n",
       "      <th>Total_quantity</th>\n",
       "      <th>Avg_quant</th>\n",
       "      <th>CustomerID</th>\n",
       "      <th>cluster_labels</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>1</td>\n",
       "      <td>21.251111</td>\n",
       "      <td>382.52</td>\n",
       "      <td>18</td>\n",
       "      <td>196</td>\n",
       "      <td>10.888889</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>1</td>\n",
       "      <td>23.602553</td>\n",
       "      <td>1109.32</td>\n",
       "      <td>47</td>\n",
       "      <td>356</td>\n",
       "      <td>7.574468</td>\n",
       "      <td>12</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>1</td>\n",
       "      <td>22.992000</td>\n",
       "      <td>459.84</td>\n",
       "      <td>20</td>\n",
       "      <td>211</td>\n",
       "      <td>10.550000</td>\n",
       "      <td>28</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>1</td>\n",
       "      <td>16.876389</td>\n",
       "      <td>607.55</td>\n",
       "      <td>36</td>\n",
       "      <td>293</td>\n",
       "      <td>8.138889</td>\n",
       "      <td>29</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>1</td>\n",
       "      <td>19.890000</td>\n",
       "      <td>99.45</td>\n",
       "      <td>5</td>\n",
       "      <td>20</td>\n",
       "      <td>4.000000</td>\n",
       "      <td>31</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>...</th>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>986</th>\n",
       "      <td>1</td>\n",
       "      <td>23.300000</td>\n",
       "      <td>69.90</td>\n",
       "      <td>3</td>\n",
       "      <td>18</td>\n",
       "      <td>6.000000</td>\n",
       "      <td>4316</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>987</th>\n",
       "      <td>1</td>\n",
       "      <td>21.440000</td>\n",
       "      <td>214.40</td>\n",
       "      <td>10</td>\n",
       "      <td>92</td>\n",
       "      <td>9.200000</td>\n",
       "      <td>4318</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>988</th>\n",
       "      <td>1</td>\n",
       "      <td>18.570870</td>\n",
       "      <td>427.13</td>\n",
       "      <td>23</td>\n",
       "      <td>177</td>\n",
       "      <td>7.695652</td>\n",
       "      <td>4320</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>989</th>\n",
       "      <td>1</td>\n",
       "      <td>11.545714</td>\n",
       "      <td>80.82</td>\n",
       "      <td>7</td>\n",
       "      <td>54</td>\n",
       "      <td>7.714286</td>\n",
       "      <td>4335</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>990</th>\n",
       "      <td>2</td>\n",
       "      <td>2.770541</td>\n",
       "      <td>307.53</td>\n",
       "      <td>77</td>\n",
       "      <td>209</td>\n",
       "      <td>1.882883</td>\n",
       "      <td>4337</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "<p>986 rows × 8 columns</p>\n",
       "</div>\n",
       "      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-b9d466d6-fb89-4d75-bd3d-fe361dd424ed')\"\n",
       "              title=\"Convert this dataframe to an interactive table.\"\n",
       "              style=\"display:none;\">\n",
       "        \n",
       "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
       "       width=\"24px\">\n",
       "    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n",
       "    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n",
       "  </svg>\n",
       "      </button>\n",
       "      \n",
       "  <style>\n",
       "    .colab-df-container {\n",
       "      display:flex;\n",
       "      flex-wrap:wrap;\n",
       "      gap: 12px;\n",
       "    }\n",
       "\n",
       "    .colab-df-convert {\n",
       "      background-color: #E8F0FE;\n",
       "      border: none;\n",
       "      border-radius: 50%;\n",
       "      cursor: pointer;\n",
       "      display: none;\n",
       "      fill: #1967D2;\n",
       "      height: 32px;\n",
       "      padding: 0 0 0 0;\n",
       "      width: 32px;\n",
       "    }\n",
       "\n",
       "    .colab-df-convert:hover {\n",
       "      background-color: #E2EBFA;\n",
       "      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
       "      fill: #174EA6;\n",
       "    }\n",
       "\n",
       "    [theme=dark] .colab-df-convert {\n",
       "      background-color: #3B4455;\n",
       "      fill: #D2E3FC;\n",
       "    }\n",
       "\n",
       "    [theme=dark] .colab-df-convert:hover {\n",
       "      background-color: #434B5C;\n",
       "      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
       "      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
       "      fill: #FFFFFF;\n",
       "    }\n",
       "  </style>\n",
       "\n",
       "      <script>\n",
       "        const buttonEl =\n",
       "          document.querySelector('#df-b9d466d6-fb89-4d75-bd3d-fe361dd424ed button.colab-df-convert');\n",
       "        buttonEl.style.display =\n",
       "          google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
       "\n",
       "        async function convertToInteractive(key) {\n",
       "          const element = document.querySelector('#df-b9d466d6-fb89-4d75-bd3d-fe361dd424ed');\n",
       "          const dataTable =\n",
       "            await google.colab.kernel.invokeFunction('convertToInteractive',\n",
       "                                                     [key], {});\n",
       "          if (!dataTable) return;\n",
       "\n",
       "          const docLinkHtml = 'Like what you see? Visit the ' +\n",
       "            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n",
       "            + ' to learn more about interactive tables.';\n",
       "          element.innerHTML = '';\n",
       "          dataTable['output_type'] = 'display_data';\n",
       "          await google.colab.output.renderOutput(dataTable, element);\n",
       "          const docLink = document.createElement('div');\n",
       "          docLink.innerHTML = docLinkHtml;\n",
       "          element.appendChild(docLink);\n",
       "        }\n",
       "      </script>\n",
       "    </div>\n",
       "  </div>\n",
       "  "
      ],
      "text/plain": [
       "     No. of visits  Mean_purch  Sum_purch  Item_count  Total_quantity  \\\n",
       "0                1   21.251111     382.52          18             196   \n",
       "1                1   23.602553    1109.32          47             356   \n",
       "2                1   22.992000     459.84          20             211   \n",
       "3                1   16.876389     607.55          36             293   \n",
       "4                1   19.890000      99.45           5              20   \n",
       "..             ...         ...        ...         ...             ...   \n",
       "986              1   23.300000      69.90           3              18   \n",
       "987              1   21.440000     214.40          10              92   \n",
       "988              1   18.570870     427.13          23             177   \n",
       "989              1   11.545714      80.82           7              54   \n",
       "990              2    2.770541     307.53          77             209   \n",
       "\n",
       "     Avg_quant  CustomerID  cluster_labels  \n",
       "0    10.888889           1               0  \n",
       "1     7.574468          12               0  \n",
       "2    10.550000          28               0  \n",
       "3     8.138889          29               0  \n",
       "4     4.000000          31               0  \n",
       "..         ...         ...             ...  \n",
       "986   6.000000        4316               0  \n",
       "987   9.200000        4318               0  \n",
       "988   7.695652        4320               0  \n",
       "989   7.714286        4335               0  \n",
       "990   1.882883        4337               0  \n",
       "\n",
       "[986 rows x 8 columns]"
      ]
     },
     "execution_count": 127,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "#Below is for outliers:-\n",
    "\n",
    "df_jun2011 = df_jun2011[df_jun2011['cluster_labels']!=1]\n",
    "df_jun2011 = df_jun2011[df_jun2011['cluster_labels']!=2]\n",
    "df_jun2011\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {
    "colab": {
     "base_uri": "https://localhost:8080/"
    },
    "collapsed": true,
    "id": "lR6pefy76Pq1",
    "outputId": "df9b8195-efc4-4c3b-f26e-a8b6bc7881f5"
   },
   "outputs": [
    {
     "data": {
      "text/plain": [
       "0    986\n",
       "Name: cluster_labels, dtype: int64"
      ]
     },
     "execution_count": 128,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "df_jun2011['cluster_labels'].value_counts()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {
    "colab": {
     "base_uri": "https://localhost:8080/",
     "height": 424
    },
    "collapsed": true,
    "id": "JQVvY5YM6Ts0",
    "outputId": "3385428e-ba88-465b-9925-1f848391c332"
   },
   "outputs": [
    {
     "data": {
      "text/html": [
       "\n",
       "  <div id=\"df-3141cfc1-09be-49f8-bf94-53fd16f86d25\">\n",
       "    <div class=\"colab-df-container\">\n",
       "      <div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>No. of visits</th>\n",
       "      <th>Mean_purch</th>\n",
       "      <th>Sum_purch</th>\n",
       "      <th>Item_count</th>\n",
       "      <th>Total_quantity</th>\n",
       "      <th>Avg_quant</th>\n",
       "      <th>CustomerID</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>1</td>\n",
       "      <td>21.251111</td>\n",
       "      <td>382.52</td>\n",
       "      <td>18</td>\n",
       "      <td>196</td>\n",
       "      <td>10.888889</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>1</td>\n",
       "      <td>23.602553</td>\n",
       "      <td>1109.32</td>\n",
       "      <td>47</td>\n",
       "      <td>356</td>\n",
       "      <td>7.574468</td>\n",
       "      <td>12</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>1</td>\n",
       "      <td>22.992000</td>\n",
       "      <td>459.84</td>\n",
       "      <td>20</td>\n",
       "      <td>211</td>\n",
       "      <td>10.550000</td>\n",
       "      <td>28</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>1</td>\n",
       "      <td>16.876389</td>\n",
       "      <td>607.55</td>\n",
       "      <td>36</td>\n",
       "      <td>293</td>\n",
       "      <td>8.138889</td>\n",
       "      <td>29</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>1</td>\n",
       "      <td>19.890000</td>\n",
       "      <td>99.45</td>\n",
       "      <td>5</td>\n",
       "      <td>20</td>\n",
       "      <td>4.000000</td>\n",
       "      <td>31</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>...</th>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>986</th>\n",
       "      <td>1</td>\n",
       "      <td>23.300000</td>\n",
       "      <td>69.90</td>\n",
       "      <td>3</td>\n",
       "      <td>18</td>\n",
       "      <td>6.000000</td>\n",
       "      <td>4316</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>987</th>\n",
       "      <td>1</td>\n",
       "      <td>21.440000</td>\n",
       "      <td>214.40</td>\n",
       "      <td>10</td>\n",
       "      <td>92</td>\n",
       "      <td>9.200000</td>\n",
       "      <td>4318</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>988</th>\n",
       "      <td>1</td>\n",
       "      <td>18.570870</td>\n",
       "      <td>427.13</td>\n",
       "      <td>23</td>\n",
       "      <td>177</td>\n",
       "      <td>7.695652</td>\n",
       "      <td>4320</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>989</th>\n",
       "      <td>1</td>\n",
       "      <td>11.545714</td>\n",
       "      <td>80.82</td>\n",
       "      <td>7</td>\n",
       "      <td>54</td>\n",
       "      <td>7.714286</td>\n",
       "      <td>4335</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>990</th>\n",
       "      <td>2</td>\n",
       "      <td>2.770541</td>\n",
       "      <td>307.53</td>\n",
       "      <td>77</td>\n",
       "      <td>209</td>\n",
       "      <td>1.882883</td>\n",
       "      <td>4337</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "<p>986 rows × 7 columns</p>\n",
       "</div>\n",
       "      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-3141cfc1-09be-49f8-bf94-53fd16f86d25')\"\n",
       "              title=\"Convert this dataframe to an interactive table.\"\n",
       "              style=\"display:none;\">\n",
       "        \n",
       "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
       "       width=\"24px\">\n",
       "    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n",
       "    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n",
       "  </svg>\n",
       "      </button>\n",
       "      \n",
       "  <style>\n",
       "    .colab-df-container {\n",
       "      display:flex;\n",
       "      flex-wrap:wrap;\n",
       "      gap: 12px;\n",
       "    }\n",
       "\n",
       "    .colab-df-convert {\n",
       "      background-color: #E8F0FE;\n",
       "      border: none;\n",
       "      border-radius: 50%;\n",
       "      cursor: pointer;\n",
       "      display: none;\n",
       "      fill: #1967D2;\n",
       "      height: 32px;\n",
       "      padding: 0 0 0 0;\n",
       "      width: 32px;\n",
       "    }\n",
       "\n",
       "    .colab-df-convert:hover {\n",
       "      background-color: #E2EBFA;\n",
       "      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
       "      fill: #174EA6;\n",
       "    }\n",
       "\n",
       "    [theme=dark] .colab-df-convert {\n",
       "      background-color: #3B4455;\n",
       "      fill: #D2E3FC;\n",
       "    }\n",
       "\n",
       "    [theme=dark] .colab-df-convert:hover {\n",
       "      background-color: #434B5C;\n",
       "      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
       "      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
       "      fill: #FFFFFF;\n",
       "    }\n",
       "  </style>\n",
       "\n",
       "      <script>\n",
       "        const buttonEl =\n",
       "          document.querySelector('#df-3141cfc1-09be-49f8-bf94-53fd16f86d25 button.colab-df-convert');\n",
       "        buttonEl.style.display =\n",
       "          google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
       "\n",
       "        async function convertToInteractive(key) {\n",
       "          const element = document.querySelector('#df-3141cfc1-09be-49f8-bf94-53fd16f86d25');\n",
       "          const dataTable =\n",
       "            await google.colab.kernel.invokeFunction('convertToInteractive',\n",
       "                                                     [key], {});\n",
       "          if (!dataTable) return;\n",
       "\n",
       "          const docLinkHtml = 'Like what you see? Visit the ' +\n",
       "            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n",
       "            + ' to learn more about interactive tables.';\n",
       "          element.innerHTML = '';\n",
       "          dataTable['output_type'] = 'display_data';\n",
       "          await google.colab.output.renderOutput(dataTable, element);\n",
       "          const docLink = document.createElement('div');\n",
       "          docLink.innerHTML = docLinkHtml;\n",
       "          element.appendChild(docLink);\n",
       "        }\n",
       "      </script>\n",
       "    </div>\n",
       "  </div>\n",
       "  "
      ],
      "text/plain": [
       "     No. of visits  Mean_purch  Sum_purch  Item_count  Total_quantity  \\\n",
       "0                1   21.251111     382.52          18             196   \n",
       "1                1   23.602553    1109.32          47             356   \n",
       "2                1   22.992000     459.84          20             211   \n",
       "3                1   16.876389     607.55          36             293   \n",
       "4                1   19.890000      99.45           5              20   \n",
       "..             ...         ...        ...         ...             ...   \n",
       "986              1   23.300000      69.90           3              18   \n",
       "987              1   21.440000     214.40          10              92   \n",
       "988              1   18.570870     427.13          23             177   \n",
       "989              1   11.545714      80.82           7              54   \n",
       "990              2    2.770541     307.53          77             209   \n",
       "\n",
       "     Avg_quant  CustomerID  \n",
       "0    10.888889           1  \n",
       "1     7.574468          12  \n",
       "2    10.550000          28  \n",
       "3     8.138889          29  \n",
       "4     4.000000          31  \n",
       "..         ...         ...  \n",
       "986   6.000000        4316  \n",
       "987   9.200000        4318  \n",
       "988   7.695652        4320  \n",
       "989   7.714286        4335  \n",
       "990   1.882883        4337  \n",
       "\n",
       "[986 rows x 7 columns]"
      ]
     },
     "execution_count": 129,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "#Now we again apply the clustering pipeline\n",
    "\n",
    "df_jun2011_person = df_jun2011.copy(deep=True)\n",
    "df_jun2011_person.drop(['cluster_labels'],axis=1,inplace=True)\n",
    "df_jun2011_person"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {
    "colab": {
     "base_uri": "https://localhost:8080/",
     "height": 478
    },
    "id": "1dwGBsth6au2",
    "outputId": "8c715ce5-dda0-4843-ceaa-ddd1a73d2751"
   },
   "outputs": [
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "/usr/local/lib/python3.9/dist-packages/sklearn/cluster/_kmeans.py:870: FutureWarning: The default value of `n_init` will change from 10 to 'auto' in 1.4. Set the value of `n_init` explicitly to suppress the warning\n",
      "  warnings.warn(\n"
     ]
    },
    {
     "data": {
      "text/html": [
       "\n",
       "  <div id=\"df-fc2d142b-ada3-4279-a327-51010c1e4dce\">\n",
       "    <div class=\"colab-df-container\">\n",
       "      <div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>No. of visits</th>\n",
       "      <th>Mean_purch</th>\n",
       "      <th>Sum_purch</th>\n",
       "      <th>Item_count</th>\n",
       "      <th>Total_quantity</th>\n",
       "      <th>Avg_quant</th>\n",
       "      <th>CustomerID</th>\n",
       "      <th>cluster_labels</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>1</td>\n",
       "      <td>21.251111</td>\n",
       "      <td>382.52</td>\n",
       "      <td>18</td>\n",
       "      <td>196</td>\n",
       "      <td>10.888889</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>1</td>\n",
       "      <td>23.602553</td>\n",
       "      <td>1109.32</td>\n",
       "      <td>47</td>\n",
       "      <td>356</td>\n",
       "      <td>7.574468</td>\n",
       "      <td>12</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>1</td>\n",
       "      <td>22.992000</td>\n",
       "      <td>459.84</td>\n",
       "      <td>20</td>\n",
       "      <td>211</td>\n",
       "      <td>10.550000</td>\n",
       "      <td>28</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>1</td>\n",
       "      <td>16.876389</td>\n",
       "      <td>607.55</td>\n",
       "      <td>36</td>\n",
       "      <td>293</td>\n",
       "      <td>8.138889</td>\n",
       "      <td>29</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>1</td>\n",
       "      <td>19.890000</td>\n",
       "      <td>99.45</td>\n",
       "      <td>5</td>\n",
       "      <td>20</td>\n",
       "      <td>4.000000</td>\n",
       "      <td>31</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>...</th>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>986</th>\n",
       "      <td>1</td>\n",
       "      <td>23.300000</td>\n",
       "      <td>69.90</td>\n",
       "      <td>3</td>\n",
       "      <td>18</td>\n",
       "      <td>6.000000</td>\n",
       "      <td>4316</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>987</th>\n",
       "      <td>1</td>\n",
       "      <td>21.440000</td>\n",
       "      <td>214.40</td>\n",
       "      <td>10</td>\n",
       "      <td>92</td>\n",
       "      <td>9.200000</td>\n",
       "      <td>4318</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>988</th>\n",
       "      <td>1</td>\n",
       "      <td>18.570870</td>\n",
       "      <td>427.13</td>\n",
       "      <td>23</td>\n",
       "      <td>177</td>\n",
       "      <td>7.695652</td>\n",
       "      <td>4320</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>989</th>\n",
       "      <td>1</td>\n",
       "      <td>11.545714</td>\n",
       "      <td>80.82</td>\n",
       "      <td>7</td>\n",
       "      <td>54</td>\n",
       "      <td>7.714286</td>\n",
       "      <td>4335</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>990</th>\n",
       "      <td>2</td>\n",
       "      <td>2.770541</td>\n",
       "      <td>307.53</td>\n",
       "      <td>77</td>\n",
       "      <td>209</td>\n",
       "      <td>1.882883</td>\n",
       "      <td>4337</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "<p>986 rows × 8 columns</p>\n",
       "</div>\n",
       "      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-fc2d142b-ada3-4279-a327-51010c1e4dce')\"\n",
       "              title=\"Convert this dataframe to an interactive table.\"\n",
       "              style=\"display:none;\">\n",
       "        \n",
       "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
       "       width=\"24px\">\n",
       "    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n",
       "    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n",
       "  </svg>\n",
       "      </button>\n",
       "      \n",
       "  <style>\n",
       "    .colab-df-container {\n",
       "      display:flex;\n",
       "      flex-wrap:wrap;\n",
       "      gap: 12px;\n",
       "    }\n",
       "\n",
       "    .colab-df-convert {\n",
       "      background-color: #E8F0FE;\n",
       "      border: none;\n",
       "      border-radius: 50%;\n",
       "      cursor: pointer;\n",
       "      display: none;\n",
       "      fill: #1967D2;\n",
       "      height: 32px;\n",
       "      padding: 0 0 0 0;\n",
       "      width: 32px;\n",
       "    }\n",
       "\n",
       "    .colab-df-convert:hover {\n",
       "      background-color: #E2EBFA;\n",
       "      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
       "      fill: #174EA6;\n",
       "    }\n",
       "\n",
       "    [theme=dark] .colab-df-convert {\n",
       "      background-color: #3B4455;\n",
       "      fill: #D2E3FC;\n",
       "    }\n",
       "\n",
       "    [theme=dark] .colab-df-convert:hover {\n",
       "      background-color: #434B5C;\n",
       "      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
       "      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
       "      fill: #FFFFFF;\n",
       "    }\n",
       "  </style>\n",
       "\n",
       "      <script>\n",
       "        const buttonEl =\n",
       "          document.querySelector('#df-fc2d142b-ada3-4279-a327-51010c1e4dce button.colab-df-convert');\n",
       "        buttonEl.style.display =\n",
       "          google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
       "\n",
       "        async function convertToInteractive(key) {\n",
       "          const element = document.querySelector('#df-fc2d142b-ada3-4279-a327-51010c1e4dce');\n",
       "          const dataTable =\n",
       "            await google.colab.kernel.invokeFunction('convertToInteractive',\n",
       "                                                     [key], {});\n",
       "          if (!dataTable) return;\n",
       "\n",
       "          const docLinkHtml = 'Like what you see? Visit the ' +\n",
       "            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n",
       "            + ' to learn more about interactive tables.';\n",
       "          element.innerHTML = '';\n",
       "          dataTable['output_type'] = 'display_data';\n",
       "          await google.colab.output.renderOutput(dataTable, element);\n",
       "          const docLink = document.createElement('div');\n",
       "          docLink.innerHTML = docLinkHtml;\n",
       "          element.appendChild(docLink);\n",
       "        }\n",
       "      </script>\n",
       "    </div>\n",
       "  </div>\n",
       "  "
      ],
      "text/plain": [
       "     No. of visits  Mean_purch  Sum_purch  Item_count  Total_quantity  \\\n",
       "0                1   21.251111     382.52          18             196   \n",
       "1                1   23.602553    1109.32          47             356   \n",
       "2                1   22.992000     459.84          20             211   \n",
       "3                1   16.876389     607.55          36             293   \n",
       "4                1   19.890000      99.45           5              20   \n",
       "..             ...         ...        ...         ...             ...   \n",
       "986              1   23.300000      69.90           3              18   \n",
       "987              1   21.440000     214.40          10              92   \n",
       "988              1   18.570870     427.13          23             177   \n",
       "989              1   11.545714      80.82           7              54   \n",
       "990              2    2.770541     307.53          77             209   \n",
       "\n",
       "     Avg_quant  CustomerID  cluster_labels  \n",
       "0    10.888889           1               0  \n",
       "1     7.574468          12               0  \n",
       "2    10.550000          28               0  \n",
       "3     8.138889          29               0  \n",
       "4     4.000000          31               0  \n",
       "..         ...         ...             ...  \n",
       "986   6.000000        4316               1  \n",
       "987   9.200000        4318               1  \n",
       "988   7.695652        4320               1  \n",
       "989   7.714286        4335               1  \n",
       "990   1.882883        4337               1  \n",
       "\n",
       "[986 rows x 8 columns]"
      ]
     },
     "execution_count": 130,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "df_jun2011_new = df_cluster_labels(df_jun2011_person,3)\n",
    "df_jun2011_new"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {
    "colab": {
     "base_uri": "https://localhost:8080/"
    },
    "id": "0ad-OjoGoFN2",
    "outputId": "9594e686-13dd-441f-ef47-9c6bfadcd7d0"
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "The Silhouette Score is :- 0.5340333618803993\n"
     ]
    }
   ],
   "source": [
    "silhte_score_jun2011_new = silhouette_score(df_jun2011_person, df_jun2011_new['cluster_labels'])\n",
    "print(\"The Silhouette Score is :- \"+str(silhte_score_jun2011_new))\n",
    "#Indicates that silhouette score is realistic for dataset without outliers"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {
    "colab": {
     "base_uri": "https://localhost:8080/"
    },
    "collapsed": true,
    "id": "49TkfrJC6gDj",
    "outputId": "9de85c55-638b-41c5-8eb9-c250e93d86d7"
   },
   "outputs": [
    {
     "data": {
      "text/plain": [
       "0    497\n",
       "1    475\n",
       "2     14\n",
       "Name: cluster_labels, dtype: int64"
      ]
     },
     "execution_count": 132,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "df_jun2011_new['cluster_labels'].value_counts()\n",
    "#These are comparatively good clusters"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {
    "colab": {
     "base_uri": "https://localhost:8080/",
     "height": 472
    },
    "id": "F5v9gRXl6kLL",
    "outputId": "22ce7e38-7655-4bf3-b6d3-8132f88e810c"
   },
   "outputs": [
    {
     "data": {
      "image/png": "",
      "text/plain": [
       "<Figure size 640x480 with 1 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "plt.scatter(df_jun2011_new['Mean_purch'], df_jun2011_new['Sum_purch'], c=df_jun2011_new['cluster_labels'], cmap='viridis')\n",
    "plt.title(\"For June 2011 (After removing outliers)\")\n",
    "plt.xlabel('Mean_purch')\n",
    "plt.ylabel('Sum_purch')\n",
    "plt.show()\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {
    "id": "Tlzw_eWe6twX"
   },
   "outputs": [],
   "source": [
    "jun2011 = descrip_dict(og_jun2011,df_jun2011_new)\n",
    "jun2011 = processlis(jun2011)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {
    "colab": {
     "base_uri": "https://localhost:8080/"
    },
    "collapsed": true,
    "id": "ZZLmlME-6zEu",
    "outputId": "41665dd0-bd26-4f0a-a4c4-315f20f296b8"
   },
   "outputs": [
    {
     "data": {
      "text/plain": [
       "[     CustomerID                                        Description\n",
       " 0             1  [RABBIT NIGHT LIGHT, REGENCY TEA STRAINER, REG...\n",
       " 1            12  [JUMBO  BAG BAROQUE BLACK WHITE, SET OF 4 PANT...\n",
       " 2            28  [RED RETROSPOT MINI CASES, RED RETROSPOT PURSE...\n",
       " 3            29  [LUNCH BAG APPLE DESIGN, CHILDRENS CUTLERY SPA...\n",
       " 4            31  [WHITE WOOD GARDEN PLANT LADDER, TRAY, BREAKFA...\n",
       " ..          ...                                                ...\n",
       " 492        2166  [SET OF 3 REGENCY CAKE TINS, DOILEY STORAGE TI...\n",
       " 493        2168  [SMALL POPCORN HOLDER, JUMBO BAG VINTAGE LEAF,...\n",
       " 494        2169                                           [Manual]\n",
       " 495        2171  [CHILDRENS CUTLERY RETROSPOT RED , RED RETROSP...\n",
       " 496        2173  [REGENCY SUGAR BOWL GREEN, SET OF 3 REGENCY CA...\n",
       " \n",
       " [497 rows x 2 columns],\n",
       "      CustomerID                                        Description\n",
       " 0          2191  [STRAWBERRY CERAMIC TRINKET BOX, REGENCY CAKES...\n",
       " 1          2195  [HANGING HEART JAR T-LIGHT HOLDER, VICTORIAN G...\n",
       " 2          2206  [HEART OF WICKER LARGE, WHITE WIRE EGG HOLDER,...\n",
       " 3          2211  [RED RETROSPOT CHARLOTTE BAG, CHARLOTTE BAG PI...\n",
       " 4          2212  [BALLOON WATER BOMB PACK OF 35, CARD CAT AND T...\n",
       " ..          ...                                                ...\n",
       " 470        4316  [PARTY BUNTING, CLASSICAL ROSE TABLE LAMP, FRE...\n",
       " 471        4318  [VINTAGE  2 METER FOLDING RULER, LUNCH BAG APP...\n",
       " 472        4320  [PARISIENNE JEWELLERY DRAWER , PARISIENNE CURI...\n",
       " 473        4335  [ROBOT BIRTHDAY CARD, CARD CIRCUS PARADE, PENN...\n",
       " 474        4337  [WHITE HANGING HEART T-LIGHT HOLDER, DOILEY ST...\n",
       " \n",
       " [475 rows x 2 columns]]"
      ]
     },
     "execution_count": 135,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "jun2011"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {
    "colab": {
     "base_uri": "https://localhost:8080/",
     "height": 1000
    },
    "id": "xLMp4s_MMrXm",
    "outputId": "712d99e1-de11-4332-a995-02dee3af61ad"
   },
   "outputs": [
    {
     "data": {
      "image/png": "",
      "text/plain": [
       "<Figure size 640x480 with 1 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "data": {
      "image/png": "",
      "text/plain": [
       "<Figure size 500x500 with 1 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "(986, 4)\n",
      "(5, 4)\n",
      "(1, 4)\n"
     ]
    },
    {
     "data": {
      "image/png": "",
      "text/plain": [
       "<Figure size 640x480 with 1 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "data": {
      "image/png": "",
      "text/plain": [
       "<Figure size 500x500 with 1 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "(395, 5)\n",
      "(298, 5)\n",
      "(10, 5)\n",
      "(283, 5)\n"
     ]
    },
    {
     "data": {
      "text/plain": [
       "[     CustomerID                                        Description\n",
       " 0             1  [RABBIT NIGHT LIGHT, REGENCY TEA STRAINER, REG...\n",
       " 1            12  [JUMBO  BAG BAROQUE BLACK WHITE, SET OF 4 PANT...\n",
       " 2            28  [RED RETROSPOT MINI CASES, RED RETROSPOT PURSE...\n",
       " 3            29  [LUNCH BAG APPLE DESIGN, CHILDRENS CUTLERY SPA...\n",
       " 4            31  [WHITE WOOD GARDEN PLANT LADDER, TRAY, BREAKFA...\n",
       " ..          ...                                                ...\n",
       " 390        1753  [12 PENCILS TALL TUBE POSY, SET/6 COLLAGE PAPE...\n",
       " 391        1754  [VANILLA INCENSE IN TIN, DOORMAT HEARTS, PARTY...\n",
       " 392        1755  [GARDENERS KNEELING PAD CUP OF TEA , MINT KITC...\n",
       " 393        1760  [CLASSIC FRENCH STYLE BASKET NATURAL, SPOTTY B...\n",
       " 394        1768  [PICTURE FRAME WOOD TRIPLE PORTRAIT, ASSORTED ...\n",
       " \n",
       " [395 rows x 2 columns],\n",
       "      CustomerID                                        Description\n",
       " 0          1472                            [LANTERN CREAM GAZEBO ]\n",
       " 1          1482  [JUMBO BAG STRAWBERRY, JUMBO BAG APPLES, JUMBO...\n",
       " 2          1657  [TRADITIONAL WOODEN CATCH CUP GAME , TRADITION...\n",
       " 3          1697  [NOVELTY BISCUITS CAKE STAND 3 TIER, FELTCRAFT...\n",
       " 4          1700  [CITRONELLA CANDLE FLOWERPOT, SILVER HANGING T...\n",
       " ..          ...                                                ...\n",
       " 278        3127  [KEY FOB , SHED, KEY FOB , BACK DOOR , KEY FOB...\n",
       " 279        3137  [RED STRIPE CERAMIC DRAWER KNOB, PACK OF 72 RE...\n",
       " 280        3141  [SWEETHEART WIRE MAGAZINE RACK, PARTY BUNTING,...\n",
       " 281        3150  [PACK OF 6 LARGE FRUIT STRAWS , FUSCHIA VOILE ...\n",
       " 282        3155                            [HEART OF WICKER LARGE]\n",
       " \n",
       " [283 rows x 2 columns],\n",
       "      CustomerID                                        Description\n",
       " 0          1880  [STRAWBERRY RAFFIA FOOD COVER, PACK OF 20 NAPK...\n",
       " 1          1963  [CUBIC MUG FLOCK BLUE ON BROWN, REGENCY CAKEST...\n",
       " 2          2291  [FAMILY ALBUM WHITE PICTURE FRAME, MEMO BOARD ...\n",
       " 3          2501  [JUMBO BAG ALPHABET, JUMBO BAG PINK POLKADOT, ...\n",
       " 4          2560  [SET OF 2 WOODEN MARKET CRATES, BEACH HUT SHEL...\n",
       " ..          ...                                                ...\n",
       " 293        4298  [LUNCH BAG RED RETROSPOT, LUNCH BAG PINK POLKA...\n",
       " 294        4299  [PHARMACIE FIRST AID TIN, VINYL RECORD FRAME S...\n",
       " 295        4304  [SPOTTY BUNTING, DOORMAT KEEP CALM AND COME IN...\n",
       " 296        4308  [JAM MAKING SET PRINTED, FOOD COVER WITH BEADS...\n",
       " 297        4312  [ENAMEL FLOWER JUG CREAM, ENAMEL COLANDER CREA...\n",
       " \n",
       " [298 rows x 2 columns]]"
      ]
     },
     "execution_count": 136,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "pca = PCA(n_components = 3)\n",
    "pca.fit(X = dvt_jun2011)\n",
    "new_dvt = pca.transform(dvt_jun2011)\n",
    "\n",
    "new_dvt = pd.DataFrame(data = new_dvt,columns = ['X0','X1','X2'])\n",
    "model = AgglomerativeClustering(distance_threshold=0, n_clusters=None, linkage='ward').fit(new_dvt)\n",
    "\n",
    "plot_dendrogram(model, truncate_mode=\"level\", p=4)\n",
    "\n",
    "dict_jun2011 =  Agglocls(new_dvt,3)\n",
    "\n",
    "final_dvt_jun2011 = dict_jun2011[0]\n",
    "pca_jun2011 = PCA(n_components = 3)\n",
    "pca_jun2011.fit(X = final_dvt_jun2011)\n",
    "final_dvt_jun2011 = pca_jun2011.transform(final_dvt_jun2011)\n",
    "final_dvt_jun2011 = pd.DataFrame(data = final_dvt_jun2011,columns = ['X0','X1','X2'])\n",
    "AggloDendo(final_dvt_jun2011)\n",
    "\n",
    "dict_jun2011_final =  AggloPca(final_dvt_jun2011,4,dvt_jun2011,'X0','X2')\n",
    "\n",
    "jun2011_agg = descrip_dict(og_jun2011,final_dvt_jun2011)\n",
    "jun2011_agg = processlis(jun2011_agg)\n",
    "jun2011_agg\n",
    "#apr2011 = processlis(apr2011)\n",
    "#apr2011_agg = processlis(apr2011_agg)\n",
    "\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {
    "colab": {
     "base_uri": "https://localhost:8080/",
     "height": 424
    },
    "id": "tRDVBoUCZlCY",
    "outputId": "9cd1ace8-f884-49e2-e025-130e2be2d91e"
   },
   "outputs": [
    {
     "data": {
      "text/html": [
       "\n",
       "  <div id=\"df-b5ec48c9-f9a8-4db6-9baf-1e0fe418d0e6\">\n",
       "    <div class=\"colab-df-container\">\n",
       "      <div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>X0</th>\n",
       "      <th>X1</th>\n",
       "      <th>X2</th>\n",
       "      <th>Clus</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>-457.008797</td>\n",
       "      <td>2157.422880</td>\n",
       "      <td>144.220137</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>284.180988</td>\n",
       "      <td>2153.402081</td>\n",
       "      <td>197.113408</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>-378.396487</td>\n",
       "      <td>2131.104301</td>\n",
       "      <td>151.277265</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>-212.937002</td>\n",
       "      <td>2133.549922</td>\n",
       "      <td>115.720346</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>-779.623146</td>\n",
       "      <td>2120.065513</td>\n",
       "      <td>222.793306</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>...</th>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>987</th>\n",
       "      <td>-592.780417</td>\n",
       "      <td>-2160.294449</td>\n",
       "      <td>34.595290</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>988</th>\n",
       "      <td>-364.394093</td>\n",
       "      <td>-2158.686531</td>\n",
       "      <td>14.980382</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>989</th>\n",
       "      <td>-731.654430</td>\n",
       "      <td>-2178.911841</td>\n",
       "      <td>28.159919</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>990</th>\n",
       "      <td>-468.300784</td>\n",
       "      <td>-2174.458108</td>\n",
       "      <td>-52.457587</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>991</th>\n",
       "      <td>104204.282474</td>\n",
       "      <td>-870.078201</td>\n",
       "      <td>-199.372855</td>\n",
       "      <td>2</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "<p>992 rows × 4 columns</p>\n",
       "</div>\n",
       "      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-b5ec48c9-f9a8-4db6-9baf-1e0fe418d0e6')\"\n",
       "              title=\"Convert this dataframe to an interactive table.\"\n",
       "              style=\"display:none;\">\n",
       "        \n",
       "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
       "       width=\"24px\">\n",
       "    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n",
       "    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n",
       "  </svg>\n",
       "      </button>\n",
       "      \n",
       "  <style>\n",
       "    .colab-df-container {\n",
       "      display:flex;\n",
       "      flex-wrap:wrap;\n",
       "      gap: 12px;\n",
       "    }\n",
       "\n",
       "    .colab-df-convert {\n",
       "      background-color: #E8F0FE;\n",
       "      border: none;\n",
       "      border-radius: 50%;\n",
       "      cursor: pointer;\n",
       "      display: none;\n",
       "      fill: #1967D2;\n",
       "      height: 32px;\n",
       "      padding: 0 0 0 0;\n",
       "      width: 32px;\n",
       "    }\n",
       "\n",
       "    .colab-df-convert:hover {\n",
       "      background-color: #E2EBFA;\n",
       "      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
       "      fill: #174EA6;\n",
       "    }\n",
       "\n",
       "    [theme=dark] .colab-df-convert {\n",
       "      background-color: #3B4455;\n",
       "      fill: #D2E3FC;\n",
       "    }\n",
       "\n",
       "    [theme=dark] .colab-df-convert:hover {\n",
       "      background-color: #434B5C;\n",
       "      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
       "      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
       "      fill: #FFFFFF;\n",
       "    }\n",
       "  </style>\n",
       "\n",
       "      <script>\n",
       "        const buttonEl =\n",
       "          document.querySelector('#df-b5ec48c9-f9a8-4db6-9baf-1e0fe418d0e6 button.colab-df-convert');\n",
       "        buttonEl.style.display =\n",
       "          google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
       "\n",
       "        async function convertToInteractive(key) {\n",
       "          const element = document.querySelector('#df-b5ec48c9-f9a8-4db6-9baf-1e0fe418d0e6');\n",
       "          const dataTable =\n",
       "            await google.colab.kernel.invokeFunction('convertToInteractive',\n",
       "                                                     [key], {});\n",
       "          if (!dataTable) return;\n",
       "\n",
       "          const docLinkHtml = 'Like what you see? Visit the ' +\n",
       "            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n",
       "            + ' to learn more about interactive tables.';\n",
       "          element.innerHTML = '';\n",
       "          dataTable['output_type'] = 'display_data';\n",
       "          await google.colab.output.renderOutput(dataTable, element);\n",
       "          const docLink = document.createElement('div');\n",
       "          docLink.innerHTML = docLinkHtml;\n",
       "          element.appendChild(docLink);\n",
       "        }\n",
       "      </script>\n",
       "    </div>\n",
       "  </div>\n",
       "  "
      ],
      "text/plain": [
       "                X0           X1          X2  Clus\n",
       "0      -457.008797  2157.422880  144.220137     0\n",
       "1       284.180988  2153.402081  197.113408     0\n",
       "2      -378.396487  2131.104301  151.277265     0\n",
       "3      -212.937002  2133.549922  115.720346     0\n",
       "4      -779.623146  2120.065513  222.793306     0\n",
       "..             ...          ...         ...   ...\n",
       "987    -592.780417 -2160.294449   34.595290     0\n",
       "988    -364.394093 -2158.686531   14.980382     0\n",
       "989    -731.654430 -2178.911841   28.159919     0\n",
       "990    -468.300784 -2174.458108  -52.457587     0\n",
       "991  104204.282474  -870.078201 -199.372855     2\n",
       "\n",
       "[992 rows x 4 columns]"
      ]
     },
     "execution_count": 137,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "new_dvt"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {
    "id": "X-Q31N0GwxtT"
   },
   "outputs": [],
   "source": [
    "Cluster_dict['jun2011'] = (len(jun2011),len(jun2011_agg))\n",
    "dicti_2011jun = {}\n",
    "klis = []\n",
    "for i in range(Cluster_dict['jun2011'][0]):\n",
    "  temp = apriori_rules(jun2011[i],0.075)\n",
    "  klis.append(temp)\n",
    "alis = []\n",
    "for i in range(Cluster_dict['jun2011'][1]):\n",
    "  temp = apriori_rules(jun2011_agg[i],0.075)\n",
    "  alis.append(temp)\n",
    "#apriori_rules(1_agg[0],0.075)\n",
    "dicti_2011jun['K-means'] = klis\n",
    "dicti_2011jun['Agglo'] = alis\n",
    "\n",
    "Rules_dict['jun2011'] = dicti_2011jun"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {
    "id": "2wIGhN867FW1"
   },
   "source": [
    "## For July 2011"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {
    "colab": {
     "base_uri": "https://localhost:8080/"
    },
    "collapsed": true,
    "id": "S7WhiajJ7B9c",
    "outputId": "f8ebd85e-f9ad-4e1a-e276-5fd3fdbf5ec2"
   },
   "outputs": [
    {
     "data": {
      "text/html": [
       "\n",
       "  <div id=\"df-baed01ee-30c4-40bb-8002-d5497bef60c0\">\n",
       "    <div class=\"colab-df-container\">\n",
       "      <div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>InvoiceNo</th>\n",
       "      <th>StockCode</th>\n",
       "      <th>Description</th>\n",
       "      <th>Quantity</th>\n",
       "      <th>UnitPrice</th>\n",
       "      <th>CustomerID</th>\n",
       "      <th>Country</th>\n",
       "      <th>time_intervals</th>\n",
       "      <th>Total Price</th>\n",
       "      <th>Money_bins</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>245903</th>\n",
       "      <td>558638</td>\n",
       "      <td>84836</td>\n",
       "      <td>ZINC METAL HEART DECORATION</td>\n",
       "      <td>12</td>\n",
       "      <td>1.25</td>\n",
       "      <td>2909</td>\n",
       "      <td>United Kingdom</td>\n",
       "      <td>04:00-07:59</td>\n",
       "      <td>15.00</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>245904</th>\n",
       "      <td>558638</td>\n",
       "      <td>71459</td>\n",
       "      <td>HANGING JAM JAR T-LIGHT HOLDER</td>\n",
       "      <td>24</td>\n",
       "      <td>0.85</td>\n",
       "      <td>2909</td>\n",
       "      <td>United Kingdom</td>\n",
       "      <td>04:00-07:59</td>\n",
       "      <td>20.40</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>245905</th>\n",
       "      <td>558638</td>\n",
       "      <td>22784</td>\n",
       "      <td>LANTERN CREAM GAZEBO</td>\n",
       "      <td>3</td>\n",
       "      <td>4.95</td>\n",
       "      <td>2909</td>\n",
       "      <td>United Kingdom</td>\n",
       "      <td>04:00-07:59</td>\n",
       "      <td>14.85</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>245906</th>\n",
       "      <td>558638</td>\n",
       "      <td>23145</td>\n",
       "      <td>ZINC T-LIGHT HOLDER STAR LARGE</td>\n",
       "      <td>12</td>\n",
       "      <td>0.95</td>\n",
       "      <td>2909</td>\n",
       "      <td>United Kingdom</td>\n",
       "      <td>04:00-07:59</td>\n",
       "      <td>11.40</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>245907</th>\n",
       "      <td>558638</td>\n",
       "      <td>22674</td>\n",
       "      <td>FRENCH TOILET SIGN BLUE METAL</td>\n",
       "      <td>12</td>\n",
       "      <td>1.25</td>\n",
       "      <td>2909</td>\n",
       "      <td>United Kingdom</td>\n",
       "      <td>04:00-07:59</td>\n",
       "      <td>15.00</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>...</th>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>285416</th>\n",
       "      <td>561903</td>\n",
       "      <td>21900</td>\n",
       "      <td>KEY FOB , SHED</td>\n",
       "      <td>24</td>\n",
       "      <td>0.65</td>\n",
       "      <td>3525</td>\n",
       "      <td>United Kingdom</td>\n",
       "      <td>12:00-15:59</td>\n",
       "      <td>15.60</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>285417</th>\n",
       "      <td>561903</td>\n",
       "      <td>48187</td>\n",
       "      <td>DOORMAT NEW ENGLAND</td>\n",
       "      <td>2</td>\n",
       "      <td>7.95</td>\n",
       "      <td>3525</td>\n",
       "      <td>United Kingdom</td>\n",
       "      <td>12:00-15:59</td>\n",
       "      <td>15.90</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>285418</th>\n",
       "      <td>561903</td>\n",
       "      <td>85152</td>\n",
       "      <td>HAND OVER THE CHOCOLATE   SIGN</td>\n",
       "      <td>12</td>\n",
       "      <td>2.10</td>\n",
       "      <td>3525</td>\n",
       "      <td>United Kingdom</td>\n",
       "      <td>12:00-15:59</td>\n",
       "      <td>25.20</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>285419</th>\n",
       "      <td>561903</td>\n",
       "      <td>82600</td>\n",
       "      <td>NO SINGING METAL SIGN</td>\n",
       "      <td>12</td>\n",
       "      <td>2.10</td>\n",
       "      <td>3525</td>\n",
       "      <td>United Kingdom</td>\n",
       "      <td>12:00-15:59</td>\n",
       "      <td>25.20</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>285420</th>\n",
       "      <td>561903</td>\n",
       "      <td>21175</td>\n",
       "      <td>GIN + TONIC DIET METAL SIGN</td>\n",
       "      <td>12</td>\n",
       "      <td>2.55</td>\n",
       "      <td>3525</td>\n",
       "      <td>United Kingdom</td>\n",
       "      <td>12:00-15:59</td>\n",
       "      <td>30.60</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "<p>38716 rows × 10 columns</p>\n",
       "</div>\n",
       "      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-baed01ee-30c4-40bb-8002-d5497bef60c0')\"\n",
       "              title=\"Convert this dataframe to an interactive table.\"\n",
       "              style=\"display:none;\">\n",
       "        \n",
       "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
       "       width=\"24px\">\n",
       "    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n",
       "    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n",
       "  </svg>\n",
       "      </button>\n",
       "      \n",
       "  <style>\n",
       "    .colab-df-container {\n",
       "      display:flex;\n",
       "      flex-wrap:wrap;\n",
       "      gap: 12px;\n",
       "    }\n",
       "\n",
       "    .colab-df-convert {\n",
       "      background-color: #E8F0FE;\n",
       "      border: none;\n",
       "      border-radius: 50%;\n",
       "      cursor: pointer;\n",
       "      display: none;\n",
       "      fill: #1967D2;\n",
       "      height: 32px;\n",
       "      padding: 0 0 0 0;\n",
       "      width: 32px;\n",
       "    }\n",
       "\n",
       "    .colab-df-convert:hover {\n",
       "      background-color: #E2EBFA;\n",
       "      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
       "      fill: #174EA6;\n",
       "    }\n",
       "\n",
       "    [theme=dark] .colab-df-convert {\n",
       "      background-color: #3B4455;\n",
       "      fill: #D2E3FC;\n",
       "    }\n",
       "\n",
       "    [theme=dark] .colab-df-convert:hover {\n",
       "      background-color: #434B5C;\n",
       "      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
       "      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
       "      fill: #FFFFFF;\n",
       "    }\n",
       "  </style>\n",
       "\n",
       "      <script>\n",
       "        const buttonEl =\n",
       "          document.querySelector('#df-baed01ee-30c4-40bb-8002-d5497bef60c0 button.colab-df-convert');\n",
       "        buttonEl.style.display =\n",
       "          google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
       "\n",
       "        async function convertToInteractive(key) {\n",
       "          const element = document.querySelector('#df-baed01ee-30c4-40bb-8002-d5497bef60c0');\n",
       "          const dataTable =\n",
       "            await google.colab.kernel.invokeFunction('convertToInteractive',\n",
       "                                                     [key], {});\n",
       "          if (!dataTable) return;\n",
       "\n",
       "          const docLinkHtml = 'Like what you see? Visit the ' +\n",
       "            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n",
       "            + ' to learn more about interactive tables.';\n",
       "          element.innerHTML = '';\n",
       "          dataTable['output_type'] = 'display_data';\n",
       "          await google.colab.output.renderOutput(dataTable, element);\n",
       "          const docLink = document.createElement('div');\n",
       "          docLink.innerHTML = docLinkHtml;\n",
       "          element.appendChild(docLink);\n",
       "        }\n",
       "      </script>\n",
       "    </div>\n",
       "  </div>\n",
       "  "
      ],
      "text/plain": [
       "       InvoiceNo StockCode                      Description  Quantity  \\\n",
       "245903    558638     84836      ZINC METAL HEART DECORATION        12   \n",
       "245904    558638     71459   HANGING JAM JAR T-LIGHT HOLDER        24   \n",
       "245905    558638     22784            LANTERN CREAM GAZEBO          3   \n",
       "245906    558638     23145   ZINC T-LIGHT HOLDER STAR LARGE        12   \n",
       "245907    558638     22674    FRENCH TOILET SIGN BLUE METAL        12   \n",
       "...          ...       ...                              ...       ...   \n",
       "285416    561903     21900                   KEY FOB , SHED        24   \n",
       "285417    561903     48187              DOORMAT NEW ENGLAND         2   \n",
       "285418    561903     85152  HAND OVER THE CHOCOLATE   SIGN         12   \n",
       "285419    561903     82600            NO SINGING METAL SIGN        12   \n",
       "285420    561903     21175      GIN + TONIC DIET METAL SIGN        12   \n",
       "\n",
       "        UnitPrice  CustomerID         Country time_intervals  Total Price  \\\n",
       "245903       1.25        2909  United Kingdom    04:00-07:59        15.00   \n",
       "245904       0.85        2909  United Kingdom    04:00-07:59        20.40   \n",
       "245905       4.95        2909  United Kingdom    04:00-07:59        14.85   \n",
       "245906       0.95        2909  United Kingdom    04:00-07:59        11.40   \n",
       "245907       1.25        2909  United Kingdom    04:00-07:59        15.00   \n",
       "...           ...         ...             ...            ...          ...   \n",
       "285416       0.65        3525  United Kingdom    12:00-15:59        15.60   \n",
       "285417       7.95        3525  United Kingdom    12:00-15:59        15.90   \n",
       "285418       2.10        3525  United Kingdom    12:00-15:59        25.20   \n",
       "285419       2.10        3525  United Kingdom    12:00-15:59        25.20   \n",
       "285420       2.55        3525  United Kingdom    12:00-15:59        30.60   \n",
       "\n",
       "        Money_bins  \n",
       "245903           0  \n",
       "245904           0  \n",
       "245905           0  \n",
       "245906           0  \n",
       "245907           0  \n",
       "...            ...  \n",
       "285416           0  \n",
       "285417           0  \n",
       "285418           0  \n",
       "285419           0  \n",
       "285420           0  \n",
       "\n",
       "[38716 rows x 10 columns]"
      ]
     },
     "execution_count": 139,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "og_jul2011 = df_list_month_intervals[7]\n",
    "og_jul2011\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {
    "colab": {
     "base_uri": "https://localhost:8080/"
    },
    "collapsed": true,
    "id": "yusDwJD_7OBb",
    "outputId": "a614f23d-6725-4b6d-f184-dc8e2638babf"
   },
   "outputs": [
    {
     "data": {
      "text/html": [
       "\n",
       "  <div id=\"df-000c5f63-1f91-43b0-99e1-a371d82ec633\">\n",
       "    <div class=\"colab-df-container\">\n",
       "      <div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>No. of visits</th>\n",
       "      <th>Mean_purch</th>\n",
       "      <th>Sum_purch</th>\n",
       "      <th>Item_count</th>\n",
       "      <th>Total_quantity</th>\n",
       "      <th>Avg_quant</th>\n",
       "      <th>CustomerID</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>1</td>\n",
       "      <td>40.405000</td>\n",
       "      <td>484.86</td>\n",
       "      <td>12</td>\n",
       "      <td>100</td>\n",
       "      <td>8.333333</td>\n",
       "      <td>11</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>1</td>\n",
       "      <td>15.987368</td>\n",
       "      <td>303.76</td>\n",
       "      <td>19</td>\n",
       "      <td>144</td>\n",
       "      <td>7.578947</td>\n",
       "      <td>15</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>1</td>\n",
       "      <td>25.774000</td>\n",
       "      <td>902.09</td>\n",
       "      <td>35</td>\n",
       "      <td>429</td>\n",
       "      <td>12.257143</td>\n",
       "      <td>34</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>1</td>\n",
       "      <td>17.354429</td>\n",
       "      <td>1214.81</td>\n",
       "      <td>70</td>\n",
       "      <td>704</td>\n",
       "      <td>10.057143</td>\n",
       "      <td>40</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>1</td>\n",
       "      <td>31.673889</td>\n",
       "      <td>1710.39</td>\n",
       "      <td>54</td>\n",
       "      <td>857</td>\n",
       "      <td>15.870370</td>\n",
       "      <td>46</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>...</th>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>945</th>\n",
       "      <td>1</td>\n",
       "      <td>16.846552</td>\n",
       "      <td>488.55</td>\n",
       "      <td>29</td>\n",
       "      <td>224</td>\n",
       "      <td>7.724138</td>\n",
       "      <td>4324</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>946</th>\n",
       "      <td>1</td>\n",
       "      <td>25.500000</td>\n",
       "      <td>25.50</td>\n",
       "      <td>1</td>\n",
       "      <td>2</td>\n",
       "      <td>2.000000</td>\n",
       "      <td>4325</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>947</th>\n",
       "      <td>1</td>\n",
       "      <td>20.369189</td>\n",
       "      <td>753.66</td>\n",
       "      <td>37</td>\n",
       "      <td>392</td>\n",
       "      <td>10.594595</td>\n",
       "      <td>4328</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>948</th>\n",
       "      <td>2</td>\n",
       "      <td>2.512105</td>\n",
       "      <td>143.19</td>\n",
       "      <td>54</td>\n",
       "      <td>102</td>\n",
       "      <td>1.789474</td>\n",
       "      <td>4337</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>949</th>\n",
       "      <td>209</td>\n",
       "      <td>10.020202</td>\n",
       "      <td>119130.18</td>\n",
       "      <td>1986</td>\n",
       "      <td>38107</td>\n",
       "      <td>3.205232</td>\n",
       "      <td>4339</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "<p>950 rows × 7 columns</p>\n",
       "</div>\n",
       "      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-000c5f63-1f91-43b0-99e1-a371d82ec633')\"\n",
       "              title=\"Convert this dataframe to an interactive table.\"\n",
       "              style=\"display:none;\">\n",
       "        \n",
       "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
       "       width=\"24px\">\n",
       "    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n",
       "    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n",
       "  </svg>\n",
       "      </button>\n",
       "      \n",
       "  <style>\n",
       "    .colab-df-container {\n",
       "      display:flex;\n",
       "      flex-wrap:wrap;\n",
       "      gap: 12px;\n",
       "    }\n",
       "\n",
       "    .colab-df-convert {\n",
       "      background-color: #E8F0FE;\n",
       "      border: none;\n",
       "      border-radius: 50%;\n",
       "      cursor: pointer;\n",
       "      display: none;\n",
       "      fill: #1967D2;\n",
       "      height: 32px;\n",
       "      padding: 0 0 0 0;\n",
       "      width: 32px;\n",
       "    }\n",
       "\n",
       "    .colab-df-convert:hover {\n",
       "      background-color: #E2EBFA;\n",
       "      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
       "      fill: #174EA6;\n",
       "    }\n",
       "\n",
       "    [theme=dark] .colab-df-convert {\n",
       "      background-color: #3B4455;\n",
       "      fill: #D2E3FC;\n",
       "    }\n",
       "\n",
       "    [theme=dark] .colab-df-convert:hover {\n",
       "      background-color: #434B5C;\n",
       "      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
       "      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
       "      fill: #FFFFFF;\n",
       "    }\n",
       "  </style>\n",
       "\n",
       "      <script>\n",
       "        const buttonEl =\n",
       "          document.querySelector('#df-000c5f63-1f91-43b0-99e1-a371d82ec633 button.colab-df-convert');\n",
       "        buttonEl.style.display =\n",
       "          google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
       "\n",
       "        async function convertToInteractive(key) {\n",
       "          const element = document.querySelector('#df-000c5f63-1f91-43b0-99e1-a371d82ec633');\n",
       "          const dataTable =\n",
       "            await google.colab.kernel.invokeFunction('convertToInteractive',\n",
       "                                                     [key], {});\n",
       "          if (!dataTable) return;\n",
       "\n",
       "          const docLinkHtml = 'Like what you see? Visit the ' +\n",
       "            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n",
       "            + ' to learn more about interactive tables.';\n",
       "          element.innerHTML = '';\n",
       "          dataTable['output_type'] = 'display_data';\n",
       "          await google.colab.output.renderOutput(dataTable, element);\n",
       "          const docLink = document.createElement('div');\n",
       "          docLink.innerHTML = docLinkHtml;\n",
       "          element.appendChild(docLink);\n",
       "        }\n",
       "      </script>\n",
       "    </div>\n",
       "  </div>\n",
       "  "
      ],
      "text/plain": [
       "     No. of visits  Mean_purch  Sum_purch  Item_count  Total_quantity  \\\n",
       "0                1   40.405000     484.86          12             100   \n",
       "1                1   15.987368     303.76          19             144   \n",
       "2                1   25.774000     902.09          35             429   \n",
       "3                1   17.354429    1214.81          70             704   \n",
       "4                1   31.673889    1710.39          54             857   \n",
       "..             ...         ...        ...         ...             ...   \n",
       "945              1   16.846552     488.55          29             224   \n",
       "946              1   25.500000      25.50           1               2   \n",
       "947              1   20.369189     753.66          37             392   \n",
       "948              2    2.512105     143.19          54             102   \n",
       "949            209   10.020202  119130.18        1986           38107   \n",
       "\n",
       "     Avg_quant  CustomerID  \n",
       "0     8.333333          11  \n",
       "1     7.578947          15  \n",
       "2    12.257143          34  \n",
       "3    10.057143          40  \n",
       "4    15.870370          46  \n",
       "..         ...         ...  \n",
       "945   7.724138        4324  \n",
       "946   2.000000        4325  \n",
       "947  10.594595        4328  \n",
       "948   1.789474        4337  \n",
       "949   3.205232        4339  \n",
       "\n",
       "[950 rows x 7 columns]"
      ]
     },
     "execution_count": 140,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "dvt_jul2011= person_df(og_jul2011) #Our function gives such a dataframe\n",
    "#By which we can form clusters using KMeans\n",
    "dvt_jul2011"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {
    "colab": {
     "base_uri": "https://localhost:8080/"
    },
    "collapsed": true,
    "id": "6uS0WNxb7XTZ",
    "outputId": "337573cf-57e8-45b4-eac5-c01151260eb3"
   },
   "outputs": [
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "/usr/local/lib/python3.9/dist-packages/sklearn/cluster/_kmeans.py:870: FutureWarning: The default value of `n_init` will change from 10 to 'auto' in 1.4. Set the value of `n_init` explicitly to suppress the warning\n",
      "  warnings.warn(\n"
     ]
    },
    {
     "data": {
      "text/html": [
       "\n",
       "  <div id=\"df-2bc19a8e-16e9-4c0b-bb18-230d3493453c\">\n",
       "    <div class=\"colab-df-container\">\n",
       "      <div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>No. of visits</th>\n",
       "      <th>Mean_purch</th>\n",
       "      <th>Sum_purch</th>\n",
       "      <th>Item_count</th>\n",
       "      <th>Total_quantity</th>\n",
       "      <th>Avg_quant</th>\n",
       "      <th>CustomerID</th>\n",
       "      <th>cluster_labels</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>1</td>\n",
       "      <td>40.405000</td>\n",
       "      <td>484.86</td>\n",
       "      <td>12</td>\n",
       "      <td>100</td>\n",
       "      <td>8.333333</td>\n",
       "      <td>11</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>1</td>\n",
       "      <td>15.987368</td>\n",
       "      <td>303.76</td>\n",
       "      <td>19</td>\n",
       "      <td>144</td>\n",
       "      <td>7.578947</td>\n",
       "      <td>15</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>1</td>\n",
       "      <td>25.774000</td>\n",
       "      <td>902.09</td>\n",
       "      <td>35</td>\n",
       "      <td>429</td>\n",
       "      <td>12.257143</td>\n",
       "      <td>34</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>1</td>\n",
       "      <td>17.354429</td>\n",
       "      <td>1214.81</td>\n",
       "      <td>70</td>\n",
       "      <td>704</td>\n",
       "      <td>10.057143</td>\n",
       "      <td>40</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>1</td>\n",
       "      <td>31.673889</td>\n",
       "      <td>1710.39</td>\n",
       "      <td>54</td>\n",
       "      <td>857</td>\n",
       "      <td>15.870370</td>\n",
       "      <td>46</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>...</th>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>945</th>\n",
       "      <td>1</td>\n",
       "      <td>16.846552</td>\n",
       "      <td>488.55</td>\n",
       "      <td>29</td>\n",
       "      <td>224</td>\n",
       "      <td>7.724138</td>\n",
       "      <td>4324</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>946</th>\n",
       "      <td>1</td>\n",
       "      <td>25.500000</td>\n",
       "      <td>25.50</td>\n",
       "      <td>1</td>\n",
       "      <td>2</td>\n",
       "      <td>2.000000</td>\n",
       "      <td>4325</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>947</th>\n",
       "      <td>1</td>\n",
       "      <td>20.369189</td>\n",
       "      <td>753.66</td>\n",
       "      <td>37</td>\n",
       "      <td>392</td>\n",
       "      <td>10.594595</td>\n",
       "      <td>4328</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>948</th>\n",
       "      <td>2</td>\n",
       "      <td>2.512105</td>\n",
       "      <td>143.19</td>\n",
       "      <td>54</td>\n",
       "      <td>102</td>\n",
       "      <td>1.789474</td>\n",
       "      <td>4337</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>949</th>\n",
       "      <td>209</td>\n",
       "      <td>10.020202</td>\n",
       "      <td>119130.18</td>\n",
       "      <td>1986</td>\n",
       "      <td>38107</td>\n",
       "      <td>3.205232</td>\n",
       "      <td>4339</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "<p>950 rows × 8 columns</p>\n",
       "</div>\n",
       "      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-2bc19a8e-16e9-4c0b-bb18-230d3493453c')\"\n",
       "              title=\"Convert this dataframe to an interactive table.\"\n",
       "              style=\"display:none;\">\n",
       "        \n",
       "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
       "       width=\"24px\">\n",
       "    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n",
       "    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n",
       "  </svg>\n",
       "      </button>\n",
       "      \n",
       "  <style>\n",
       "    .colab-df-container {\n",
       "      display:flex;\n",
       "      flex-wrap:wrap;\n",
       "      gap: 12px;\n",
       "    }\n",
       "\n",
       "    .colab-df-convert {\n",
       "      background-color: #E8F0FE;\n",
       "      border: none;\n",
       "      border-radius: 50%;\n",
       "      cursor: pointer;\n",
       "      display: none;\n",
       "      fill: #1967D2;\n",
       "      height: 32px;\n",
       "      padding: 0 0 0 0;\n",
       "      width: 32px;\n",
       "    }\n",
       "\n",
       "    .colab-df-convert:hover {\n",
       "      background-color: #E2EBFA;\n",
       "      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
       "      fill: #174EA6;\n",
       "    }\n",
       "\n",
       "    [theme=dark] .colab-df-convert {\n",
       "      background-color: #3B4455;\n",
       "      fill: #D2E3FC;\n",
       "    }\n",
       "\n",
       "    [theme=dark] .colab-df-convert:hover {\n",
       "      background-color: #434B5C;\n",
       "      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
       "      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
       "      fill: #FFFFFF;\n",
       "    }\n",
       "  </style>\n",
       "\n",
       "      <script>\n",
       "        const buttonEl =\n",
       "          document.querySelector('#df-2bc19a8e-16e9-4c0b-bb18-230d3493453c button.colab-df-convert');\n",
       "        buttonEl.style.display =\n",
       "          google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
       "\n",
       "        async function convertToInteractive(key) {\n",
       "          const element = document.querySelector('#df-2bc19a8e-16e9-4c0b-bb18-230d3493453c');\n",
       "          const dataTable =\n",
       "            await google.colab.kernel.invokeFunction('convertToInteractive',\n",
       "                                                     [key], {});\n",
       "          if (!dataTable) return;\n",
       "\n",
       "          const docLinkHtml = 'Like what you see? Visit the ' +\n",
       "            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n",
       "            + ' to learn more about interactive tables.';\n",
       "          element.innerHTML = '';\n",
       "          dataTable['output_type'] = 'display_data';\n",
       "          await google.colab.output.renderOutput(dataTable, element);\n",
       "          const docLink = document.createElement('div');\n",
       "          docLink.innerHTML = docLinkHtml;\n",
       "          element.appendChild(docLink);\n",
       "        }\n",
       "      </script>\n",
       "    </div>\n",
       "  </div>\n",
       "  "
      ],
      "text/plain": [
       "     No. of visits  Mean_purch  Sum_purch  Item_count  Total_quantity  \\\n",
       "0                1   40.405000     484.86          12             100   \n",
       "1                1   15.987368     303.76          19             144   \n",
       "2                1   25.774000     902.09          35             429   \n",
       "3                1   17.354429    1214.81          70             704   \n",
       "4                1   31.673889    1710.39          54             857   \n",
       "..             ...         ...        ...         ...             ...   \n",
       "945              1   16.846552     488.55          29             224   \n",
       "946              1   25.500000      25.50           1               2   \n",
       "947              1   20.369189     753.66          37             392   \n",
       "948              2    2.512105     143.19          54             102   \n",
       "949            209   10.020202  119130.18        1986           38107   \n",
       "\n",
       "     Avg_quant  CustomerID  cluster_labels  \n",
       "0     8.333333          11               0  \n",
       "1     7.578947          15               0  \n",
       "2    12.257143          34               0  \n",
       "3    10.057143          40               0  \n",
       "4    15.870370          46               0  \n",
       "..         ...         ...             ...  \n",
       "945   7.724138        4324               0  \n",
       "946   2.000000        4325               0  \n",
       "947  10.594595        4328               0  \n",
       "948   1.789474        4337               0  \n",
       "949   3.205232        4339               1  \n",
       "\n",
       "[950 rows x 8 columns]"
      ]
     },
     "execution_count": 141,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "df_jul2011 = df_cluster_labels(dvt_jul2011,3)\n",
    "df_jul2011"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {
    "colab": {
     "base_uri": "https://localhost:8080/"
    },
    "id": "kY7q4LS3oPKo",
    "outputId": "e2bccd35-6252-4677-cecd-0db1084aedd9"
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "The Silhouette Score is :- 0.8626966432111031\n"
     ]
    }
   ],
   "source": [
    "silhte_score_jul2011 = silhouette_score(dvt_jul2011, df_jul2011['cluster_labels'])\n",
    "print(\"The Silhouette Score is :- \"+str(silhte_score_jul2011))"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {
    "colab": {
     "base_uri": "https://localhost:8080/"
    },
    "collapsed": true,
    "id": "sD_UPnd67bsG",
    "outputId": "e901361c-7f20-48d5-cd95-2fd4be5ecef5"
   },
   "outputs": [
    {
     "data": {
      "text/plain": [
       "0    940\n",
       "2      9\n",
       "1      1\n",
       "Name: cluster_labels, dtype: int64"
      ]
     },
     "execution_count": 143,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "df_jul2011['cluster_labels'].value_counts()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {
    "colab": {
     "base_uri": "https://localhost:8080/"
    },
    "collapsed": true,
    "id": "2bPbfJXl7gRL",
    "outputId": "5fb12d47-7f08-48a1-c289-60839c22138a"
   },
   "outputs": [
    {
     "data": {
      "image/png": "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QufbsWMHHnjgAQB5NwgdOXIk1q5dC51OhyeffBKzZs2Ch4eHWn/48GGMGDEC+/fvR+3atfH6669j/PjxVstcuXIl3nvvPfz5559o0qQJpk+fjkcffVQdFxFMmTIFCxcuRGpqKrp164a5c+eiadOmJd7e8rrdwsgNa7Hp9KkiA9aMh/vgyXtbarY+IiKi6qQ0n9+V5j5W1UF5Bav0nByM3LAWO8+dhaOig0AgyAuDY4O64bX7AjVbFxERUXVTms9vnnhTBbg5OeGrx5/AoaRErPn9JNKyslDf4ImnWrSEfw3tT5gnIiKiwjFYVRGKoqCdrx/a+frZuhUiIqJqq1JfFUhERERkTxisiIiIiDTCYEVERESkEQYrIiIiIo0wWBERERFphMGKiIiISCMMVkREREQaYbAiIiIi0giDFREREZFGGKyIiIiINMJgRURERKQRBisiIiIijTBYEREREWmEwYqIiIhIIwxWRERERBphsCIiIiLSCIMVERERkUYYrIiIiIg0wmBFREREpBEGKyIiIiKNMFgRERERaYTBioiIiEgjDFZEREREGmGwIiIiItIIgxURERGRRhisiIiIiDTCYEVERESkEQYrIiIiIo0wWBERERFphMGKiIiISCMMVkREREQaYbAiIiIi0giDFREREZFGGKyIiIiINMJgRURERKQRBisiIiIijTBYEREREWmEwYqIiIhIIwxWRERERBphsCIiIiLSCIMVERERkUYYrIiIiIg0wmBFREREpBEGKyIiIiKN2DRY7d69G4899hj8/f2hKAp+/vlnq3ERweTJk+Hn5wdXV1cEBwfj1KlTVjUpKSkYOHAgDAYDvLy8EB4ejhs3bljVHD58GN27d4eLiwvq16+P6dOnF+hl5cqVaN68OVxcXNC6dWts2LCh1L0QERFR9WbTYHXz5k20bdsWc+bMKXR8+vTpmDVrFubPn4+YmBi4u7sjJCQEmZmZas3AgQNx7NgxREVFYd26ddi9ezeGDRumjptMJvTu3RsNGzZEbGwsZsyYgalTp2LhwoVqzd69exEWFobw8HDExcUhNDQUoaGhOHr0aKl6ISIiompOKgkA8tNPP6nvLRaL+Pr6yowZM9RpqampotfrZdmyZSIicvz4cQEg+/fvV2s2btwoiqLIxYsXRURk7ty54u3tLVlZWWrN+PHjpVmzZur7AQMGSN++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bKxas337dlgsFgQGBqo1u3fvRk5OjloTFRWFZs2awdvbW625dT35NfnrISIiIqrUVwUOGTJE6tWrJ+vWrZOzZ8/KqlWrpHbt2vL222+rNZGRkeLl5SWrV6+Ww4cPS79+/SQgIEAyMjLUmj59+kj79u0lJiZG9uzZI02aNJGwsDB1PDU1VXx8fGTQoEFy9OhRWb58ubi5ucmCBQvUml9//VUcHR3lk08+kRMnTsiUKVPEyclJjhw5UuLt4VWBRERE9qc0n9+VOliZTCYZNWqUNGjQQFxcXOTuu++Wd9991+q2CBaLRSZNmiQ+Pj6i1+ulV69ekpCQYLWca9euSVhYmHh4eIjBYJChQ4dKWlqaVc2hQ4ekW7duotfrpV69ehIZGVmgnxUrVkjTpk3F2dlZWrZsKevXry/V9jBYERER2Z/SfH4rIrfcxpzKlclkgqenJ4xGIwwGg63bISIiohIozed3pT7HioiIiMieMFgRERERaYTBioiIiEgjDFZEREREGmGwIiIiItIIgxURERGRRhisiIiIiDTCYEVERESkEQYrIiIiIo0wWBERERFphMGKiIiISCMMVkREREQaYbAiIiIi0giDFREREZFGGKyIiIiINOJY1hlTU1Oxb98+JCcnw2KxWI0NHjz4jhsjIiIisjdlClZr167FwIEDcePGDRgMBiiKoo4pisJgRURERNVSmb4KHDt2LF588UXcuHEDqampuH79uvpKSUnRukciIiIiu1CmYHXx4kW88cYbcHNz07ofIiIiIrtVpmAVEhKCAwcOaN0LERERkV0r8TlWa9asUf/ct29fjBs3DsePH0fr1q3h5ORkVfv4449r1yERERGRnVBEREpSqNOV7OCWoigwm8131FRVZTKZ4OnpCaPRCIPBYOt2iIiIqARK8/ld4iNW/7ylAhERERFZ4w1CiYiIiDRSpmD1xhtvYNasWQWmz549G6NHj77TnoiIiIjsUpmC1f/93/+ha9euBabff//9+PHHH++4KSIiIiJ7VKZgde3aNXh6ehaYbjAYcPXq1TtuioiIiMgelSlY3XPPPdi0aVOB6Rs3bsTdd999x00RERER2aMyPStwzJgxGDlyJK5cuYKHHnoIALBt2zbMnDkTn332mZb9EREREdmNMgWrF198EVlZWZg2bRo+/PBDAECjRo0wb948PoCZiIiIqq1SB6vc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BTt37gQA7Ny5E4qiYOPGjejYsSP0ej327NkDi8WC6dOn45577oFer0eDBg0wbdo0q/WfOXMGDz74INzc3NC2bVtER0eXqG8iujMMVkRkV1588UV8/fXX6vtFixZh6NChVjURERH45ptvMH/+fBw7dgxvvvkmnn/+eezatQtAXvC66667sHLlShw/fhyTJ0/GO++8gxUrVlgtZ8eOHTh9+jR27NiBJUuWYPHixVi8eHGJe50xYwbatm2LuLg4TJgwAaNGjUJUVFSpt3nChAmIjIzEiRMn0KZNG0ycOBGRkZGYNGkSjh8/ju+//x4+Pj5W87z77rt46623EB8fj6ZNmyIsLIxHu4gqgo0fAk1EVCJDhgyRfv36SXJysuj1evnzzz/lzz//FBcXF7ly5Yr069dPhgwZIpmZmeLm5iZ79+61mj88PFzCwsKKXP6IESPkySeftFpfw4YNJTc3V5329NNPyzPPPFOifhs2bCh9+vSxmvbMM8/II488IiIiZ8+eFQASFxenjl+/fl0AyI4dO0REZMeOHQJAfv75Z7XGZDKJXq+XL7/8stD15i/3v//9rzrt2LFjAkBOnDhRot6JqOwcbZrqiIhKqU6dOujbty8WL14MEUHfvn1Ru3ZtdfyPP/5Aeno6Hn74Yav5srOzrb4unDNnDhYtWoTz588jIyMD2dnZaNeundU8LVu2hIODg/rez88PR44cKXGvQUFBBd5/9tlnJZ4/X6dOndQ/nzhxAllZWejVq1ex87Rp00b9s5+fHwAgOTkZzZs3L/X6iajkGKyIyO68+OKLGDlyJABYnbcEADdu3AAArF+/HvXq1bMa0+v1AIDly5fjrbfewsyZMxEUFIQaNWpgxowZiImJsap3cnKyeq8oCiwWiybboNPlnYkhIuq0os7fcnd3V//s6upaouXf2ruiKACgWe9EVDQGKyKyO3369EF2djYURUFISIjVWIsWLaDX63H+/Hn07Nmz0Pl//fVX3H///XjttdfUaadPn9a8z99++63A+3vvvRdA3pE3ALh8+bJ6JK0k955q0qQJXF1dsW3bNrz00kvaNkxEd4zBiojsjoODA06cOKH++VY1atTAW2+9hTfffBMWiwXdunWD0WjEr7/+CoPBgCFDhqBJkyb45ptvsHnzZgQEBODbb7/F/v37ERAQoGmfv/76K6ZPn47Q0FBERUVh5cqVWL9+PYC8I09dunRBZGQkAgICkJycjPfee++2y3RxccH48ePx9ttvw9nZGV27dsWVK1dw7NgxhIeHa9o/EZUegxUR2SWDwVDk2Icffog6deogIiICZ86cgZeXFzp06IB33nkHAPDKK68gLi4OzzzzDBRFQVhYGF577TVs3LhR0x7Hjh2LAwcO4P3334fBYMCnn35qdYRt0aJFCA8PR8eOHdGsWTNMnz4dvXv3vu1yJ02aBEdHR0yePBmXLl2Cn59foTdOJaKKp8itX/ATEZEmGjVqhNGjR2P06NG2boWIKhDvY0VERESkEQYrIqJS+uWXX+Dh4VHki4iqL34VSERUShkZGbh48WKR4/fcc08FdkNElQmDFREREZFG+FUgERERkUYYrIiIiIg0wmBFREREpBEGKyIiIiKNMFgRERERaYTBioiIiEgjDFZEREREGmGwIiIiItLI/wOAOWgJydb5igAAAABJRU5ErkJggg==",
      "text/plain": [
       "<Figure size 640x480 with 1 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "plt.scatter(df_jul2011['Mean_purch'], df_jul2011['Sum_purch'], c=df_jul2011['cluster_labels'], cmap='viridis')\n",
    "plt.title(\"For July 2011\")\n",
    "plt.xlabel('Mean_purch')\n",
    "plt.ylabel('Sum_purch')\n",
    "plt.show()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {
    "colab": {
     "base_uri": "https://localhost:8080/"
    },
    "collapsed": true,
    "id": "cFmH6SLi7l_D",
    "outputId": "8ac028ca-9c6b-4f2d-e2bb-c1bdaa254d14"
   },
   "outputs": [
    {
     "data": {
      "text/html": [
       "\n",
       "  <div id=\"df-914f4723-86d6-4921-939e-c6dfd378b14a\">\n",
       "    <div class=\"colab-df-container\">\n",
       "      <div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>No. of visits</th>\n",
       "      <th>Mean_purch</th>\n",
       "      <th>Sum_purch</th>\n",
       "      <th>Item_count</th>\n",
       "      <th>Total_quantity</th>\n",
       "      <th>Avg_quant</th>\n",
       "      <th>CustomerID</th>\n",
       "      <th>cluster_labels</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>1</td>\n",
       "      <td>40.405000</td>\n",
       "      <td>484.86</td>\n",
       "      <td>12</td>\n",
       "      <td>100</td>\n",
       "      <td>8.333333</td>\n",
       "      <td>11</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>1</td>\n",
       "      <td>15.987368</td>\n",
       "      <td>303.76</td>\n",
       "      <td>19</td>\n",
       "      <td>144</td>\n",
       "      <td>7.578947</td>\n",
       "      <td>15</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>1</td>\n",
       "      <td>25.774000</td>\n",
       "      <td>902.09</td>\n",
       "      <td>35</td>\n",
       "      <td>429</td>\n",
       "      <td>12.257143</td>\n",
       "      <td>34</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>1</td>\n",
       "      <td>17.354429</td>\n",
       "      <td>1214.81</td>\n",
       "      <td>70</td>\n",
       "      <td>704</td>\n",
       "      <td>10.057143</td>\n",
       "      <td>40</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>1</td>\n",
       "      <td>31.673889</td>\n",
       "      <td>1710.39</td>\n",
       "      <td>54</td>\n",
       "      <td>857</td>\n",
       "      <td>15.870370</td>\n",
       "      <td>46</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>...</th>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>944</th>\n",
       "      <td>1</td>\n",
       "      <td>16.793333</td>\n",
       "      <td>503.80</td>\n",
       "      <td>30</td>\n",
       "      <td>720</td>\n",
       "      <td>24.000000</td>\n",
       "      <td>4323</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>945</th>\n",
       "      <td>1</td>\n",
       "      <td>16.846552</td>\n",
       "      <td>488.55</td>\n",
       "      <td>29</td>\n",
       "      <td>224</td>\n",
       "      <td>7.724138</td>\n",
       "      <td>4324</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>946</th>\n",
       "      <td>1</td>\n",
       "      <td>25.500000</td>\n",
       "      <td>25.50</td>\n",
       "      <td>1</td>\n",
       "      <td>2</td>\n",
       "      <td>2.000000</td>\n",
       "      <td>4325</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>947</th>\n",
       "      <td>1</td>\n",
       "      <td>20.369189</td>\n",
       "      <td>753.66</td>\n",
       "      <td>37</td>\n",
       "      <td>392</td>\n",
       "      <td>10.594595</td>\n",
       "      <td>4328</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>948</th>\n",
       "      <td>2</td>\n",
       "      <td>2.512105</td>\n",
       "      <td>143.19</td>\n",
       "      <td>54</td>\n",
       "      <td>102</td>\n",
       "      <td>1.789474</td>\n",
       "      <td>4337</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "<p>940 rows × 8 columns</p>\n",
       "</div>\n",
       "      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-914f4723-86d6-4921-939e-c6dfd378b14a')\"\n",
       "              title=\"Convert this dataframe to an interactive table.\"\n",
       "              style=\"display:none;\">\n",
       "        \n",
       "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
       "       width=\"24px\">\n",
       "    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n",
       "    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n",
       "  </svg>\n",
       "      </button>\n",
       "      \n",
       "  <style>\n",
       "    .colab-df-container {\n",
       "      display:flex;\n",
       "      flex-wrap:wrap;\n",
       "      gap: 12px;\n",
       "    }\n",
       "\n",
       "    .colab-df-convert {\n",
       "      background-color: #E8F0FE;\n",
       "      border: none;\n",
       "      border-radius: 50%;\n",
       "      cursor: pointer;\n",
       "      display: none;\n",
       "      fill: #1967D2;\n",
       "      height: 32px;\n",
       "      padding: 0 0 0 0;\n",
       "      width: 32px;\n",
       "    }\n",
       "\n",
       "    .colab-df-convert:hover {\n",
       "      background-color: #E2EBFA;\n",
       "      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
       "      fill: #174EA6;\n",
       "    }\n",
       "\n",
       "    [theme=dark] .colab-df-convert {\n",
       "      background-color: #3B4455;\n",
       "      fill: #D2E3FC;\n",
       "    }\n",
       "\n",
       "    [theme=dark] .colab-df-convert:hover {\n",
       "      background-color: #434B5C;\n",
       "      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
       "      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
       "      fill: #FFFFFF;\n",
       "    }\n",
       "  </style>\n",
       "\n",
       "      <script>\n",
       "        const buttonEl =\n",
       "          document.querySelector('#df-914f4723-86d6-4921-939e-c6dfd378b14a button.colab-df-convert');\n",
       "        buttonEl.style.display =\n",
       "          google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
       "\n",
       "        async function convertToInteractive(key) {\n",
       "          const element = document.querySelector('#df-914f4723-86d6-4921-939e-c6dfd378b14a');\n",
       "          const dataTable =\n",
       "            await google.colab.kernel.invokeFunction('convertToInteractive',\n",
       "                                                     [key], {});\n",
       "          if (!dataTable) return;\n",
       "\n",
       "          const docLinkHtml = 'Like what you see? Visit the ' +\n",
       "            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n",
       "            + ' to learn more about interactive tables.';\n",
       "          element.innerHTML = '';\n",
       "          dataTable['output_type'] = 'display_data';\n",
       "          await google.colab.output.renderOutput(dataTable, element);\n",
       "          const docLink = document.createElement('div');\n",
       "          docLink.innerHTML = docLinkHtml;\n",
       "          element.appendChild(docLink);\n",
       "        }\n",
       "      </script>\n",
       "    </div>\n",
       "  </div>\n",
       "  "
      ],
      "text/plain": [
       "     No. of visits  Mean_purch  Sum_purch  Item_count  Total_quantity  \\\n",
       "0                1   40.405000     484.86          12             100   \n",
       "1                1   15.987368     303.76          19             144   \n",
       "2                1   25.774000     902.09          35             429   \n",
       "3                1   17.354429    1214.81          70             704   \n",
       "4                1   31.673889    1710.39          54             857   \n",
       "..             ...         ...        ...         ...             ...   \n",
       "944              1   16.793333     503.80          30             720   \n",
       "945              1   16.846552     488.55          29             224   \n",
       "946              1   25.500000      25.50           1               2   \n",
       "947              1   20.369189     753.66          37             392   \n",
       "948              2    2.512105     143.19          54             102   \n",
       "\n",
       "     Avg_quant  CustomerID  cluster_labels  \n",
       "0     8.333333          11               0  \n",
       "1     7.578947          15               0  \n",
       "2    12.257143          34               0  \n",
       "3    10.057143          40               0  \n",
       "4    15.870370          46               0  \n",
       "..         ...         ...             ...  \n",
       "944  24.000000        4323               0  \n",
       "945   7.724138        4324               0  \n",
       "946   2.000000        4325               0  \n",
       "947  10.594595        4328               0  \n",
       "948   1.789474        4337               0  \n",
       "\n",
       "[940 rows x 8 columns]"
      ]
     },
     "execution_count": 145,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "#Below is for outliers:-\n",
    "\n",
    "df_jul2011 = df_jul2011[df_jul2011['cluster_labels']!=1]\n",
    "df_jul2011 = df_jul2011[df_jul2011['cluster_labels']!=2]\n",
    "\n",
    "print(df_jul2011['cluster_labels'].value_counts())\n",
    "\n",
    "df_jul2011"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {
    "colab": {
     "base_uri": "https://localhost:8080/"
    },
    "collapsed": true,
    "id": "f7IRH4KV7sKi",
    "outputId": "3f716f3e-66ae-4e6c-a133-fec0c5a279d2"
   },
   "outputs": [
    {
     "data": {
      "text/plain": [
       "0    940\n",
       "Name: cluster_labels, dtype: int64"
      ]
     },
     "execution_count": 146,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": []
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {
    "colab": {
     "base_uri": "https://localhost:8080/"
    },
    "collapsed": true,
    "id": "xz_S8tA27vq8",
    "outputId": "06930386-51ae-43d7-9fec-c50b8644cfb1"
   },
   "outputs": [
    {
     "data": {
      "text/html": [
       "\n",
       "  <div id=\"df-57151ed4-4acb-4df6-995a-9ccb898857dc\">\n",
       "    <div class=\"colab-df-container\">\n",
       "      <div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>No. of visits</th>\n",
       "      <th>Mean_purch</th>\n",
       "      <th>Sum_purch</th>\n",
       "      <th>Item_count</th>\n",
       "      <th>Total_quantity</th>\n",
       "      <th>Avg_quant</th>\n",
       "      <th>CustomerID</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>1</td>\n",
       "      <td>40.405000</td>\n",
       "      <td>484.86</td>\n",
       "      <td>12</td>\n",
       "      <td>100</td>\n",
       "      <td>8.333333</td>\n",
       "      <td>11</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>1</td>\n",
       "      <td>15.987368</td>\n",
       "      <td>303.76</td>\n",
       "      <td>19</td>\n",
       "      <td>144</td>\n",
       "      <td>7.578947</td>\n",
       "      <td>15</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>1</td>\n",
       "      <td>25.774000</td>\n",
       "      <td>902.09</td>\n",
       "      <td>35</td>\n",
       "      <td>429</td>\n",
       "      <td>12.257143</td>\n",
       "      <td>34</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>1</td>\n",
       "      <td>17.354429</td>\n",
       "      <td>1214.81</td>\n",
       "      <td>70</td>\n",
       "      <td>704</td>\n",
       "      <td>10.057143</td>\n",
       "      <td>40</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>1</td>\n",
       "      <td>31.673889</td>\n",
       "      <td>1710.39</td>\n",
       "      <td>54</td>\n",
       "      <td>857</td>\n",
       "      <td>15.870370</td>\n",
       "      <td>46</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>...</th>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>944</th>\n",
       "      <td>1</td>\n",
       "      <td>16.793333</td>\n",
       "      <td>503.80</td>\n",
       "      <td>30</td>\n",
       "      <td>720</td>\n",
       "      <td>24.000000</td>\n",
       "      <td>4323</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>945</th>\n",
       "      <td>1</td>\n",
       "      <td>16.846552</td>\n",
       "      <td>488.55</td>\n",
       "      <td>29</td>\n",
       "      <td>224</td>\n",
       "      <td>7.724138</td>\n",
       "      <td>4324</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>946</th>\n",
       "      <td>1</td>\n",
       "      <td>25.500000</td>\n",
       "      <td>25.50</td>\n",
       "      <td>1</td>\n",
       "      <td>2</td>\n",
       "      <td>2.000000</td>\n",
       "      <td>4325</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>947</th>\n",
       "      <td>1</td>\n",
       "      <td>20.369189</td>\n",
       "      <td>753.66</td>\n",
       "      <td>37</td>\n",
       "      <td>392</td>\n",
       "      <td>10.594595</td>\n",
       "      <td>4328</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>948</th>\n",
       "      <td>2</td>\n",
       "      <td>2.512105</td>\n",
       "      <td>143.19</td>\n",
       "      <td>54</td>\n",
       "      <td>102</td>\n",
       "      <td>1.789474</td>\n",
       "      <td>4337</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "<p>940 rows × 7 columns</p>\n",
       "</div>\n",
       "      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-57151ed4-4acb-4df6-995a-9ccb898857dc')\"\n",
       "              title=\"Convert this dataframe to an interactive table.\"\n",
       "              style=\"display:none;\">\n",
       "        \n",
       "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
       "       width=\"24px\">\n",
       "    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n",
       "    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n",
       "  </svg>\n",
       "      </button>\n",
       "      \n",
       "  <style>\n",
       "    .colab-df-container {\n",
       "      display:flex;\n",
       "      flex-wrap:wrap;\n",
       "      gap: 12px;\n",
       "    }\n",
       "\n",
       "    .colab-df-convert {\n",
       "      background-color: #E8F0FE;\n",
       "      border: none;\n",
       "      border-radius: 50%;\n",
       "      cursor: pointer;\n",
       "      display: none;\n",
       "      fill: #1967D2;\n",
       "      height: 32px;\n",
       "      padding: 0 0 0 0;\n",
       "      width: 32px;\n",
       "    }\n",
       "\n",
       "    .colab-df-convert:hover {\n",
       "      background-color: #E2EBFA;\n",
       "      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
       "      fill: #174EA6;\n",
       "    }\n",
       "\n",
       "    [theme=dark] .colab-df-convert {\n",
       "      background-color: #3B4455;\n",
       "      fill: #D2E3FC;\n",
       "    }\n",
       "\n",
       "    [theme=dark] .colab-df-convert:hover {\n",
       "      background-color: #434B5C;\n",
       "      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
       "      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
       "      fill: #FFFFFF;\n",
       "    }\n",
       "  </style>\n",
       "\n",
       "      <script>\n",
       "        const buttonEl =\n",
       "          document.querySelector('#df-57151ed4-4acb-4df6-995a-9ccb898857dc button.colab-df-convert');\n",
       "        buttonEl.style.display =\n",
       "          google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
       "\n",
       "        async function convertToInteractive(key) {\n",
       "          const element = document.querySelector('#df-57151ed4-4acb-4df6-995a-9ccb898857dc');\n",
       "          const dataTable =\n",
       "            await google.colab.kernel.invokeFunction('convertToInteractive',\n",
       "                                                     [key], {});\n",
       "          if (!dataTable) return;\n",
       "\n",
       "          const docLinkHtml = 'Like what you see? Visit the ' +\n",
       "            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n",
       "            + ' to learn more about interactive tables.';\n",
       "          element.innerHTML = '';\n",
       "          dataTable['output_type'] = 'display_data';\n",
       "          await google.colab.output.renderOutput(dataTable, element);\n",
       "          const docLink = document.createElement('div');\n",
       "          docLink.innerHTML = docLinkHtml;\n",
       "          element.appendChild(docLink);\n",
       "        }\n",
       "      </script>\n",
       "    </div>\n",
       "  </div>\n",
       "  "
      ],
      "text/plain": [
       "     No. of visits  Mean_purch  Sum_purch  Item_count  Total_quantity  \\\n",
       "0                1   40.405000     484.86          12             100   \n",
       "1                1   15.987368     303.76          19             144   \n",
       "2                1   25.774000     902.09          35             429   \n",
       "3                1   17.354429    1214.81          70             704   \n",
       "4                1   31.673889    1710.39          54             857   \n",
       "..             ...         ...        ...         ...             ...   \n",
       "944              1   16.793333     503.80          30             720   \n",
       "945              1   16.846552     488.55          29             224   \n",
       "946              1   25.500000      25.50           1               2   \n",
       "947              1   20.369189     753.66          37             392   \n",
       "948              2    2.512105     143.19          54             102   \n",
       "\n",
       "     Avg_quant  CustomerID  \n",
       "0     8.333333          11  \n",
       "1     7.578947          15  \n",
       "2    12.257143          34  \n",
       "3    10.057143          40  \n",
       "4    15.870370          46  \n",
       "..         ...         ...  \n",
       "944  24.000000        4323  \n",
       "945   7.724138        4324  \n",
       "946   2.000000        4325  \n",
       "947  10.594595        4328  \n",
       "948   1.789474        4337  \n",
       "\n",
       "[940 rows x 7 columns]"
      ]
     },
     "execution_count": 147,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "#Thus the outliers are removed.\n",
    "#Now we again apply the clustering pipeline\n",
    "\n",
    "df_jul2011_person = df_jul2011.copy(deep=True)\n",
    "df_jul2011_person.drop(['cluster_labels'],axis=1,inplace=True)\n",
    "df_jul2011_person.show()\n",
    "\n",
    "df_jul2011_new = df_cluster_labels(df_jul2011_person,3)\n",
    "df_jul2011_new"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {
    "colab": {
     "base_uri": "https://localhost:8080/"
    },
    "id": "wuOY4Dz2oU1c",
    "outputId": "bc4abdfc-7ab1-477a-b461-654a83b8a4f1"
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "The Silhouette Score is :- 0.5464364639755702\n"
     ]
    }
   ],
   "source": [
    "silhte_score_jul2011_new = silhouette_score(df_jul2011_person, df_jul2011_new['cluster_labels'])\n",
    "print(\"The Silhouette Score is :- \"+str(silhte_score_jul2011_new))\n",
    "#Indicates that silhouette score is realistic for dataset without outliers\n",
    "\n",
    "df_jul2011_new['cluster_labels'].value_counts()\n",
    "#These are comparatively good clusters"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {
    "colab": {
     "base_uri": "https://localhost:8080/"
    },
    "collapsed": true,
    "id": "9r2JZCX476FS",
    "outputId": "cd4f187b-64d1-4c57-c5e3-1def42d4e881"
   },
   "outputs": [
    {
     "data": {
      "text/plain": [
       "1    474\n",
       "0    433\n",
       "2     33\n",
       "Name: cluster_labels, dtype: int64"
      ]
     },
     "execution_count": 150,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": []
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {
    "colab": {
     "base_uri": "https://localhost:8080/"
    },
    "collapsed": true,
    "id": "2RSHfiBR794x",
    "outputId": "762585b5-b1da-4ae9-a6d1-1691b3e3acb2"
   },
   "outputs": [
    {
     "data": {
      "image/png": "",
      "text/plain": [
       "<Figure size 640x480 with 1 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "plt.scatter(df_jul2011_new['Mean_purch'], df_jul2011_new['Sum_purch'], c=df_jul2011_new['cluster_labels'], cmap='viridis')\n",
    "plt.title(\"For July 2011 (After removing outliers)\")\n",
    "plt.xlabel('Mean_purch')\n",
    "plt.ylabel('Sum_purch')\n",
    "plt.show()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {
    "id": "EnB8qDhV8EU6"
   },
   "outputs": [],
   "source": [
    "jul2011 = descrip_dict(og_jul2011,df_jul2011_new)\n",
    "jul2011 = processlis(jul2011)\n",
    "jul2011"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {
    "colab": {
     "base_uri": "https://localhost:8080/"
    },
    "collapsed": true,
    "id": "DkVR3vuh8KjI",
    "outputId": "f8bb3a57-2886-45c2-8e13-8f9321c326c5"
   },
   "outputs": [
    {
     "data": {
      "text/plain": [
       "[     CustomerID                                        Description\n",
       " 0            11  [FAIRY CAKE DESIGN UMBRELLA, CERAMIC STRAWBERR...\n",
       " 1            15  [SET OF 3 REGENCY CAKE TINS, REGENCY CAKESTAND...\n",
       " 2            34  [PAPER CHAIN KIT VINTAGE CHRISTMAS, STAR DECOR...\n",
       " 3            40  [BAKING SET SPACEBOY DESIGN, MINI JIGSAW SPACE...\n",
       " 4            46  [TREASURE TIN GYMKHANA DESIGN, SET OF 4 KNICK ...\n",
       " ..          ...                                                ...\n",
       " 469        2163  [SET OF 36 PAISLEY FLOWER DOILIES, BAG 250g SW...\n",
       " 470        2168                [COLOUR GLASS. STAR T-LIGHT HOLDER]\n",
       " 471        2171  [SPACEBOY LUNCH BOX , CHILDS BREAKFAST SET SPA...\n",
       " 472        2174  [CERAMIC HEART FAIRY CAKE MONEY BANK, SWEETHEA...\n",
       " 473        2191  [WRAP CHRISTMAS VILLAGE, EMPIRE GIFT WRAP, SWA...\n",
       " \n",
       " [474 rows x 2 columns],\n",
       "      CustomerID                                        Description\n",
       " 0          2195  [ZINC HERB GARDEN CONTAINER, SANDALWOOD FAN, P...\n",
       " 1          2206  [LARGE DECO JEWELLERY STAND, BATH BUILDING BLO...\n",
       " 2          2211  [CHARLIE & LOLA WASTEPAPER BIN FLORA, LUNCH BA...\n",
       " 3          2212  [CAKE SHOP  STICKER SHEET, RING OF ROSES BIRTH...\n",
       " 4          2221  [TOY TIDY PINK POLKADOT, BREAD BIN DINER STYLE...\n",
       " ..          ...                                                ...\n",
       " 428        4323  [CHERRY BLOSSOM PASSPORT COVER, 12 PENCILS TAL...\n",
       " 429        4324  [PARTY BUNTING, TEA TIME PARTY BUNTING, ENAMEL...\n",
       " 430        4325                   [SET OF 16 VINTAGE ROSE CUTLERY]\n",
       " 431        4328  [SET OF 36 DOILIES PANTRY DESIGN, SET OF 4 KNI...\n",
       " 432        4337  [BOX OF 9 PEBBLE CANDLES, 6 RIBBONS RUSTIC CHA...\n",
       " \n",
       " [433 rows x 2 columns]]"
      ]
     },
     "execution_count": 153,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": []
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {
    "colab": {
     "base_uri": "https://localhost:8080/"
    },
    "id": "1FYCIJEsNH4p",
    "outputId": "22551579-091c-4975-c08a-a6b9c98b1da8"
   },
   "outputs": [
    {
     "data": {
      "image/png": "",
      "text/plain": [
       "<Figure size 640x480 with 1 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "data": {
      "image/png": "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YrVapVevXjJv3rx6bXn//fdl4MCBYrFYZOjQobJu3Tqv6R6PR2bPni12u12sVquMGzdO8vPzfV5XhioREYn4ngcmEWn4goYEt9uN8PBwuFwur+PCRER0ffE1Dzj2LxERkSYMVSIiIk0YqkRERJowVImIiDRhqBIREWnCUCUiItKEoUpERKQJQ5WIiEgThioREZEmDFUiIiJNGKpERESaMFSJiIg0YagSERFpwlAlIiLShKFKRESkCUOViIhIE4YqERGRJgxVIiIiTRiqREREmjBUiYiINGGoEhERacJQJSIi0oShSkREpAlDlYiISBOGKhERkSYMVSIiIk0YqkRERJowVImIiDRhqBIREWnCUCUiItKEoUpERKQJQ5WIiEgThioREZEmDFUiIiJNGKpERESaMFSJiIg0YagSERFpwlAlIiLShKFKRESkCUOViIhIE4YqERGRJgxVIiIiTRiqREREmjBUiYiINGGoEhERaXLFobp161bcf//96NmzJ0wmEz766COv6SKCOXPmoEePHggJCUFCQgIOHz7sVVNUVISUlBTYbDZERERgypQpOH/+vFfNgQMHcOeddyI4OBjR0dGYP39+vbasXr0agwcPRnBwMGJjY7F+/forbgsREZEuVxyqFy5cwPDhw7F48eIGp8+fPx9vvPEG3nrrLWRmZqJTp05ITExEWVmZUZOSkoJDhw4hLS0Na9euxdatWzF16lRjutvtxvjx49G3b19kZWVhwYIF+NWvfoW3337bqNmxYweSk5MxZcoUZGdnY+LEiZg4cSJycnKuqC1ERETaSCsAkA8//NC47/F4xOFwyIIFC4zHiouLxWq1ysqVK0VEJDc3VwDI7t27jZoNGzaIyWSSEydOiIjIkiVLJDIyUsrLy42amTNnyqBBg4z7kyZNkqSkJK/2xMXFybRp03xuS3NcLpcAEJfL5VM9ERF1TL7mgdZjqkePHoXT6URCQoLxWHh4OOLi4pCRkQEAyMjIQEREBEaPHm3UJCQkwGw2IzMz06i56667YLFYjJrExETk5+fj3LlzRk3t5dTU1CzHl7bUVV5eDrfb7XUjIiLyldZQdTqdAAC73e71uN1uN6Y5nU5ERUV5TQ8MDESXLl28ahqaR+1lNFZTe3pzbakrNTUV4eHhxi06OtqHtSYiIlLY+7eWWbNmweVyGbeCggJ/N4mIiK4h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SrtZs2bB5XIZt4KCAn83iYiIriHaQ7VHjx4YMmSI12M33XQTjh8/DgBwOBwAgMLCQq+awsJCY5rD4cDp06e9pldVVaGoqMirpqF51F5GYzU10+uyWq2w2WxeNyIiIl9pD9U77rgD+fn5Xo998cUX6Nu3LwAgJiYGDocD6enpxnS3243MzEzEx8cDAOLj41FcXIysrCyjZtOmTfB4PIiLizNqtm7disrKSqMmLS0NgwYNMnoax8fHey2npqZmOURERFrp7iG1a9cuCQwMlFdffVUOHz4s7777roSGhsrf//53o2bevHkSEREha9askQMHDsiDDz4oMTExUlpaatRMmDBBRo4cKZmZmbJt2zYZMGCAJCcnG9OLi4vFbrfL448/Ljk5ObJq1SoJDQ2VpUuXGjXbt2+XwMBAWbhwoeTl5cncuXMlKChIDh486NO6sPcvERGJ+J4H2kNVROTjjz+WYcOGidVqlcGDB8vbb7/tNd3j8cjs2bPFbreL1WqVcePGSX5+vlfN2bNnJTk5WcLCwsRms8nkyZOlpKTEq2b//v0yduxYsVqt0qtXL5k3b169trz//vsycOBAsVgsMnToUFm3bp3P68FQJSIiEd/zwCQi4t9t5auX2+1GeHg4XC4Xj68SEV3HfM0Djv1LRESkCUOViIhIE4YqERGRJgxVIiIiTRiqREREmjBUiYiINGGoEhERacJQJSIi0oShSkREpAlDlYiISBOGKhERkSYMVSIiIk0YqkRERJowVImIiDRhqBIREWnCUCUiItKEoUpERKQJQ5WIiEgThioREZEmDFUiIiJNGKpERESaMFSJiIg0YagSERFpwlAlIiLShKFKRESkCUOViIhIE4YqERGRJgxVIiIiTRiqREREmjBUiYiINGGoEhERacJQJSIi0oShSkREpAlDlYiISBOGKhERkSYMVSIiIk0YqkRERJowVImIiDRhqBIREWnCUCUiItKEoUpERKQJQ5WIiEgThioREZEmDFUiIiJNGKpERESatHmozps3DyaTCc8//7zxWFlZGWbMmIGuXbsiLCwMDz/8MAoLC72ed/z4cSQlJSE0NBRRUVF46aWXUFVV5VWzZcsW3HLLLbBarejfvz+WL19eb/mLFy9Gv379EBwcjLi4OOzatastVpOIiKhtQ3X37t1YunQpbr75Zq/Hf/7zn+Pjjz/G6tWr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",
      "text/plain": [
       "<Figure size 500x500 with 1 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "(947, 4)\n",
      "(1, 4)\n",
      "(2, 4)\n"
     ]
    },
    {
     "data": {
      "image/png": "",
      "text/plain": [
       "<Figure size 640x480 with 1 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "data": {
      "image/png": "",
      "text/plain": [
       "<Figure size 500x500 with 1 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "(25, 5)\n",
      "(374, 5)\n",
      "(548, 5)\n"
     ]
    },
    {
     "data": {
      "text/plain": [
       "[     CustomerID                                        Description\n",
       " 0            11  [FAIRY CAKE DESIGN UMBRELLA, CERAMIC STRAWBERR...\n",
       " 1            15  [SET OF 3 REGENCY CAKE TINS, REGENCY CAKESTAND...\n",
       " 2            34  [PAPER CHAIN KIT VINTAGE CHRISTMAS, STAR DECOR...\n",
       " 3            40  [BAKING SET SPACEBOY DESIGN, MINI JIGSAW SPACE...\n",
       " 4            46  [TREASURE TIN GYMKHANA DESIGN, SET OF 4 KNICK ...\n",
       " ..          ...                                                ...\n",
       " 543        2572  [LUNCH BAG RED RETROSPOT, SPACEBOY LUNCH BOX ,...\n",
       " 544        2582  [EDWARDIAN PARASOL RED, EDWARDIAN PARASOL BLAC...\n",
       " 545        2587  [REX CASH+CARRY JUMBO SHOPPER, BUNDLE OF 3 SCH...\n",
       " 546        2607  [Manual, ASS COLOUR GLOWING TIARAS, BAKING SET...\n",
       " 547        2618  [SPOTTY BUNTING, RETROSPOT TEA SET CERAMIC 11 ...\n",
       " \n",
       " [548 rows x 2 columns],\n",
       "      CustomerID                                        Description\n",
       " 0          1978  [DOUGHNUT LIP GLOSS , BUBBLEGUM RING ASSORTED,...\n",
       " 1          2083  [LARGE WHITE HONEYCOMB PAPER BELL  , PASTEL CO...\n",
       " 2          2419  [RED REFECTORY CLOCK , IVORY REFECTORY CLOCK, ...\n",
       " 3          2453  [PASTEL COLOUR HONEYCOMB FAN, JUMBO STORAGE BA...\n",
       " 4          2509  [CLEAR DRAWER KNOB ACRYLIC EDWARDIAN, SET/5 RE...\n",
       " ..          ...                                                ...\n",
       " 369        4310  [RETROSPOT RED WASHING UP GLOVES, RETROSPOT LA...\n",
       " 370        4322  [RED PUDDING SPOON, BLUE PUDDING SPOON, SET OF...\n",
       " 371        4323  [CHERRY BLOSSOM PASSPORT COVER, 12 PENCILS TAL...\n",
       " 372        4324  [PARTY BUNTING, TEA TIME PARTY BUNTING, ENAMEL...\n",
       " 373        4325                   [SET OF 16 VINTAGE ROSE CUTLERY]\n",
       " \n",
       " [374 rows x 2 columns]]"
      ]
     },
     "execution_count": 154,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "pca = PCA(n_components = 3)\n",
    "pca.fit(X = dvt_jul2011)\n",
    "new_dvt = pca.transform(dvt_jul2011)\n",
    "\n",
    "new_dvt = pd.DataFrame(data = new_dvt,columns = ['X0','X1','X2'])\n",
    "model = AgglomerativeClustering(distance_threshold=0, n_clusters=None, linkage='ward').fit(new_dvt)\n",
    "\n",
    "plot_dendrogram(model, truncate_mode=\"level\", p=4)\n",
    "\n",
    "dict_jul2011 =  Agglocls(new_dvt,3)\n",
    "\n",
    "final_dvt_jul2011 = dict_jul2011[0]\n",
    "pca_jul2011 = PCA(n_components = 3)\n",
    "pca_jul2011.fit(X = final_dvt_jul2011)\n",
    "final_dvt_jul2011 = pca_jul2011.transform(final_dvt_jul2011)\n",
    "final_dvt_jul2011 = pd.DataFrame(data = final_dvt_jul2011,columns = ['X0','X1','X2'])\n",
    "AggloDendo(final_dvt_jul2011)\n",
    "\n",
    "dict_jul2011_final =  AggloPca(final_dvt_jul2011,3,dvt_jul2011,'X0','X2')\n",
    "\n",
    "jul2011_agg = descrip_dict(og_jul2011,final_dvt_jul2011)\n",
    "jul2011_agg = processlis(jul2011_agg)\n",
    "jul2011_agg\n",
    "\n",
    "#apr2011 = processlis(apr2011)\n",
    "#apr2011_agg = processlis(apr2011_agg)\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {
    "id": "FMpEvjeJw9dF"
   },
   "outputs": [],
   "source": [
    "Cluster_dict['jul2011'] = (len(jul2011),len(jul2011_agg))\n",
    "dicti_2011jul = {}\n",
    "klis = []\n",
    "for i in range(Cluster_dict['jul2011'][0]):\n",
    "  temp = apriori_rules(jul2011[i],0.075)\n",
    "  klis.append(temp)\n",
    "alis = []\n",
    "for i in range(Cluster_dict['jul2011'][1]):\n",
    "  temp = apriori_rules(jul2011_agg[i],0.075)\n",
    "  alis.append(temp)\n",
    "#apriori_rules(1_agg[0],0.075)\n",
    "dicti_2011jul['K-means'] = klis\n",
    "dicti_2011jul['Agglo'] = alis\n",
    "\n",
    "Rules_dict['jul2011'] = dicti_2011jul"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {
    "id": "aoYMLmUb8cTO"
   },
   "source": [
    "## For August 2011"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {
    "colab": {
     "base_uri": "https://localhost:8080/"
    },
    "collapsed": true,
    "id": "R8M4mCGd8eTk",
    "outputId": "789ae0aa-e184-4445-d7c8-a225796928e2"
   },
   "outputs": [
    {
     "data": {
      "text/html": [
       "\n",
       "  <div id=\"df-355d435f-7495-4045-825e-5829860eead9\">\n",
       "    <div class=\"colab-df-container\">\n",
       "      <div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>InvoiceNo</th>\n",
       "      <th>StockCode</th>\n",
       "      <th>Description</th>\n",
       "      <th>Quantity</th>\n",
       "      <th>UnitPrice</th>\n",
       "      <th>CustomerID</th>\n",
       "      <th>Country</th>\n",
       "      <th>time_intervals</th>\n",
       "      <th>Total Price</th>\n",
       "      <th>Money_bins</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>285421</th>\n",
       "      <td>561904</td>\n",
       "      <td>22075</td>\n",
       "      <td>6 RIBBONS ELEGANT CHRISTMAS</td>\n",
       "      <td>96</td>\n",
       "      <td>1.45</td>\n",
       "      <td>4089</td>\n",
       "      <td>United Kingdom</td>\n",
       "      <td>04:00-07:59</td>\n",
       "      <td>139.20</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>285422</th>\n",
       "      <td>561904</td>\n",
       "      <td>85049E</td>\n",
       "      <td>SCANDINAVIAN REDS RIBBONS</td>\n",
       "      <td>156</td>\n",
       "      <td>1.06</td>\n",
       "      <td>4089</td>\n",
       "      <td>United Kingdom</td>\n",
       "      <td>04:00-07:59</td>\n",
       "      <td>165.36</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>285423</th>\n",
       "      <td>561905</td>\n",
       "      <td>21385</td>\n",
       "      <td>IVORY HANGING DECORATION  HEART</td>\n",
       "      <td>24</td>\n",
       "      <td>0.85</td>\n",
       "      <td>1900</td>\n",
       "      <td>United Kingdom</td>\n",
       "      <td>08:00-11:59</td>\n",
       "      <td>20.40</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>285424</th>\n",
       "      <td>561905</td>\n",
       "      <td>84970L</td>\n",
       "      <td>SINGLE HEART ZINC T-LIGHT HOLDER</td>\n",
       "      <td>12</td>\n",
       "      <td>0.95</td>\n",
       "      <td>1900</td>\n",
       "      <td>United Kingdom</td>\n",
       "      <td>08:00-11:59</td>\n",
       "      <td>11.40</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>285425</th>\n",
       "      <td>561905</td>\n",
       "      <td>84970S</td>\n",
       "      <td>HANGING HEART ZINC T-LIGHT HOLDER</td>\n",
       "      <td>12</td>\n",
       "      <td>0.85</td>\n",
       "      <td>1900</td>\n",
       "      <td>United Kingdom</td>\n",
       "      <td>08:00-11:59</td>\n",
       "      <td>10.20</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>...</th>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>320690</th>\n",
       "      <td>565067</td>\n",
       "      <td>22637</td>\n",
       "      <td>PIGGY BANK RETROSPOT</td>\n",
       "      <td>2</td>\n",
       "      <td>2.55</td>\n",
       "      <td>2584</td>\n",
       "      <td>United Kingdom</td>\n",
       "      <td>16:00-19:59</td>\n",
       "      <td>5.10</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>320691</th>\n",
       "      <td>565067</td>\n",
       "      <td>22646</td>\n",
       "      <td>CERAMIC STRAWBERRY CAKE MONEY BANK</td>\n",
       "      <td>2</td>\n",
       "      <td>1.45</td>\n",
       "      <td>2584</td>\n",
       "      <td>United Kingdom</td>\n",
       "      <td>16:00-19:59</td>\n",
       "      <td>2.90</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>320692</th>\n",
       "      <td>565067</td>\n",
       "      <td>22741</td>\n",
       "      <td>FUNKY DIVA PEN</td>\n",
       "      <td>48</td>\n",
       "      <td>0.85</td>\n",
       "      <td>2584</td>\n",
       "      <td>United Kingdom</td>\n",
       "      <td>16:00-19:59</td>\n",
       "      <td>40.80</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>320694</th>\n",
       "      <td>565070</td>\n",
       "      <td>85032D</td>\n",
       "      <td>NaN</td>\n",
       "      <td>171</td>\n",
       "      <td>0.00</td>\n",
       "      <td>4339</td>\n",
       "      <td>United Kingdom</td>\n",
       "      <td>16:00-19:59</td>\n",
       "      <td>0.00</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>320699</th>\n",
       "      <td>565076</td>\n",
       "      <td>23192</td>\n",
       "      <td>BUNDLE OF 3 ALPHABET EXERCISE BOOKS</td>\n",
       "      <td>1</td>\n",
       "      <td>1.65</td>\n",
       "      <td>4339</td>\n",
       "      <td>United Kingdom</td>\n",
       "      <td>16:00-19:59</td>\n",
       "      <td>1.65</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "<p>34564 rows × 10 columns</p>\n",
       "</div>\n",
       "      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-355d435f-7495-4045-825e-5829860eead9')\"\n",
       "              title=\"Convert this dataframe to an interactive table.\"\n",
       "              style=\"display:none;\">\n",
       "        \n",
       "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
       "       width=\"24px\">\n",
       "    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n",
       "    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n",
       "  </svg>\n",
       "      </button>\n",
       "      \n",
       "  <style>\n",
       "    .colab-df-container {\n",
       "      display:flex;\n",
       "      flex-wrap:wrap;\n",
       "      gap: 12px;\n",
       "    }\n",
       "\n",
       "    .colab-df-convert {\n",
       "      background-color: #E8F0FE;\n",
       "      border: none;\n",
       "      border-radius: 50%;\n",
       "      cursor: pointer;\n",
       "      display: none;\n",
       "      fill: #1967D2;\n",
       "      height: 32px;\n",
       "      padding: 0 0 0 0;\n",
       "      width: 32px;\n",
       "    }\n",
       "\n",
       "    .colab-df-convert:hover {\n",
       "      background-color: #E2EBFA;\n",
       "      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
       "      fill: #174EA6;\n",
       "    }\n",
       "\n",
       "    [theme=dark] .colab-df-convert {\n",
       "      background-color: #3B4455;\n",
       "      fill: #D2E3FC;\n",
       "    }\n",
       "\n",
       "    [theme=dark] .colab-df-convert:hover {\n",
       "      background-color: #434B5C;\n",
       "      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
       "      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
       "      fill: #FFFFFF;\n",
       "    }\n",
       "  </style>\n",
       "\n",
       "      <script>\n",
       "        const buttonEl =\n",
       "          document.querySelector('#df-355d435f-7495-4045-825e-5829860eead9 button.colab-df-convert');\n",
       "        buttonEl.style.display =\n",
       "          google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
       "\n",
       "        async function convertToInteractive(key) {\n",
       "          const element = document.querySelector('#df-355d435f-7495-4045-825e-5829860eead9');\n",
       "          const dataTable =\n",
       "            await google.colab.kernel.invokeFunction('convertToInteractive',\n",
       "                                                     [key], {});\n",
       "          if (!dataTable) return;\n",
       "\n",
       "          const docLinkHtml = 'Like what you see? Visit the ' +\n",
       "            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n",
       "            + ' to learn more about interactive tables.';\n",
       "          element.innerHTML = '';\n",
       "          dataTable['output_type'] = 'display_data';\n",
       "          await google.colab.output.renderOutput(dataTable, element);\n",
       "          const docLink = document.createElement('div');\n",
       "          docLink.innerHTML = docLinkHtml;\n",
       "          element.appendChild(docLink);\n",
       "        }\n",
       "      </script>\n",
       "    </div>\n",
       "  </div>\n",
       "  "
      ],
      "text/plain": [
       "       InvoiceNo StockCode                          Description  Quantity  \\\n",
       "285421    561904     22075         6 RIBBONS ELEGANT CHRISTMAS         96   \n",
       "285422    561904    85049E            SCANDINAVIAN REDS RIBBONS       156   \n",
       "285423    561905     21385      IVORY HANGING DECORATION  HEART        24   \n",
       "285424    561905    84970L     SINGLE HEART ZINC T-LIGHT HOLDER        12   \n",
       "285425    561905    84970S    HANGING HEART ZINC T-LIGHT HOLDER        12   \n",
       "...          ...       ...                                  ...       ...   \n",
       "320690    565067     22637                PIGGY BANK RETROSPOT          2   \n",
       "320691    565067     22646   CERAMIC STRAWBERRY CAKE MONEY BANK         2   \n",
       "320692    565067     22741                       FUNKY DIVA PEN        48   \n",
       "320694    565070    85032D                                  NaN       171   \n",
       "320699    565076     23192  BUNDLE OF 3 ALPHABET EXERCISE BOOKS         1   \n",
       "\n",
       "        UnitPrice  CustomerID         Country time_intervals  Total Price  \\\n",
       "285421       1.45        4089  United Kingdom    04:00-07:59       139.20   \n",
       "285422       1.06        4089  United Kingdom    04:00-07:59       165.36   \n",
       "285423       0.85        1900  United Kingdom    08:00-11:59        20.40   \n",
       "285424       0.95        1900  United Kingdom    08:00-11:59        11.40   \n",
       "285425       0.85        1900  United Kingdom    08:00-11:59        10.20   \n",
       "...           ...         ...             ...            ...          ...   \n",
       "320690       2.55        2584  United Kingdom    16:00-19:59         5.10   \n",
       "320691       1.45        2584  United Kingdom    16:00-19:59         2.90   \n",
       "320692       0.85        2584  United Kingdom    16:00-19:59        40.80   \n",
       "320694       0.00        4339  United Kingdom    16:00-19:59         0.00   \n",
       "320699       1.65        4339  United Kingdom    16:00-19:59         1.65   \n",
       "\n",
       "        Money_bins  \n",
       "285421           0  \n",
       "285422           0  \n",
       "285423           0  \n",
       "285424           0  \n",
       "285425           0  \n",
       "...            ...  \n",
       "320690           0  \n",
       "320691           0  \n",
       "320692           0  \n",
       "320694           0  \n",
       "320699           0  \n",
       "\n",
       "[34564 rows x 10 columns]"
      ]
     },
     "execution_count": 156,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "og_aug2011 = df_list_month_intervals[8]\n",
    "og_aug2011"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {
    "colab": {
     "base_uri": "https://localhost:8080/"
    },
    "collapsed": true,
    "id": "Ikh4olwZ8kzV",
    "outputId": "9119d041-fa90-450c-b1cc-5adf9085533b"
   },
   "outputs": [
    {
     "data": {
      "text/html": [
       "\n",
       "  <div id=\"df-ea0ebaae-8b18-4549-8657-9a5129a249f9\">\n",
       "    <div class=\"colab-df-container\">\n",
       "      <div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>No. of visits</th>\n",
       "      <th>Mean_purch</th>\n",
       "      <th>Sum_purch</th>\n",
       "      <th>Item_count</th>\n",
       "      <th>Total_quantity</th>\n",
       "      <th>Avg_quant</th>\n",
       "      <th>CustomerID</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>1</td>\n",
       "      <td>26.586818</td>\n",
       "      <td>584.91</td>\n",
       "      <td>22</td>\n",
       "      <td>277</td>\n",
       "      <td>12.590909</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>1</td>\n",
       "      <td>17.823333</td>\n",
       "      <td>534.70</td>\n",
       "      <td>30</td>\n",
       "      <td>240</td>\n",
       "      <td>8.000000</td>\n",
       "      <td>13</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>1</td>\n",
       "      <td>15.641667</td>\n",
       "      <td>469.25</td>\n",
       "      <td>30</td>\n",
       "      <td>340</td>\n",
       "      <td>11.333333</td>\n",
       "      <td>15</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>1</td>\n",
       "      <td>36.128571</td>\n",
       "      <td>252.90</td>\n",
       "      <td>7</td>\n",
       "      <td>126</td>\n",
       "      <td>18.000000</td>\n",
       "      <td>16</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>1</td>\n",
       "      <td>18.350588</td>\n",
       "      <td>623.92</td>\n",
       "      <td>34</td>\n",
       "      <td>555</td>\n",
       "      <td>16.323529</td>\n",
       "      <td>17</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>...</th>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>931</th>\n",
       "      <td>1</td>\n",
       "      <td>16.187368</td>\n",
       "      <td>307.56</td>\n",
       "      <td>19</td>\n",
       "      <td>269</td>\n",
       "      <td>14.157895</td>\n",
       "      <td>4312</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>932</th>\n",
       "      <td>1</td>\n",
       "      <td>16.953243</td>\n",
       "      <td>627.27</td>\n",
       "      <td>37</td>\n",
       "      <td>313</td>\n",
       "      <td>8.459459</td>\n",
       "      <td>4318</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>933</th>\n",
       "      <td>1</td>\n",
       "      <td>16.920455</td>\n",
       "      <td>372.25</td>\n",
       "      <td>22</td>\n",
       "      <td>285</td>\n",
       "      <td>12.954545</td>\n",
       "      <td>4328</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>934</th>\n",
       "      <td>1</td>\n",
       "      <td>14.315714</td>\n",
       "      <td>100.21</td>\n",
       "      <td>7</td>\n",
       "      <td>75</td>\n",
       "      <td>10.714286</td>\n",
       "      <td>4336</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>935</th>\n",
       "      <td>128</td>\n",
       "      <td>12.136947</td>\n",
       "      <td>91670.36</td>\n",
       "      <td>1755</td>\n",
       "      <td>26078</td>\n",
       "      <td>3.452668</td>\n",
       "      <td>4339</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "<p>936 rows × 7 columns</p>\n",
       "</div>\n",
       "      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-ea0ebaae-8b18-4549-8657-9a5129a249f9')\"\n",
       "              title=\"Convert this dataframe to an interactive table.\"\n",
       "              style=\"display:none;\">\n",
       "        \n",
       "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
       "       width=\"24px\">\n",
       "    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n",
       "    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n",
       "  </svg>\n",
       "      </button>\n",
       "      \n",
       "  <style>\n",
       "    .colab-df-container {\n",
       "      display:flex;\n",
       "      flex-wrap:wrap;\n",
       "      gap: 12px;\n",
       "    }\n",
       "\n",
       "    .colab-df-convert {\n",
       "      background-color: #E8F0FE;\n",
       "      border: none;\n",
       "      border-radius: 50%;\n",
       "      cursor: pointer;\n",
       "      display: none;\n",
       "      fill: #1967D2;\n",
       "      height: 32px;\n",
       "      padding: 0 0 0 0;\n",
       "      width: 32px;\n",
       "    }\n",
       "\n",
       "    .colab-df-convert:hover {\n",
       "      background-color: #E2EBFA;\n",
       "      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
       "      fill: #174EA6;\n",
       "    }\n",
       "\n",
       "    [theme=dark] .colab-df-convert {\n",
       "      background-color: #3B4455;\n",
       "      fill: #D2E3FC;\n",
       "    }\n",
       "\n",
       "    [theme=dark] .colab-df-convert:hover {\n",
       "      background-color: #434B5C;\n",
       "      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
       "      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
       "      fill: #FFFFFF;\n",
       "    }\n",
       "  </style>\n",
       "\n",
       "      <script>\n",
       "        const buttonEl =\n",
       "          document.querySelector('#df-ea0ebaae-8b18-4549-8657-9a5129a249f9 button.colab-df-convert');\n",
       "        buttonEl.style.display =\n",
       "          google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
       "\n",
       "        async function convertToInteractive(key) {\n",
       "          const element = document.querySelector('#df-ea0ebaae-8b18-4549-8657-9a5129a249f9');\n",
       "          const dataTable =\n",
       "            await google.colab.kernel.invokeFunction('convertToInteractive',\n",
       "                                                     [key], {});\n",
       "          if (!dataTable) return;\n",
       "\n",
       "          const docLinkHtml = 'Like what you see? Visit the ' +\n",
       "            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n",
       "            + ' to learn more about interactive tables.';\n",
       "          element.innerHTML = '';\n",
       "          dataTable['output_type'] = 'display_data';\n",
       "          await google.colab.output.renderOutput(dataTable, element);\n",
       "          const docLink = document.createElement('div');\n",
       "          docLink.innerHTML = docLinkHtml;\n",
       "          element.appendChild(docLink);\n",
       "        }\n",
       "      </script>\n",
       "    </div>\n",
       "  </div>\n",
       "  "
      ],
      "text/plain": [
       "     No. of visits  Mean_purch  Sum_purch  Item_count  Total_quantity  \\\n",
       "0                1   26.586818     584.91          22             277   \n",
       "1                1   17.823333     534.70          30             240   \n",
       "2                1   15.641667     469.25          30             340   \n",
       "3                1   36.128571     252.90           7             126   \n",
       "4                1   18.350588     623.92          34             555   \n",
       "..             ...         ...        ...         ...             ...   \n",
       "931              1   16.187368     307.56          19             269   \n",
       "932              1   16.953243     627.27          37             313   \n",
       "933              1   16.920455     372.25          22             285   \n",
       "934              1   14.315714     100.21           7              75   \n",
       "935            128   12.136947   91670.36        1755           26078   \n",
       "\n",
       "     Avg_quant  CustomerID  \n",
       "0    12.590909           1  \n",
       "1     8.000000          13  \n",
       "2    11.333333          15  \n",
       "3    18.000000          16  \n",
       "4    16.323529          17  \n",
       "..         ...         ...  \n",
       "931  14.157895        4312  \n",
       "932   8.459459        4318  \n",
       "933  12.954545        4328  \n",
       "934  10.714286        4336  \n",
       "935   3.452668        4339  \n",
       "\n",
       "[936 rows x 7 columns]"
      ]
     },
     "execution_count": 157,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "dvt_aug2011= person_df(og_aug2011) #Our function gives such a dataframe\n",
    "#By which we can form clusters using KMeans\n",
    "dvt_aug2011"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {
    "colab": {
     "base_uri": "https://localhost:8080/"
    },
    "collapsed": true,
    "id": "KF3pjb6b8p6y",
    "outputId": "f446a9bb-c0ad-4ad3-ef8f-a524c679c737"
   },
   "outputs": [
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "/usr/local/lib/python3.9/dist-packages/sklearn/cluster/_kmeans.py:870: FutureWarning: The default value of `n_init` will change from 10 to 'auto' in 1.4. Set the value of `n_init` explicitly to suppress the warning\n",
      "  warnings.warn(\n"
     ]
    },
    {
     "data": {
      "text/html": [
       "\n",
       "  <div id=\"df-116086b1-add9-4dda-8f18-689079e92f11\">\n",
       "    <div class=\"colab-df-container\">\n",
       "      <div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>No. of visits</th>\n",
       "      <th>Mean_purch</th>\n",
       "      <th>Sum_purch</th>\n",
       "      <th>Item_count</th>\n",
       "      <th>Total_quantity</th>\n",
       "      <th>Avg_quant</th>\n",
       "      <th>CustomerID</th>\n",
       "      <th>cluster_labels</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>1</td>\n",
       "      <td>26.586818</td>\n",
       "      <td>584.91</td>\n",
       "      <td>22</td>\n",
       "      <td>277</td>\n",
       "      <td>12.590909</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>1</td>\n",
       "      <td>17.823333</td>\n",
       "      <td>534.70</td>\n",
       "      <td>30</td>\n",
       "      <td>240</td>\n",
       "      <td>8.000000</td>\n",
       "      <td>13</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>1</td>\n",
       "      <td>15.641667</td>\n",
       "      <td>469.25</td>\n",
       "      <td>30</td>\n",
       "      <td>340</td>\n",
       "      <td>11.333333</td>\n",
       "      <td>15</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>1</td>\n",
       "      <td>36.128571</td>\n",
       "      <td>252.90</td>\n",
       "      <td>7</td>\n",
       "      <td>126</td>\n",
       "      <td>18.000000</td>\n",
       "      <td>16</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>1</td>\n",
       "      <td>18.350588</td>\n",
       "      <td>623.92</td>\n",
       "      <td>34</td>\n",
       "      <td>555</td>\n",
       "      <td>16.323529</td>\n",
       "      <td>17</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>...</th>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>931</th>\n",
       "      <td>1</td>\n",
       "      <td>16.187368</td>\n",
       "      <td>307.56</td>\n",
       "      <td>19</td>\n",
       "      <td>269</td>\n",
       "      <td>14.157895</td>\n",
       "      <td>4312</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>932</th>\n",
       "      <td>1</td>\n",
       "      <td>16.953243</td>\n",
       "      <td>627.27</td>\n",
       "      <td>37</td>\n",
       "      <td>313</td>\n",
       "      <td>8.459459</td>\n",
       "      <td>4318</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>933</th>\n",
       "      <td>1</td>\n",
       "      <td>16.920455</td>\n",
       "      <td>372.25</td>\n",
       "      <td>22</td>\n",
       "      <td>285</td>\n",
       "      <td>12.954545</td>\n",
       "      <td>4328</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>934</th>\n",
       "      <td>1</td>\n",
       "      <td>14.315714</td>\n",
       "      <td>100.21</td>\n",
       "      <td>7</td>\n",
       "      <td>75</td>\n",
       "      <td>10.714286</td>\n",
       "      <td>4336</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>935</th>\n",
       "      <td>128</td>\n",
       "      <td>12.136947</td>\n",
       "      <td>91670.36</td>\n",
       "      <td>1755</td>\n",
       "      <td>26078</td>\n",
       "      <td>3.452668</td>\n",
       "      <td>4339</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "<p>936 rows × 8 columns</p>\n",
       "</div>\n",
       "      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-116086b1-add9-4dda-8f18-689079e92f11')\"\n",
       "              title=\"Convert this dataframe to an interactive table.\"\n",
       "              style=\"display:none;\">\n",
       "        \n",
       "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
       "       width=\"24px\">\n",
       "    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n",
       "    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n",
       "  </svg>\n",
       "      </button>\n",
       "      \n",
       "  <style>\n",
       "    .colab-df-container {\n",
       "      display:flex;\n",
       "      flex-wrap:wrap;\n",
       "      gap: 12px;\n",
       "    }\n",
       "\n",
       "    .colab-df-convert {\n",
       "      background-color: #E8F0FE;\n",
       "      border: none;\n",
       "      border-radius: 50%;\n",
       "      cursor: pointer;\n",
       "      display: none;\n",
       "      fill: #1967D2;\n",
       "      height: 32px;\n",
       "      padding: 0 0 0 0;\n",
       "      width: 32px;\n",
       "    }\n",
       "\n",
       "    .colab-df-convert:hover {\n",
       "      background-color: #E2EBFA;\n",
       "      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
       "      fill: #174EA6;\n",
       "    }\n",
       "\n",
       "    [theme=dark] .colab-df-convert {\n",
       "      background-color: #3B4455;\n",
       "      fill: #D2E3FC;\n",
       "    }\n",
       "\n",
       "    [theme=dark] .colab-df-convert:hover {\n",
       "      background-color: #434B5C;\n",
       "      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
       "      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
       "      fill: #FFFFFF;\n",
       "    }\n",
       "  </style>\n",
       "\n",
       "      <script>\n",
       "        const buttonEl =\n",
       "          document.querySelector('#df-116086b1-add9-4dda-8f18-689079e92f11 button.colab-df-convert');\n",
       "        buttonEl.style.display =\n",
       "          google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
       "\n",
       "        async function convertToInteractive(key) {\n",
       "          const element = document.querySelector('#df-116086b1-add9-4dda-8f18-689079e92f11');\n",
       "          const dataTable =\n",
       "            await google.colab.kernel.invokeFunction('convertToInteractive',\n",
       "                                                     [key], {});\n",
       "          if (!dataTable) return;\n",
       "\n",
       "          const docLinkHtml = 'Like what you see? Visit the ' +\n",
       "            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n",
       "            + ' to learn more about interactive tables.';\n",
       "          element.innerHTML = '';\n",
       "          dataTable['output_type'] = 'display_data';\n",
       "          await google.colab.output.renderOutput(dataTable, element);\n",
       "          const docLink = document.createElement('div');\n",
       "          docLink.innerHTML = docLinkHtml;\n",
       "          element.appendChild(docLink);\n",
       "        }\n",
       "      </script>\n",
       "    </div>\n",
       "  </div>\n",
       "  "
      ],
      "text/plain": [
       "     No. of visits  Mean_purch  Sum_purch  Item_count  Total_quantity  \\\n",
       "0                1   26.586818     584.91          22             277   \n",
       "1                1   17.823333     534.70          30             240   \n",
       "2                1   15.641667     469.25          30             340   \n",
       "3                1   36.128571     252.90           7             126   \n",
       "4                1   18.350588     623.92          34             555   \n",
       "..             ...         ...        ...         ...             ...   \n",
       "931              1   16.187368     307.56          19             269   \n",
       "932              1   16.953243     627.27          37             313   \n",
       "933              1   16.920455     372.25          22             285   \n",
       "934              1   14.315714     100.21           7              75   \n",
       "935            128   12.136947   91670.36        1755           26078   \n",
       "\n",
       "     Avg_quant  CustomerID  cluster_labels  \n",
       "0    12.590909           1               0  \n",
       "1     8.000000          13               0  \n",
       "2    11.333333          15               0  \n",
       "3    18.000000          16               0  \n",
       "4    16.323529          17               0  \n",
       "..         ...         ...             ...  \n",
       "931  14.157895        4312               0  \n",
       "932   8.459459        4318               0  \n",
       "933  12.954545        4328               0  \n",
       "934  10.714286        4336               0  \n",
       "935   3.452668        4339               1  \n",
       "\n",
       "[936 rows x 8 columns]"
      ]
     },
     "execution_count": 158,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "df_aug2011 = df_cluster_labels(dvt_aug2011,3)\n",
    "df_aug2011"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {
    "colab": {
     "base_uri": "https://localhost:8080/"
    },
    "id": "DntqruXroe_e",
    "outputId": "f567116f-3bd2-4590-b59c-5e4bbdb05bf2"
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "The Silhouette Score is :- 0.9440313415388158\n"
     ]
    }
   ],
   "source": [
    "silhte_score_aug2011 = silhouette_score(dvt_aug2011, df_aug2011['cluster_labels'])\n",
    "print(\"The Silhouette Score is :- \"+str(silhte_score_aug2011))"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {
    "colab": {
     "base_uri": "https://localhost:8080/"
    },
    "collapsed": true,
    "id": "NfVz5dha8ur_",
    "outputId": "5e654b9f-c245-4992-a4cb-3da2efd0668c"
   },
   "outputs": [
    {
     "data": {
      "text/plain": [
       "0    932\n",
       "2      3\n",
       "1      1\n",
       "Name: cluster_labels, dtype: int64"
      ]
     },
     "execution_count": 160,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "df_aug2011['cluster_labels'].value_counts()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {
    "colab": {
     "base_uri": "https://localhost:8080/"
    },
    "collapsed": true,
    "id": "CMFOwAVB8x6F",
    "outputId": "43346f98-60bb-45a0-d064-a4cf7b2ab4ab"
   },
   "outputs": [
    {
     "data": {
      "image/png": "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jIiI6MnA0FRBXE5KLPYokkqScP7evXKqiIiI6MnC0FRBWFsUP/xMCKGoHREREZUcQ1MF0bi6K1zt7IpsI0kSnq1dp5wqIiIierIwNFUQapUKIU89Xeh6lSThRb9G8HBwKMeqiIiInhwMTRXIa02b4+22T0MCoJYk+QEAgXXq4uMugaYtkIiIqBLjAJgKRJIkjHu6PV5u2AS/Rp/FLa0WztY2eKGBH5q5uZu6PCIiokqNoakC8nRywrin25u6DCIioicKT88RERERKcDQRERERKQAQxMRERGRAgxNRERERAowNBEREREpwNBEREREpABDExEREZECDE1ERERECjA0ERERESnA0ERERESkAEMTERERkQIMTUREREQKMDQRERERKcDQRERERKQAQxMRERGRAgxNRERERAowNBEREREpwNBEREREpABDExEREZECDE1ERERECjA0ERERESnA0ERERESkAEMTERERkQIMTUREREQKMDQRERERKcDQRERERKQAQxMRERGRAgxNRERERAowNBEREREpwNBEREREpABDExEREZECDE1ERERECpg0NOl0Onz44Yfw8fGBjY0N6tati1mzZkEIIbcRQmDatGnw8PCAjY0NAgMDceHCBYPtJCYmYsCAAXB0dISzszOGDRuGtLQ0gzanT59Gx44dYW1tDU9PT8ydOzdfPevXr4efnx+sra3RtGlTbNu2rWw6TkRERBWOSUPTp59+iiVLlmDRokWIjo7Gp59+irlz52LhwoVym7lz52LBggVYunQpIiIiYGdnh6CgIGRkZMhtBgwYgHPnzmH37t3YsmULDhw4gBEjRsjrtVotunfvDm9vb0RGRmLevHmYMWMGvvnmG7nN4cOH0b9/fwwbNgwnT55E79690bt3b5w9e7Z8fhhERERk3oQJBQcHi6FDhxose+mll8SAAQOEEELo9Xrh7u4u5s2bJ69PTk4WGo1GrFmzRgghRFRUlAAgjh07JrfZvn27kCRJ3Lp1SwghxNdffy2qVKkiMjMz5TaTJ08WDRo0kJ+/8sorIjg42KAWf39/8eabbyrqS0pKigAgUlJSFLUnIiIi0yvJ57dJjzS1a9cOYWFhOH/+PADg77//xsGDB9GzZ08AwJUrVxAXF4fAwED5NU5OTvD390d4eDgAIDw8HM7OzmjTpo3cJjAwECqVChEREXKbTp06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VN7fsxKSEEKY5BAXERERUQXCMU1ERERECjA0ERERESnA0ERERESkAEMTERERkQIMTUREREQKMDQRERERKcDQRERERKQAQxMRUQVx9epVSJKEU6dOmboUoicSQxMRmdzgwYMhSRJGjhyZb11ISAgkScLgwYPLvzAioocwNBGRWfD09MTatWuRnp4uL8vIyMDq1avh5eVlwsrKhxACOTk5pi6DiIrA0EREZqFVq1bw9PTEhg0b5GUbNmyAl5cXWrZsKS/T6/UIDQ2Fj48PbGxs0Lx5c/z666/yep1Oh2HDhsnrGzRogK+++spgX4MHD0bv3r3x2WefwcPDA9WqVUNISAiys7MV1Vq7dm3MmjUL/fv3h52dHWrWrInFixfL6ws6jZacnAxJkrBv3z4AwL59+yBJErZv347WrVtDo9Hg4MGD0Ov1mDt3LurVqweNRgMvLy/Mnj3bYP+XL19Gly5dYGtri+bNmyM8PFxR3UT0eBiaiMhsDB06FD/88IP8fPny5RgyZIhBm9DQUPz4449YunQpzp07h3HjxuG1117D/v37AeSGqlq1amH9+vWIiorCtGnT8N5772HdunUG29m7dy8uXbqEvXv3YuXKlVixYgVWrFihuNZ58+ahefPmOHnyJKZMmYIxY8Zg9+7dJe7zlClTMGfOHERHR6NZs2aYOnUq5syZgw8//BBRUVFYvXo13NzcDF7z/vvv491338WpU6dQv3599O/fn0epiMqDiW8YTEQkBg0aJHr16iUSEhKERqMRV69eFVevXhXW1tbizp07olevXmLQoEEiIyND2NraisOHDxu8ftiwYaJ///6Fbj8kJET06dPHYH/e3t4iJydHXta3b1/Rr18/RfV6e3uLHj16GCzr16+f6NmzpxBCiCtXrggA4uTJk/L6pKQkAUDs3btXCCHE3r17BQCxceNGuY1WqxUajUZ8++23Be43b7vfffedvOzcuXMCgIiOjlZUOxGVnoVJExsR0UOqV6+O4OBgrFixAkIIBAcHw8XFRV5/8eJFPHjwAN26dTN4XVZWlsEpvMWLF2P58uW4fv060tPTkZWVhRYtWhi8pnHjxlCr1fJzDw8PnDlzRnGtAQEB+Z5/+eWXil+fp02bNvK/o6OjkZmZia5duxb5mmbNmsn/9vDwAAAkJCTAz8+vxPsnIuUYmojIrAwdOhSjR48GAINxQgCQlpYGANi6dStq1qxpsE6j0QAA1q5di3fffRfz589HQEAAHBwcMG/ePERERBi0t7S0NHguSRL0er1R+qBS5Y58EELIywobL2VnZyf/28bGRtH2H65dkiQAMFrtRFQ4hiYiMis9evRAVlYWJElCUFCQwbpGjRpBo9Hg+vXr6Ny5c4GvP3ToENq1a4dRo0bJyy5dumT0Oo8cOZLvecOGDQHkHjEDgNjYWPkImJK5lXx9fWFjY4OwsDAMHz7cuAUT0WNjaCIis6JWqxEdHS3/+2EODg549913MW7cOOj1enTo0AEpKSk4dOgQHB0dMWjQIPj6+uLHH3/Ezp074ePjg59++gnHjh2Dj4+PUes8dOgQ5s6di969e2P37t1Yv349tm7dCiD3iNHTTz+NOXPmwMfHBwkJCfjggw+K3aa1tTUmT56MSZMmwcrKCu3bt8edO3dw7tw5DBs2zKj1E1HJMTQRkdlxdHQsdN2sWbNQvXp1hIaG4vLly3B2dkarVq3w3nvvAQDefPNNnDx5Ev369YMkSejfvz9GjRqF7du3G7XGCRMm4Pjx4/joo4/g6OiIzz//3ODI2PLlyzFs2DC0bt0aDRo0wNy5c9G9e/dit/vhhx/CwsIC06ZNw+3bt+Hh4VHgpJ9EVP4k8fBJdyIiKlbt2rUxduxYjB071tSlEFE54jxNRERERAowNBERPeSvv/6Cvb19oQ8ienLx9BwR0UPS09Nx69atQtfXq1evHKshInPC0ERERESkAE/PERERESnA0ERERESkAEMTERERkQIMTUREREQKMDQRERERKcDQRERERKQAQxMRERGRAgxNRERERAr8PwAtUjB2LI3QAAAAAElFTkSuQmCC",
      "text/plain": [
       "<Figure size 640x480 with 1 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "plt.scatter(df_aug2011['Mean_purch'], df_aug2011['Sum_purch'], c=df_aug2011['cluster_labels'], cmap='viridis')\n",
    "plt.title(\"For Aug 2011\")\n",
    "plt.xlabel('Mean_purch')\n",
    "plt.ylabel('Sum_purch')\n",
    "plt.show()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {
    "colab": {
     "base_uri": "https://localhost:8080/"
    },
    "collapsed": true,
    "id": "4tyH_MKm84qf",
    "outputId": "4380a356-4980-421b-8e9b-7907f999c4ec"
   },
   "outputs": [
    {
     "data": {
      "text/html": [
       "\n",
       "  <div id=\"df-9286b878-f05e-4336-874c-30db1e482796\">\n",
       "    <div class=\"colab-df-container\">\n",
       "      <div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>No. of visits</th>\n",
       "      <th>Mean_purch</th>\n",
       "      <th>Sum_purch</th>\n",
       "      <th>Item_count</th>\n",
       "      <th>Total_quantity</th>\n",
       "      <th>Avg_quant</th>\n",
       "      <th>CustomerID</th>\n",
       "      <th>cluster_labels</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>1</td>\n",
       "      <td>26.586818</td>\n",
       "      <td>584.91</td>\n",
       "      <td>22</td>\n",
       "      <td>277</td>\n",
       "      <td>12.590909</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>1</td>\n",
       "      <td>17.823333</td>\n",
       "      <td>534.70</td>\n",
       "      <td>30</td>\n",
       "      <td>240</td>\n",
       "      <td>8.000000</td>\n",
       "      <td>13</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>1</td>\n",
       "      <td>15.641667</td>\n",
       "      <td>469.25</td>\n",
       "      <td>30</td>\n",
       "      <td>340</td>\n",
       "      <td>11.333333</td>\n",
       "      <td>15</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>1</td>\n",
       "      <td>36.128571</td>\n",
       "      <td>252.90</td>\n",
       "      <td>7</td>\n",
       "      <td>126</td>\n",
       "      <td>18.000000</td>\n",
       "      <td>16</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>1</td>\n",
       "      <td>18.350588</td>\n",
       "      <td>623.92</td>\n",
       "      <td>34</td>\n",
       "      <td>555</td>\n",
       "      <td>16.323529</td>\n",
       "      <td>17</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>...</th>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>930</th>\n",
       "      <td>6</td>\n",
       "      <td>19.748214</td>\n",
       "      <td>552.95</td>\n",
       "      <td>23</td>\n",
       "      <td>237</td>\n",
       "      <td>8.464286</td>\n",
       "      <td>4308</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>931</th>\n",
       "      <td>1</td>\n",
       "      <td>16.187368</td>\n",
       "      <td>307.56</td>\n",
       "      <td>19</td>\n",
       "      <td>269</td>\n",
       "      <td>14.157895</td>\n",
       "      <td>4312</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>932</th>\n",
       "      <td>1</td>\n",
       "      <td>16.953243</td>\n",
       "      <td>627.27</td>\n",
       "      <td>37</td>\n",
       "      <td>313</td>\n",
       "      <td>8.459459</td>\n",
       "      <td>4318</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>933</th>\n",
       "      <td>1</td>\n",
       "      <td>16.920455</td>\n",
       "      <td>372.25</td>\n",
       "      <td>22</td>\n",
       "      <td>285</td>\n",
       "      <td>12.954545</td>\n",
       "      <td>4328</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>934</th>\n",
       "      <td>1</td>\n",
       "      <td>14.315714</td>\n",
       "      <td>100.21</td>\n",
       "      <td>7</td>\n",
       "      <td>75</td>\n",
       "      <td>10.714286</td>\n",
       "      <td>4336</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "<p>932 rows × 8 columns</p>\n",
       "</div>\n",
       "      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-9286b878-f05e-4336-874c-30db1e482796')\"\n",
       "              title=\"Convert this dataframe to an interactive table.\"\n",
       "              style=\"display:none;\">\n",
       "        \n",
       "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
       "       width=\"24px\">\n",
       "    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n",
       "    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n",
       "  </svg>\n",
       "      </button>\n",
       "      \n",
       "  <style>\n",
       "    .colab-df-container {\n",
       "      display:flex;\n",
       "      flex-wrap:wrap;\n",
       "      gap: 12px;\n",
       "    }\n",
       "\n",
       "    .colab-df-convert {\n",
       "      background-color: #E8F0FE;\n",
       "      border: none;\n",
       "      border-radius: 50%;\n",
       "      cursor: pointer;\n",
       "      display: none;\n",
       "      fill: #1967D2;\n",
       "      height: 32px;\n",
       "      padding: 0 0 0 0;\n",
       "      width: 32px;\n",
       "    }\n",
       "\n",
       "    .colab-df-convert:hover {\n",
       "      background-color: #E2EBFA;\n",
       "      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
       "      fill: #174EA6;\n",
       "    }\n",
       "\n",
       "    [theme=dark] .colab-df-convert {\n",
       "      background-color: #3B4455;\n",
       "      fill: #D2E3FC;\n",
       "    }\n",
       "\n",
       "    [theme=dark] .colab-df-convert:hover {\n",
       "      background-color: #434B5C;\n",
       "      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
       "      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
       "      fill: #FFFFFF;\n",
       "    }\n",
       "  </style>\n",
       "\n",
       "      <script>\n",
       "        const buttonEl =\n",
       "          document.querySelector('#df-9286b878-f05e-4336-874c-30db1e482796 button.colab-df-convert');\n",
       "        buttonEl.style.display =\n",
       "          google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
       "\n",
       "        async function convertToInteractive(key) {\n",
       "          const element = document.querySelector('#df-9286b878-f05e-4336-874c-30db1e482796');\n",
       "          const dataTable =\n",
       "            await google.colab.kernel.invokeFunction('convertToInteractive',\n",
       "                                                     [key], {});\n",
       "          if (!dataTable) return;\n",
       "\n",
       "          const docLinkHtml = 'Like what you see? Visit the ' +\n",
       "            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n",
       "            + ' to learn more about interactive tables.';\n",
       "          element.innerHTML = '';\n",
       "          dataTable['output_type'] = 'display_data';\n",
       "          await google.colab.output.renderOutput(dataTable, element);\n",
       "          const docLink = document.createElement('div');\n",
       "          docLink.innerHTML = docLinkHtml;\n",
       "          element.appendChild(docLink);\n",
       "        }\n",
       "      </script>\n",
       "    </div>\n",
       "  </div>\n",
       "  "
      ],
      "text/plain": [
       "     No. of visits  Mean_purch  Sum_purch  Item_count  Total_quantity  \\\n",
       "0                1   26.586818     584.91          22             277   \n",
       "1                1   17.823333     534.70          30             240   \n",
       "2                1   15.641667     469.25          30             340   \n",
       "3                1   36.128571     252.90           7             126   \n",
       "4                1   18.350588     623.92          34             555   \n",
       "..             ...         ...        ...         ...             ...   \n",
       "930              6   19.748214     552.95          23             237   \n",
       "931              1   16.187368     307.56          19             269   \n",
       "932              1   16.953243     627.27          37             313   \n",
       "933              1   16.920455     372.25          22             285   \n",
       "934              1   14.315714     100.21           7              75   \n",
       "\n",
       "     Avg_quant  CustomerID  cluster_labels  \n",
       "0    12.590909           1               0  \n",
       "1     8.000000          13               0  \n",
       "2    11.333333          15               0  \n",
       "3    18.000000          16               0  \n",
       "4    16.323529          17               0  \n",
       "..         ...         ...             ...  \n",
       "930   8.464286        4308               0  \n",
       "931  14.157895        4312               0  \n",
       "932   8.459459        4318               0  \n",
       "933  12.954545        4328               0  \n",
       "934  10.714286        4336               0  \n",
       "\n",
       "[932 rows x 8 columns]"
      ]
     },
     "execution_count": 162,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "#Below is for outliers:-\n",
    "\n",
    "df_aug2011 = df_aug2011[df_aug2011['cluster_labels']!=1]\n",
    "df_aug2011 = df_aug2011[df_aug2011['cluster_labels']!=2]\n",
    "df_aug2011\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {
    "colab": {
     "base_uri": "https://localhost:8080/"
    },
    "collapsed": true,
    "id": "kCyiqGr59IoB",
    "outputId": "1578c6cd-1b0d-46d8-a3aa-75ff02e4caf8"
   },
   "outputs": [
    {
     "data": {
      "text/plain": [
       "0    932\n",
       "Name: cluster_labels, dtype: int64"
      ]
     },
     "execution_count": 163,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "df_aug2011['cluster_labels'].value_counts()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {
    "colab": {
     "base_uri": "https://localhost:8080/"
    },
    "collapsed": true,
    "id": "wQo3TIP89N8C",
    "outputId": "995759aa-a960-4e72-b667-08f795fc9c69"
   },
   "outputs": [
    {
     "data": {
      "text/html": [
       "\n",
       "  <div id=\"df-4330d6c8-2734-483a-87b1-6d2dbe6d1921\">\n",
       "    <div class=\"colab-df-container\">\n",
       "      <div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>No. of visits</th>\n",
       "      <th>Mean_purch</th>\n",
       "      <th>Sum_purch</th>\n",
       "      <th>Item_count</th>\n",
       "      <th>Total_quantity</th>\n",
       "      <th>Avg_quant</th>\n",
       "      <th>CustomerID</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>1</td>\n",
       "      <td>26.586818</td>\n",
       "      <td>584.91</td>\n",
       "      <td>22</td>\n",
       "      <td>277</td>\n",
       "      <td>12.590909</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>1</td>\n",
       "      <td>17.823333</td>\n",
       "      <td>534.70</td>\n",
       "      <td>30</td>\n",
       "      <td>240</td>\n",
       "      <td>8.000000</td>\n",
       "      <td>13</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>1</td>\n",
       "      <td>15.641667</td>\n",
       "      <td>469.25</td>\n",
       "      <td>30</td>\n",
       "      <td>340</td>\n",
       "      <td>11.333333</td>\n",
       "      <td>15</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>1</td>\n",
       "      <td>36.128571</td>\n",
       "      <td>252.90</td>\n",
       "      <td>7</td>\n",
       "      <td>126</td>\n",
       "      <td>18.000000</td>\n",
       "      <td>16</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>1</td>\n",
       "      <td>18.350588</td>\n",
       "      <td>623.92</td>\n",
       "      <td>34</td>\n",
       "      <td>555</td>\n",
       "      <td>16.323529</td>\n",
       "      <td>17</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>...</th>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>930</th>\n",
       "      <td>6</td>\n",
       "      <td>19.748214</td>\n",
       "      <td>552.95</td>\n",
       "      <td>23</td>\n",
       "      <td>237</td>\n",
       "      <td>8.464286</td>\n",
       "      <td>4308</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>931</th>\n",
       "      <td>1</td>\n",
       "      <td>16.187368</td>\n",
       "      <td>307.56</td>\n",
       "      <td>19</td>\n",
       "      <td>269</td>\n",
       "      <td>14.157895</td>\n",
       "      <td>4312</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>932</th>\n",
       "      <td>1</td>\n",
       "      <td>16.953243</td>\n",
       "      <td>627.27</td>\n",
       "      <td>37</td>\n",
       "      <td>313</td>\n",
       "      <td>8.459459</td>\n",
       "      <td>4318</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>933</th>\n",
       "      <td>1</td>\n",
       "      <td>16.920455</td>\n",
       "      <td>372.25</td>\n",
       "      <td>22</td>\n",
       "      <td>285</td>\n",
       "      <td>12.954545</td>\n",
       "      <td>4328</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>934</th>\n",
       "      <td>1</td>\n",
       "      <td>14.315714</td>\n",
       "      <td>100.21</td>\n",
       "      <td>7</td>\n",
       "      <td>75</td>\n",
       "      <td>10.714286</td>\n",
       "      <td>4336</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "<p>932 rows × 7 columns</p>\n",
       "</div>\n",
       "      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-4330d6c8-2734-483a-87b1-6d2dbe6d1921')\"\n",
       "              title=\"Convert this dataframe to an interactive table.\"\n",
       "              style=\"display:none;\">\n",
       "        \n",
       "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
       "       width=\"24px\">\n",
       "    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n",
       "    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n",
       "  </svg>\n",
       "      </button>\n",
       "      \n",
       "  <style>\n",
       "    .colab-df-container {\n",
       "      display:flex;\n",
       "      flex-wrap:wrap;\n",
       "      gap: 12px;\n",
       "    }\n",
       "\n",
       "    .colab-df-convert {\n",
       "      background-color: #E8F0FE;\n",
       "      border: none;\n",
       "      border-radius: 50%;\n",
       "      cursor: pointer;\n",
       "      display: none;\n",
       "      fill: #1967D2;\n",
       "      height: 32px;\n",
       "      padding: 0 0 0 0;\n",
       "      width: 32px;\n",
       "    }\n",
       "\n",
       "    .colab-df-convert:hover {\n",
       "      background-color: #E2EBFA;\n",
       "      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
       "      fill: #174EA6;\n",
       "    }\n",
       "\n",
       "    [theme=dark] .colab-df-convert {\n",
       "      background-color: #3B4455;\n",
       "      fill: #D2E3FC;\n",
       "    }\n",
       "\n",
       "    [theme=dark] .colab-df-convert:hover {\n",
       "      background-color: #434B5C;\n",
       "      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
       "      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
       "      fill: #FFFFFF;\n",
       "    }\n",
       "  </style>\n",
       "\n",
       "      <script>\n",
       "        const buttonEl =\n",
       "          document.querySelector('#df-4330d6c8-2734-483a-87b1-6d2dbe6d1921 button.colab-df-convert');\n",
       "        buttonEl.style.display =\n",
       "          google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
       "\n",
       "        async function convertToInteractive(key) {\n",
       "          const element = document.querySelector('#df-4330d6c8-2734-483a-87b1-6d2dbe6d1921');\n",
       "          const dataTable =\n",
       "            await google.colab.kernel.invokeFunction('convertToInteractive',\n",
       "                                                     [key], {});\n",
       "          if (!dataTable) return;\n",
       "\n",
       "          const docLinkHtml = 'Like what you see? Visit the ' +\n",
       "            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n",
       "            + ' to learn more about interactive tables.';\n",
       "          element.innerHTML = '';\n",
       "          dataTable['output_type'] = 'display_data';\n",
       "          await google.colab.output.renderOutput(dataTable, element);\n",
       "          const docLink = document.createElement('div');\n",
       "          docLink.innerHTML = docLinkHtml;\n",
       "          element.appendChild(docLink);\n",
       "        }\n",
       "      </script>\n",
       "    </div>\n",
       "  </div>\n",
       "  "
      ],
      "text/plain": [
       "     No. of visits  Mean_purch  Sum_purch  Item_count  Total_quantity  \\\n",
       "0                1   26.586818     584.91          22             277   \n",
       "1                1   17.823333     534.70          30             240   \n",
       "2                1   15.641667     469.25          30             340   \n",
       "3                1   36.128571     252.90           7             126   \n",
       "4                1   18.350588     623.92          34             555   \n",
       "..             ...         ...        ...         ...             ...   \n",
       "930              6   19.748214     552.95          23             237   \n",
       "931              1   16.187368     307.56          19             269   \n",
       "932              1   16.953243     627.27          37             313   \n",
       "933              1   16.920455     372.25          22             285   \n",
       "934              1   14.315714     100.21           7              75   \n",
       "\n",
       "     Avg_quant  CustomerID  \n",
       "0    12.590909           1  \n",
       "1     8.000000          13  \n",
       "2    11.333333          15  \n",
       "3    18.000000          16  \n",
       "4    16.323529          17  \n",
       "..         ...         ...  \n",
       "930   8.464286        4308  \n",
       "931  14.157895        4312  \n",
       "932   8.459459        4318  \n",
       "933  12.954545        4328  \n",
       "934  10.714286        4336  \n",
       "\n",
       "[932 rows x 7 columns]"
      ]
     },
     "execution_count": 164,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "df_aug2011_person = df_aug2011.copy(deep=True)\n",
    "df_aug2011_person.drop(['cluster_labels'],axis=1,inplace=True)\n",
    "df_aug2011_person"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {
    "colab": {
     "base_uri": "https://localhost:8080/"
    },
    "collapsed": true,
    "id": "xwuzPW5I9VS7",
    "outputId": "c41eef87-19c8-4bd5-8fed-662185ccc244"
   },
   "outputs": [
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "/usr/local/lib/python3.9/dist-packages/sklearn/cluster/_kmeans.py:870: FutureWarning: The default value of `n_init` will change from 10 to 'auto' in 1.4. Set the value of `n_init` explicitly to suppress the warning\n",
      "  warnings.warn(\n"
     ]
    },
    {
     "data": {
      "text/html": [
       "\n",
       "  <div id=\"df-2e37284a-8518-4e59-b7f7-a062e7da2638\">\n",
       "    <div class=\"colab-df-container\">\n",
       "      <div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>No. of visits</th>\n",
       "      <th>Mean_purch</th>\n",
       "      <th>Sum_purch</th>\n",
       "      <th>Item_count</th>\n",
       "      <th>Total_quantity</th>\n",
       "      <th>Avg_quant</th>\n",
       "      <th>CustomerID</th>\n",
       "      <th>cluster_labels</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>1</td>\n",
       "      <td>26.586818</td>\n",
       "      <td>584.91</td>\n",
       "      <td>22</td>\n",
       "      <td>277</td>\n",
       "      <td>12.590909</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>1</td>\n",
       "      <td>17.823333</td>\n",
       "      <td>534.70</td>\n",
       "      <td>30</td>\n",
       "      <td>240</td>\n",
       "      <td>8.000000</td>\n",
       "      <td>13</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>1</td>\n",
       "      <td>15.641667</td>\n",
       "      <td>469.25</td>\n",
       "      <td>30</td>\n",
       "      <td>340</td>\n",
       "      <td>11.333333</td>\n",
       "      <td>15</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>1</td>\n",
       "      <td>36.128571</td>\n",
       "      <td>252.90</td>\n",
       "      <td>7</td>\n",
       "      <td>126</td>\n",
       "      <td>18.000000</td>\n",
       "      <td>16</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>1</td>\n",
       "      <td>18.350588</td>\n",
       "      <td>623.92</td>\n",
       "      <td>34</td>\n",
       "      <td>555</td>\n",
       "      <td>16.323529</td>\n",
       "      <td>17</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>...</th>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>930</th>\n",
       "      <td>6</td>\n",
       "      <td>19.748214</td>\n",
       "      <td>552.95</td>\n",
       "      <td>23</td>\n",
       "      <td>237</td>\n",
       "      <td>8.464286</td>\n",
       "      <td>4308</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>931</th>\n",
       "      <td>1</td>\n",
       "      <td>16.187368</td>\n",
       "      <td>307.56</td>\n",
       "      <td>19</td>\n",
       "      <td>269</td>\n",
       "      <td>14.157895</td>\n",
       "      <td>4312</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>932</th>\n",
       "      <td>1</td>\n",
       "      <td>16.953243</td>\n",
       "      <td>627.27</td>\n",
       "      <td>37</td>\n",
       "      <td>313</td>\n",
       "      <td>8.459459</td>\n",
       "      <td>4318</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>933</th>\n",
       "      <td>1</td>\n",
       "      <td>16.920455</td>\n",
       "      <td>372.25</td>\n",
       "      <td>22</td>\n",
       "      <td>285</td>\n",
       "      <td>12.954545</td>\n",
       "      <td>4328</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>934</th>\n",
       "      <td>1</td>\n",
       "      <td>14.315714</td>\n",
       "      <td>100.21</td>\n",
       "      <td>7</td>\n",
       "      <td>75</td>\n",
       "      <td>10.714286</td>\n",
       "      <td>4336</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "<p>932 rows × 8 columns</p>\n",
       "</div>\n",
       "      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-2e37284a-8518-4e59-b7f7-a062e7da2638')\"\n",
       "              title=\"Convert this dataframe to an interactive table.\"\n",
       "              style=\"display:none;\">\n",
       "        \n",
       "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
       "       width=\"24px\">\n",
       "    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n",
       "    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n",
       "  </svg>\n",
       "      </button>\n",
       "      \n",
       "  <style>\n",
       "    .colab-df-container {\n",
       "      display:flex;\n",
       "      flex-wrap:wrap;\n",
       "      gap: 12px;\n",
       "    }\n",
       "\n",
       "    .colab-df-convert {\n",
       "      background-color: #E8F0FE;\n",
       "      border: none;\n",
       "      border-radius: 50%;\n",
       "      cursor: pointer;\n",
       "      display: none;\n",
       "      fill: #1967D2;\n",
       "      height: 32px;\n",
       "      padding: 0 0 0 0;\n",
       "      width: 32px;\n",
       "    }\n",
       "\n",
       "    .colab-df-convert:hover {\n",
       "      background-color: #E2EBFA;\n",
       "      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
       "      fill: #174EA6;\n",
       "    }\n",
       "\n",
       "    [theme=dark] .colab-df-convert {\n",
       "      background-color: #3B4455;\n",
       "      fill: #D2E3FC;\n",
       "    }\n",
       "\n",
       "    [theme=dark] .colab-df-convert:hover {\n",
       "      background-color: #434B5C;\n",
       "      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
       "      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
       "      fill: #FFFFFF;\n",
       "    }\n",
       "  </style>\n",
       "\n",
       "      <script>\n",
       "        const buttonEl =\n",
       "          document.querySelector('#df-2e37284a-8518-4e59-b7f7-a062e7da2638 button.colab-df-convert');\n",
       "        buttonEl.style.display =\n",
       "          google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
       "\n",
       "        async function convertToInteractive(key) {\n",
       "          const element = document.querySelector('#df-2e37284a-8518-4e59-b7f7-a062e7da2638');\n",
       "          const dataTable =\n",
       "            await google.colab.kernel.invokeFunction('convertToInteractive',\n",
       "                                                     [key], {});\n",
       "          if (!dataTable) return;\n",
       "\n",
       "          const docLinkHtml = 'Like what you see? Visit the ' +\n",
       "            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n",
       "            + ' to learn more about interactive tables.';\n",
       "          element.innerHTML = '';\n",
       "          dataTable['output_type'] = 'display_data';\n",
       "          await google.colab.output.renderOutput(dataTable, element);\n",
       "          const docLink = document.createElement('div');\n",
       "          docLink.innerHTML = docLinkHtml;\n",
       "          element.appendChild(docLink);\n",
       "        }\n",
       "      </script>\n",
       "    </div>\n",
       "  </div>\n",
       "  "
      ],
      "text/plain": [
       "     No. of visits  Mean_purch  Sum_purch  Item_count  Total_quantity  \\\n",
       "0                1   26.586818     584.91          22             277   \n",
       "1                1   17.823333     534.70          30             240   \n",
       "2                1   15.641667     469.25          30             340   \n",
       "3                1   36.128571     252.90           7             126   \n",
       "4                1   18.350588     623.92          34             555   \n",
       "..             ...         ...        ...         ...             ...   \n",
       "930              6   19.748214     552.95          23             237   \n",
       "931              1   16.187368     307.56          19             269   \n",
       "932              1   16.953243     627.27          37             313   \n",
       "933              1   16.920455     372.25          22             285   \n",
       "934              1   14.315714     100.21           7              75   \n",
       "\n",
       "     Avg_quant  CustomerID  cluster_labels  \n",
       "0    12.590909           1               0  \n",
       "1     8.000000          13               0  \n",
       "2    11.333333          15               0  \n",
       "3    18.000000          16               0  \n",
       "4    16.323529          17               0  \n",
       "..         ...         ...             ...  \n",
       "930   8.464286        4308               1  \n",
       "931  14.157895        4312               1  \n",
       "932   8.459459        4318               1  \n",
       "933  12.954545        4328               1  \n",
       "934  10.714286        4336               1  \n",
       "\n",
       "[932 rows x 8 columns]"
      ]
     },
     "execution_count": 165,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "df_aug2011_new = df_cluster_labels(df_aug2011_person,3)\n",
    "df_aug2011_new\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {
    "colab": {
     "base_uri": "https://localhost:8080/"
    },
    "id": "JSlSGVbRok5e",
    "outputId": "925c777f-bab6-46b2-8b07-4dcca0358f41"
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "The Silhouette Score is :- 0.5155730570325034\n"
     ]
    }
   ],
   "source": [
    "silhte_score_aug2011_new = silhouette_score(df_aug2011_person, df_aug2011_new['cluster_labels'])\n",
    "print(\"The Silhouette Score is :- \"+str(silhte_score_aug2011_new))\n",
    "#Indicates that silhouette score is realistic for dataset without outliers"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {
    "colab": {
     "base_uri": "https://localhost:8080/"
    },
    "collapsed": true,
    "id": "iAFEV4Jc9cHF",
    "outputId": "84784410-73c9-44ad-ded2-fd002364bee3"
   },
   "outputs": [
    {
     "data": {
      "text/plain": [
       "0    491\n",
       "1    435\n",
       "2      6\n",
       "Name: cluster_labels, dtype: int64"
      ]
     },
     "execution_count": 167,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "df_aug2011_new['cluster_labels'].value_counts()\n",
    "#These are comparatively good clusters"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {
    "colab": {
     "base_uri": "https://localhost:8080/"
    },
    "collapsed": true,
    "id": "jqiOK34p9gaB",
    "outputId": "151d6960-fac4-4e69-ff1c-fabe81992fbe"
   },
   "outputs": [
    {
     "data": {
      "image/png": "",
      "text/plain": [
       "<Figure size 640x480 with 1 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "plt.scatter(df_aug2011_new['Mean_purch'], df_aug2011_new['Sum_purch'], c=df_aug2011_new['cluster_labels'], cmap='viridis')\n",
    "plt.title(\"For Aug 2011 (After removing outliers)\")\n",
    "plt.xlabel('Mean_purch')\n",
    "plt.ylabel('Sum_purch')\n",
    "plt.show()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {
    "id": "_c3PgSsY9stl"
   },
   "outputs": [],
   "source": [
    "aug2011 = descrip_dict(og_aug2011,df_aug2011_new)\n",
    "aug2011 = processlis(aug2011)\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {
    "colab": {
     "base_uri": "https://localhost:8080/"
    },
    "collapsed": true,
    "id": "JP9Rvjvz9xGm",
    "outputId": "0e1412fd-096b-45cb-a27a-f4fac67f0534"
   },
   "outputs": [
    {
     "data": {
      "text/plain": [
       "[     CustomerID                                        Description\n",
       " 0             1  [SET OF 60 VINTAGE LEAF CAKE CASES , SET 40 HE...\n",
       " 1            13  [JUMBO BAG APPLES, JUMBO BAG SPACEBOY DESIGN, ...\n",
       " 2            15  [SPACEBOY CHILDRENS CUP,  DOLLY GIRL BEAKER, S...\n",
       " 3            16  [STORAGE TIN VINTAGE DOILY , SET OF 72 RETROSP...\n",
       " 4            17  [POSTAGE, PAPER BUNTING RETROSPOT, SPOTTY BUNT...\n",
       " ..          ...                                                ...\n",
       " 486        2171  [CHILDRENS CUTLERY RETROSPOT RED , BIRD DECORA...\n",
       " 487        2178  [SET/20 RED RETROSPOT PAPER NAPKINS , PARTY BU...\n",
       " 488        2179                          [JUMBO BAG RED RETROSPOT]\n",
       " 489        2181  [HOME GARLAND PAINTED ZINC , BATHROOM METAL SI...\n",
       " 490        2188  [SAVE THE PLANET MUG, VINTAGE RED MUG, HOME SW...\n",
       " \n",
       " [491 rows x 2 columns],\n",
       "      CustomerID                                        Description\n",
       " 0          2177  [RED METAL BEACH SPADE , GIRLS VINTAGE TIN SEA...\n",
       " 1          2199  [SKULL LUNCH BOX WITH CUTLERY , PLASTERS IN TI...\n",
       " 2          2211  [NATURAL SLATE CHALKBOARD LARGE , SPOTTY BUNTI...\n",
       " 3          2212  [RED FLORAL FELTCRAFT SHOULDER BAG, REGENCY CA...\n",
       " 4          2223  [BLUE DINER WALL CLOCK, SET 3 RETROSPOT TEA,CO...\n",
       " ..          ...                                                ...\n",
       " 430        4308  [RETROSPOT LAMP, PACK OF 6 SANDCASTLE FLAGS AS...\n",
       " 431        4312  [GINGHAM HEART  DOORSTOP RED, SMALL GLASS HEAR...\n",
       " 432        4318  [REGENCY TEA STRAINER, LUNCH BAG ALPHABET DESI...\n",
       " 433        4328  [SET OF 6 SNACK LOAF BAKING CASES, SET OF 12 M...\n",
       " 434        4336  [ANTIQUE CREAM CUTLERY CUPBOARD, FRENCH STYLE ...\n",
       " \n",
       " [435 rows x 2 columns]]"
      ]
     },
     "execution_count": 170,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "aug2011"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {
    "colab": {
     "base_uri": "https://localhost:8080/"
    },
    "id": "uE60WhdYNkld",
    "outputId": "9ac9033d-e815-40eb-9fbc-78c55d04d599"
   },
   "outputs": [
    {
     "data": {
      "image/png": "",
      "text/plain": [
       "<Figure size 640x480 with 1 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "data": {
      "image/png": "",
      "text/plain": [
       "<Figure size 500x500 with 1 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "(932, 4)\n",
      "(3, 4)\n",
      "(1, 4)\n"
     ]
    },
    {
     "data": {
      "image/png": "",
      "text/plain": [
       "<Figure size 640x480 with 1 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "data": {
      "image/png": "",
      "text/plain": [
       "<Figure size 500x500 with 1 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "(370, 5)\n",
      "(562, 5)\n"
     ]
    },
    {
     "data": {
      "text/plain": [
       "[     CustomerID                                        Description\n",
       " 0             1  [SET OF 60 VINTAGE LEAF CAKE CASES , SET 40 HE...\n",
       " 1            13  [JUMBO BAG APPLES, JUMBO BAG SPACEBOY DESIGN, ...\n",
       " 2            15  [SPACEBOY CHILDRENS CUP,  DOLLY GIRL BEAKER, S...\n",
       " 3            16  [STORAGE TIN VINTAGE DOILY , SET OF 72 RETROSP...\n",
       " 4            17  [POSTAGE, PAPER BUNTING RETROSPOT, SPOTTY BUNT...\n",
       " ..          ...                                                ...\n",
       " 557        2669  [TRAVEL SEWING KIT, VINTAGE CREAM CAT FOOD CON...\n",
       " 558        2703  [JAM MAKING SET PRINTED, RED KITCHEN SCALES, I...\n",
       " 559        2729  [HOME BUILDING BLOCK WORD, HEART OF WICKER LAR...\n",
       " 560        2734  [UNION STRIPE WITH FRINGE  HAMMOCK, GARDENERS ...\n",
       " 561        2752  [WOODEN HAPPY BIRTHDAY GARLAND, MINI WOODEN HA...\n",
       " \n",
       " [562 rows x 2 columns],\n",
       "      CustomerID                                        Description\n",
       " 0            27  [POPPY'S PLAYHOUSE BATHROOM, SET OF 6 3D KIT C...\n",
       " 1           102  [BLUE OWL SOFT TOY, PINK SCOTTIE DOG W FLOWER ...\n",
       " 2           274  [SET/6 RED SPOTTY PAPER CUPS, PACK OF 6 SKULL ...\n",
       " 3           515  [LUNCH BAG RED RETROSPOT, LUNCH BAG  BLACK SKU...\n",
       " 4           555  [ALARM CLOCK BAKELIKE ORANGE, FRENCH BLUE META...\n",
       " ..          ...                                                ...\n",
       " 365        4303  [T-LIGHT HOLDER SILVER PETIT FOUR , MULTI COLO...\n",
       " 366        4304  [WRAP RED DOILEY, WRAP PAISLEY PARK , PAPERWEI...\n",
       " 367        4305  [SPOTTY BUNTING, WOOD 2 DRAWER CABINET WHITE F...\n",
       " 368        4308  [RETROSPOT LAMP, PACK OF 6 SANDCASTLE FLAGS AS...\n",
       " 369        4312  [GINGHAM HEART  DOORSTOP RED, SMALL GLASS HEAR...\n",
       " \n",
       " [370 rows x 2 columns]]"
      ]
     },
     "execution_count": 171,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "pca = PCA(n_components = 3)\n",
    "pca.fit(X = dvt_aug2011)\n",
    "new_dvt = pca.transform(dvt_aug2011)\n",
    "\n",
    "new_dvt = pd.DataFrame(data = new_dvt,columns = ['X0','X1','X2'])\n",
    "model = AgglomerativeClustering(distance_threshold=0, n_clusters=None, linkage='ward').fit(new_dvt)\n",
    "\n",
    "plot_dendrogram(model, truncate_mode=\"level\", p=4)\n",
    "\n",
    "dict_aug2011 =  Agglocls(new_dvt,3)\n",
    "\n",
    "final_dvt_aug2011 = dict_aug2011[0]\n",
    "pca_aug2011 = PCA(n_components = 3)\n",
    "pca_aug2011.fit(X = final_dvt_aug2011)\n",
    "final_dvt_aug2011 = pca_aug2011.transform(final_dvt_aug2011)\n",
    "final_dvt_aug2011 = pd.DataFrame(data = final_dvt_aug2011,columns = ['X0','X1','X2'])\n",
    "AggloDendo(final_dvt_aug2011)\n",
    "\n",
    "dict_aug2011_final =  AggloPca(final_dvt_aug2011,2,dvt_aug2011,'X0','X2')\n",
    "\n",
    "aug2011_agg = descrip_dict(og_aug2011,final_dvt_aug2011)\n",
    "aug2011_agg = processlis(aug2011_agg)\n",
    "aug2011_agg\n",
    "\n",
    "\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {
    "id": "Q_xuOxA8xgn2"
   },
   "outputs": [],
   "source": [
    "Cluster_dict['aug2011'] = (len(aug2011),len(aug2011_agg))\n",
    "dicti_2011aug = {}\n",
    "klis = []\n",
    "for i in range(Cluster_dict['aug2011'][0]):\n",
    "  temp = apriori_rules(aug2011[i],0.075)\n",
    "  klis.append(temp)\n",
    "alis = []\n",
    "for i in range(Cluster_dict['aug2011'][1]):\n",
    "  temp = apriori_rules(aug2011_agg[i],0.075)\n",
    "  alis.append(temp)\n",
    "#apriori_rules(1_agg[0],0.075)\n",
    "dicti_2011aug['K-means'] = klis\n",
    "dicti_2011aug['Agglo'] = alis\n",
    "\n",
    "Rules_dict['aug2011'] = dicti_2011aug"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {
    "id": "FlL9nqNP-Azy"
   },
   "source": [
    "## For Sep 2011"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {
    "colab": {
     "base_uri": "https://localhost:8080/"
    },
    "collapsed": true,
    "id": "CPOHQSqO-ApQ",
    "outputId": "673be19b-8e7f-4131-d452-a102faf733ad"
   },
   "outputs": [
    {
     "data": {
      "text/html": [
       "\n",
       "  <div id=\"df-a1f8f90f-3e13-4b80-9a57-8a1c164d35b1\">\n",
       "    <div class=\"colab-df-container\">\n",
       "      <div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>InvoiceNo</th>\n",
       "      <th>StockCode</th>\n",
       "      <th>Description</th>\n",
       "      <th>Quantity</th>\n",
       "      <th>UnitPrice</th>\n",
       "      <th>CustomerID</th>\n",
       "      <th>Country</th>\n",
       "      <th>time_intervals</th>\n",
       "      <th>Total Price</th>\n",
       "      <th>Money_bins</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>320705</th>\n",
       "      <td>565080</td>\n",
       "      <td>20677</td>\n",
       "      <td>PINK POLKADOT BOWL</td>\n",
       "      <td>8</td>\n",
       "      <td>1.25</td>\n",
       "      <td>871</td>\n",
       "      <td>United Kingdom</td>\n",
       "      <td>04:00-07:59</td>\n",
       "      <td>10.00</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>320706</th>\n",
       "      <td>565080</td>\n",
       "      <td>22128</td>\n",
       "      <td>PARTY CONES CANDY ASSORTED</td>\n",
       "      <td>24</td>\n",
       "      <td>1.25</td>\n",
       "      <td>871</td>\n",
       "      <td>United Kingdom</td>\n",
       "      <td>04:00-07:59</td>\n",
       "      <td>30.00</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>320707</th>\n",
       "      <td>565081</td>\n",
       "      <td>21067</td>\n",
       "      <td>NaN</td>\n",
       "      <td>1</td>\n",
       "      <td>0.00</td>\n",
       "      <td>4339</td>\n",
       "      <td>United Kingdom</td>\n",
       "      <td>08:00-11:59</td>\n",
       "      <td>0.00</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>320708</th>\n",
       "      <td>565082</td>\n",
       "      <td>22423</td>\n",
       "      <td>REGENCY CAKESTAND 3 TIER</td>\n",
       "      <td>2</td>\n",
       "      <td>12.75</td>\n",
       "      <td>722</td>\n",
       "      <td>United Kingdom</td>\n",
       "      <td>08:00-11:59</td>\n",
       "      <td>25.50</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>320709</th>\n",
       "      <td>565082</td>\n",
       "      <td>15060B</td>\n",
       "      <td>FAIRY CAKE DESIGN UMBRELLA</td>\n",
       "      <td>8</td>\n",
       "      <td>3.75</td>\n",
       "      <td>722</td>\n",
       "      <td>United Kingdom</td>\n",
       "      <td>08:00-11:59</td>\n",
       "      <td>30.00</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>...</th>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>370926</th>\n",
       "      <td>569202</td>\n",
       "      <td>22486</td>\n",
       "      <td>PLASMATRONIC LAMP</td>\n",
       "      <td>1</td>\n",
       "      <td>8.29</td>\n",
       "      <td>4339</td>\n",
       "      <td>United Kingdom</td>\n",
       "      <td>16:00-19:59</td>\n",
       "      <td>8.29</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>370927</th>\n",
       "      <td>569202</td>\n",
       "      <td>22495</td>\n",
       "      <td>SET OF 2 ROUND TINS CAMEMBERT</td>\n",
       "      <td>1</td>\n",
       "      <td>5.79</td>\n",
       "      <td>4339</td>\n",
       "      <td>United Kingdom</td>\n",
       "      <td>16:00-19:59</td>\n",
       "      <td>5.79</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>370928</th>\n",
       "      <td>569202</td>\n",
       "      <td>22539</td>\n",
       "      <td>MINI JIGSAW DOLLY GIRL</td>\n",
       "      <td>2</td>\n",
       "      <td>0.83</td>\n",
       "      <td>4339</td>\n",
       "      <td>United Kingdom</td>\n",
       "      <td>16:00-19:59</td>\n",
       "      <td>1.66</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>370929</th>\n",
       "      <td>569202</td>\n",
       "      <td>22540</td>\n",
       "      <td>MINI JIGSAW CIRCUS PARADE</td>\n",
       "      <td>2</td>\n",
       "      <td>0.83</td>\n",
       "      <td>4339</td>\n",
       "      <td>United Kingdom</td>\n",
       "      <td>16:00-19:59</td>\n",
       "      <td>1.66</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>370930</th>\n",
       "      <td>569202</td>\n",
       "      <td>22805</td>\n",
       "      <td>BLUE DRAWER KNOB ACRYLIC EDWARDIAN</td>\n",
       "      <td>10</td>\n",
       "      <td>1.25</td>\n",
       "      <td>4339</td>\n",
       "      <td>United Kingdom</td>\n",
       "      <td>16:00-19:59</td>\n",
       "      <td>12.50</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "<p>49323 rows × 10 columns</p>\n",
       "</div>\n",
       "      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-a1f8f90f-3e13-4b80-9a57-8a1c164d35b1')\"\n",
       "              title=\"Convert this dataframe to an interactive table.\"\n",
       "              style=\"display:none;\">\n",
       "        \n",
       "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
       "       width=\"24px\">\n",
       "    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n",
       "    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n",
       "  </svg>\n",
       "      </button>\n",
       "      \n",
       "  <style>\n",
       "    .colab-df-container {\n",
       "      display:flex;\n",
       "      flex-wrap:wrap;\n",
       "      gap: 12px;\n",
       "    }\n",
       "\n",
       "    .colab-df-convert {\n",
       "      background-color: #E8F0FE;\n",
       "      border: none;\n",
       "      border-radius: 50%;\n",
       "      cursor: pointer;\n",
       "      display: none;\n",
       "      fill: #1967D2;\n",
       "      height: 32px;\n",
       "      padding: 0 0 0 0;\n",
       "      width: 32px;\n",
       "    }\n",
       "\n",
       "    .colab-df-convert:hover {\n",
       "      background-color: #E2EBFA;\n",
       "      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
       "      fill: #174EA6;\n",
       "    }\n",
       "\n",
       "    [theme=dark] .colab-df-convert {\n",
       "      background-color: #3B4455;\n",
       "      fill: #D2E3FC;\n",
       "    }\n",
       "\n",
       "    [theme=dark] .colab-df-convert:hover {\n",
       "      background-color: #434B5C;\n",
       "      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
       "      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
       "      fill: #FFFFFF;\n",
       "    }\n",
       "  </style>\n",
       "\n",
       "      <script>\n",
       "        const buttonEl =\n",
       "          document.querySelector('#df-a1f8f90f-3e13-4b80-9a57-8a1c164d35b1 button.colab-df-convert');\n",
       "        buttonEl.style.display =\n",
       "          google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
       "\n",
       "        async function convertToInteractive(key) {\n",
       "          const element = document.querySelector('#df-a1f8f90f-3e13-4b80-9a57-8a1c164d35b1');\n",
       "          const dataTable =\n",
       "            await google.colab.kernel.invokeFunction('convertToInteractive',\n",
       "                                                     [key], {});\n",
       "          if (!dataTable) return;\n",
       "\n",
       "          const docLinkHtml = 'Like what you see? Visit the ' +\n",
       "            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n",
       "            + ' to learn more about interactive tables.';\n",
       "          element.innerHTML = '';\n",
       "          dataTable['output_type'] = 'display_data';\n",
       "          await google.colab.output.renderOutput(dataTable, element);\n",
       "          const docLink = document.createElement('div');\n",
       "          docLink.innerHTML = docLinkHtml;\n",
       "          element.appendChild(docLink);\n",
       "        }\n",
       "      </script>\n",
       "    </div>\n",
       "  </div>\n",
       "  "
      ],
      "text/plain": [
       "       InvoiceNo StockCode                         Description  Quantity  \\\n",
       "320705    565080     20677                  PINK POLKADOT BOWL         8   \n",
       "320706    565080     22128          PARTY CONES CANDY ASSORTED        24   \n",
       "320707    565081     21067                                 NaN         1   \n",
       "320708    565082     22423            REGENCY CAKESTAND 3 TIER         2   \n",
       "320709    565082    15060B          FAIRY CAKE DESIGN UMBRELLA         8   \n",
       "...          ...       ...                                 ...       ...   \n",
       "370926    569202     22486                   PLASMATRONIC LAMP         1   \n",
       "370927    569202     22495      SET OF 2 ROUND TINS CAMEMBERT          1   \n",
       "370928    569202     22539              MINI JIGSAW DOLLY GIRL         2   \n",
       "370929    569202     22540          MINI JIGSAW CIRCUS PARADE          2   \n",
       "370930    569202     22805  BLUE DRAWER KNOB ACRYLIC EDWARDIAN        10   \n",
       "\n",
       "        UnitPrice  CustomerID         Country time_intervals  Total Price  \\\n",
       "320705       1.25         871  United Kingdom    04:00-07:59        10.00   \n",
       "320706       1.25         871  United Kingdom    04:00-07:59        30.00   \n",
       "320707       0.00        4339  United Kingdom    08:00-11:59         0.00   \n",
       "320708      12.75         722  United Kingdom    08:00-11:59        25.50   \n",
       "320709       3.75         722  United Kingdom    08:00-11:59        30.00   \n",
       "...           ...         ...             ...            ...          ...   \n",
       "370926       8.29        4339  United Kingdom    16:00-19:59         8.29   \n",
       "370927       5.79        4339  United Kingdom    16:00-19:59         5.79   \n",
       "370928       0.83        4339  United Kingdom    16:00-19:59         1.66   \n",
       "370929       0.83        4339  United Kingdom    16:00-19:59         1.66   \n",
       "370930       1.25        4339  United Kingdom    16:00-19:59        12.50   \n",
       "\n",
       "        Money_bins  \n",
       "320705           0  \n",
       "320706           0  \n",
       "320707           0  \n",
       "320708           0  \n",
       "320709           0  \n",
       "...            ...  \n",
       "370926           0  \n",
       "370927           0  \n",
       "370928           0  \n",
       "370929           0  \n",
       "370930           0  \n",
       "\n",
       "[49323 rows x 10 columns]"
      ]
     },
     "execution_count": 173,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "og_sep2011 = df_list_month_intervals[9]\n",
    "og_sep2011"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {
    "colab": {
     "base_uri": "https://localhost:8080/"
    },
    "collapsed": true,
    "id": "c8ZNjMMpTWuB",
    "outputId": "f1ca0904-8d9d-40b6-aacb-3578c81b6d13"
   },
   "outputs": [
    {
     "data": {
      "text/html": [
       "\n",
       "  <div id=\"df-ae60acd1-fde8-4d5f-9bef-2992460dd981\">\n",
       "    <div class=\"colab-df-container\">\n",
       "      <div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>No. of visits</th>\n",
       "      <th>Mean_purch</th>\n",
       "      <th>Sum_purch</th>\n",
       "      <th>Item_count</th>\n",
       "      <th>Total_quantity</th>\n",
       "      <th>Avg_quant</th>\n",
       "      <th>CustomerID</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>1</td>\n",
       "      <td>103.333333</td>\n",
       "      <td>310.00</td>\n",
       "      <td>3</td>\n",
       "      <td>217</td>\n",
       "      <td>72.333333</td>\n",
       "      <td>2</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>2</td>\n",
       "      <td>19.765625</td>\n",
       "      <td>632.50</td>\n",
       "      <td>27</td>\n",
       "      <td>155</td>\n",
       "      <td>4.843750</td>\n",
       "      <td>5</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>1</td>\n",
       "      <td>20.749750</td>\n",
       "      <td>829.99</td>\n",
       "      <td>40</td>\n",
       "      <td>267</td>\n",
       "      <td>6.675000</td>\n",
       "      <td>15</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>1</td>\n",
       "      <td>39.900000</td>\n",
       "      <td>79.80</td>\n",
       "      <td>2</td>\n",
       "      <td>181</td>\n",
       "      <td>90.500000</td>\n",
       "      <td>17</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>1</td>\n",
       "      <td>29.470769</td>\n",
       "      <td>383.12</td>\n",
       "      <td>13</td>\n",
       "      <td>202</td>\n",
       "      <td>15.538462</td>\n",
       "      <td>22</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>...</th>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1262</th>\n",
       "      <td>1</td>\n",
       "      <td>18.409412</td>\n",
       "      <td>312.96</td>\n",
       "      <td>17</td>\n",
       "      <td>87</td>\n",
       "      <td>5.117647</td>\n",
       "      <td>4324</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1263</th>\n",
       "      <td>1</td>\n",
       "      <td>102.000000</td>\n",
       "      <td>102.00</td>\n",
       "      <td>1</td>\n",
       "      <td>40</td>\n",
       "      <td>40.000000</td>\n",
       "      <td>4329</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1264</th>\n",
       "      <td>1</td>\n",
       "      <td>19.322222</td>\n",
       "      <td>173.90</td>\n",
       "      <td>9</td>\n",
       "      <td>66</td>\n",
       "      <td>7.333333</td>\n",
       "      <td>4333</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1265</th>\n",
       "      <td>1</td>\n",
       "      <td>2.870213</td>\n",
       "      <td>134.90</td>\n",
       "      <td>47</td>\n",
       "      <td>95</td>\n",
       "      <td>2.021277</td>\n",
       "      <td>4337</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1266</th>\n",
       "      <td>140</td>\n",
       "      <td>11.379726</td>\n",
       "      <td>105751.79</td>\n",
       "      <td>1888</td>\n",
       "      <td>30517</td>\n",
       "      <td>3.283870</td>\n",
       "      <td>4339</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "<p>1267 rows × 7 columns</p>\n",
       "</div>\n",
       "      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-ae60acd1-fde8-4d5f-9bef-2992460dd981')\"\n",
       "              title=\"Convert this dataframe to an interactive table.\"\n",
       "              style=\"display:none;\">\n",
       "        \n",
       "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
       "       width=\"24px\">\n",
       "    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n",
       "    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n",
       "  </svg>\n",
       "      </button>\n",
       "      \n",
       "  <style>\n",
       "    .colab-df-container {\n",
       "      display:flex;\n",
       "      flex-wrap:wrap;\n",
       "      gap: 12px;\n",
       "    }\n",
       "\n",
       "    .colab-df-convert {\n",
       "      background-color: #E8F0FE;\n",
       "      border: none;\n",
       "      border-radius: 50%;\n",
       "      cursor: pointer;\n",
       "      display: none;\n",
       "      fill: #1967D2;\n",
       "      height: 32px;\n",
       "      padding: 0 0 0 0;\n",
       "      width: 32px;\n",
       "    }\n",
       "\n",
       "    .colab-df-convert:hover {\n",
       "      background-color: #E2EBFA;\n",
       "      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
       "      fill: #174EA6;\n",
       "    }\n",
       "\n",
       "    [theme=dark] .colab-df-convert {\n",
       "      background-color: #3B4455;\n",
       "      fill: #D2E3FC;\n",
       "    }\n",
       "\n",
       "    [theme=dark] .colab-df-convert:hover {\n",
       "      background-color: #434B5C;\n",
       "      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
       "      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
       "      fill: #FFFFFF;\n",
       "    }\n",
       "  </style>\n",
       "\n",
       "      <script>\n",
       "        const buttonEl =\n",
       "          document.querySelector('#df-ae60acd1-fde8-4d5f-9bef-2992460dd981 button.colab-df-convert');\n",
       "        buttonEl.style.display =\n",
       "          google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
       "\n",
       "        async function convertToInteractive(key) {\n",
       "          const element = document.querySelector('#df-ae60acd1-fde8-4d5f-9bef-2992460dd981');\n",
       "          const dataTable =\n",
       "            await google.colab.kernel.invokeFunction('convertToInteractive',\n",
       "                                                     [key], {});\n",
       "          if (!dataTable) return;\n",
       "\n",
       "          const docLinkHtml = 'Like what you see? Visit the ' +\n",
       "            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n",
       "            + ' to learn more about interactive tables.';\n",
       "          element.innerHTML = '';\n",
       "          dataTable['output_type'] = 'display_data';\n",
       "          await google.colab.output.renderOutput(dataTable, element);\n",
       "          const docLink = document.createElement('div');\n",
       "          docLink.innerHTML = docLinkHtml;\n",
       "          element.appendChild(docLink);\n",
       "        }\n",
       "      </script>\n",
       "    </div>\n",
       "  </div>\n",
       "  "
      ],
      "text/plain": [
       "      No. of visits  Mean_purch  Sum_purch  Item_count  Total_quantity  \\\n",
       "0                 1  103.333333     310.00           3             217   \n",
       "1                 2   19.765625     632.50          27             155   \n",
       "2                 1   20.749750     829.99          40             267   \n",
       "3                 1   39.900000      79.80           2             181   \n",
       "4                 1   29.470769     383.12          13             202   \n",
       "...             ...         ...        ...         ...             ...   \n",
       "1262              1   18.409412     312.96          17              87   \n",
       "1263              1  102.000000     102.00           1              40   \n",
       "1264              1   19.322222     173.90           9              66   \n",
       "1265              1    2.870213     134.90          47              95   \n",
       "1266            140   11.379726  105751.79        1888           30517   \n",
       "\n",
       "      Avg_quant  CustomerID  \n",
       "0     72.333333           2  \n",
       "1      4.843750           5  \n",
       "2      6.675000          15  \n",
       "3     90.500000          17  \n",
       "4     15.538462          22  \n",
       "...         ...         ...  \n",
       "1262   5.117647        4324  \n",
       "1263  40.000000        4329  \n",
       "1264   7.333333        4333  \n",
       "1265   2.021277        4337  \n",
       "1266   3.283870        4339  \n",
       "\n",
       "[1267 rows x 7 columns]"
      ]
     },
     "execution_count": 174,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "dvt_sep2011= person_df(og_sep2011) #Our function gives such a dataframe\n",
    "#By which we can form clusters using KMeans\n",
    "dvt_sep2011"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {
    "colab": {
     "base_uri": "https://localhost:8080/"
    },
    "collapsed": true,
    "id": "kdtJ0FPNTbg5",
    "outputId": "f03fa373-d457-4ab2-f330-a9a4cc81aa76"
   },
   "outputs": [
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "/usr/local/lib/python3.9/dist-packages/sklearn/cluster/_kmeans.py:870: FutureWarning: The default value of `n_init` will change from 10 to 'auto' in 1.4. Set the value of `n_init` explicitly to suppress the warning\n",
      "  warnings.warn(\n"
     ]
    },
    {
     "data": {
      "text/html": [
       "\n",
       "  <div id=\"df-8d45a980-07ef-485a-91b0-7d3b5340e33a\">\n",
       "    <div class=\"colab-df-container\">\n",
       "      <div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>No. of visits</th>\n",
       "      <th>Mean_purch</th>\n",
       "      <th>Sum_purch</th>\n",
       "      <th>Item_count</th>\n",
       "      <th>Total_quantity</th>\n",
       "      <th>Avg_quant</th>\n",
       "      <th>CustomerID</th>\n",
       "      <th>cluster_labels</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>1</td>\n",
       "      <td>103.333333</td>\n",
       "      <td>310.00</td>\n",
       "      <td>3</td>\n",
       "      <td>217</td>\n",
       "      <td>72.333333</td>\n",
       "      <td>2</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>2</td>\n",
       "      <td>19.765625</td>\n",
       "      <td>632.50</td>\n",
       "      <td>27</td>\n",
       "      <td>155</td>\n",
       "      <td>4.843750</td>\n",
       "      <td>5</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>1</td>\n",
       "      <td>20.749750</td>\n",
       "      <td>829.99</td>\n",
       "      <td>40</td>\n",
       "      <td>267</td>\n",
       "      <td>6.675000</td>\n",
       "      <td>15</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>1</td>\n",
       "      <td>39.900000</td>\n",
       "      <td>79.80</td>\n",
       "      <td>2</td>\n",
       "      <td>181</td>\n",
       "      <td>90.500000</td>\n",
       "      <td>17</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>1</td>\n",
       "      <td>29.470769</td>\n",
       "      <td>383.12</td>\n",
       "      <td>13</td>\n",
       "      <td>202</td>\n",
       "      <td>15.538462</td>\n",
       "      <td>22</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>...</th>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1262</th>\n",
       "      <td>1</td>\n",
       "      <td>18.409412</td>\n",
       "      <td>312.96</td>\n",
       "      <td>17</td>\n",
       "      <td>87</td>\n",
       "      <td>5.117647</td>\n",
       "      <td>4324</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1263</th>\n",
       "      <td>1</td>\n",
       "      <td>102.000000</td>\n",
       "      <td>102.00</td>\n",
       "      <td>1</td>\n",
       "      <td>40</td>\n",
       "      <td>40.000000</td>\n",
       "      <td>4329</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1264</th>\n",
       "      <td>1</td>\n",
       "      <td>19.322222</td>\n",
       "      <td>173.90</td>\n",
       "      <td>9</td>\n",
       "      <td>66</td>\n",
       "      <td>7.333333</td>\n",
       "      <td>4333</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1265</th>\n",
       "      <td>1</td>\n",
       "      <td>2.870213</td>\n",
       "      <td>134.90</td>\n",
       "      <td>47</td>\n",
       "      <td>95</td>\n",
       "      <td>2.021277</td>\n",
       "      <td>4337</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1266</th>\n",
       "      <td>140</td>\n",
       "      <td>11.379726</td>\n",
       "      <td>105751.79</td>\n",
       "      <td>1888</td>\n",
       "      <td>30517</td>\n",
       "      <td>3.283870</td>\n",
       "      <td>4339</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "<p>1267 rows × 8 columns</p>\n",
       "</div>\n",
       "      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-8d45a980-07ef-485a-91b0-7d3b5340e33a')\"\n",
       "              title=\"Convert this dataframe to an interactive table.\"\n",
       "              style=\"display:none;\">\n",
       "        \n",
       "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
       "       width=\"24px\">\n",
       "    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n",
       "    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n",
       "  </svg>\n",
       "      </button>\n",
       "      \n",
       "  <style>\n",
       "    .colab-df-container {\n",
       "      display:flex;\n",
       "      flex-wrap:wrap;\n",
       "      gap: 12px;\n",
       "    }\n",
       "\n",
       "    .colab-df-convert {\n",
       "      background-color: #E8F0FE;\n",
       "      border: none;\n",
       "      border-radius: 50%;\n",
       "      cursor: pointer;\n",
       "      display: none;\n",
       "      fill: #1967D2;\n",
       "      height: 32px;\n",
       "      padding: 0 0 0 0;\n",
       "      width: 32px;\n",
       "    }\n",
       "\n",
       "    .colab-df-convert:hover {\n",
       "      background-color: #E2EBFA;\n",
       "      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
       "      fill: #174EA6;\n",
       "    }\n",
       "\n",
       "    [theme=dark] .colab-df-convert {\n",
       "      background-color: #3B4455;\n",
       "      fill: #D2E3FC;\n",
       "    }\n",
       "\n",
       "    [theme=dark] .colab-df-convert:hover {\n",
       "      background-color: #434B5C;\n",
       "      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
       "      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
       "      fill: #FFFFFF;\n",
       "    }\n",
       "  </style>\n",
       "\n",
       "      <script>\n",
       "        const buttonEl =\n",
       "          document.querySelector('#df-8d45a980-07ef-485a-91b0-7d3b5340e33a button.colab-df-convert');\n",
       "        buttonEl.style.display =\n",
       "          google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
       "\n",
       "        async function convertToInteractive(key) {\n",
       "          const element = document.querySelector('#df-8d45a980-07ef-485a-91b0-7d3b5340e33a');\n",
       "          const dataTable =\n",
       "            await google.colab.kernel.invokeFunction('convertToInteractive',\n",
       "                                                     [key], {});\n",
       "          if (!dataTable) return;\n",
       "\n",
       "          const docLinkHtml = 'Like what you see? Visit the ' +\n",
       "            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n",
       "            + ' to learn more about interactive tables.';\n",
       "          element.innerHTML = '';\n",
       "          dataTable['output_type'] = 'display_data';\n",
       "          await google.colab.output.renderOutput(dataTable, element);\n",
       "          const docLink = document.createElement('div');\n",
       "          docLink.innerHTML = docLinkHtml;\n",
       "          element.appendChild(docLink);\n",
       "        }\n",
       "      </script>\n",
       "    </div>\n",
       "  </div>\n",
       "  "
      ],
      "text/plain": [
       "      No. of visits  Mean_purch  Sum_purch  Item_count  Total_quantity  \\\n",
       "0                 1  103.333333     310.00           3             217   \n",
       "1                 2   19.765625     632.50          27             155   \n",
       "2                 1   20.749750     829.99          40             267   \n",
       "3                 1   39.900000      79.80           2             181   \n",
       "4                 1   29.470769     383.12          13             202   \n",
       "...             ...         ...        ...         ...             ...   \n",
       "1262              1   18.409412     312.96          17              87   \n",
       "1263              1  102.000000     102.00           1              40   \n",
       "1264              1   19.322222     173.90           9              66   \n",
       "1265              1    2.870213     134.90          47              95   \n",
       "1266            140   11.379726  105751.79        1888           30517   \n",
       "\n",
       "      Avg_quant  CustomerID  cluster_labels  \n",
       "0     72.333333           2               0  \n",
       "1      4.843750           5               0  \n",
       "2      6.675000          15               0  \n",
       "3     90.500000          17               0  \n",
       "4     15.538462          22               0  \n",
       "...         ...         ...             ...  \n",
       "1262   5.117647        4324               0  \n",
       "1263  40.000000        4329               0  \n",
       "1264   7.333333        4333               0  \n",
       "1265   2.021277        4337               0  \n",
       "1266   3.283870        4339               1  \n",
       "\n",
       "[1267 rows x 8 columns]"
      ]
     },
     "execution_count": 175,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "df_sep2011 = df_cluster_labels(dvt_sep2011,3)\n",
    "df_sep2011"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {
    "colab": {
     "base_uri": "https://localhost:8080/"
    },
    "id": "Jg1QktaTotW6",
    "outputId": "09b242cb-464d-4518-a01a-92375e8d57b6"
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "The Silhouette Score is :- 0.9394436256113118\n"
     ]
    }
   ],
   "source": [
    "silhte_score_sep2011 = silhouette_score(dvt_sep2011, df_sep2011['cluster_labels'])\n",
    "print(\"The Silhouette Score is :- \"+str(silhte_score_sep2011))\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {
    "colab": {
     "base_uri": "https://localhost:8080/"
    },
    "collapsed": true,
    "id": "KqAduS8FTf-O",
    "outputId": "a900c9ab-6461-4a7e-c586-7dbab4865fd1"
   },
   "outputs": [
    {
     "data": {
      "text/plain": [
       "0    1261\n",
       "2       4\n",
       "1       2\n",
       "Name: cluster_labels, dtype: int64"
      ]
     },
     "execution_count": 177,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "df_sep2011['cluster_labels'].value_counts()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {
    "colab": {
     "base_uri": "https://localhost:8080/"
    },
    "collapsed": true,
    "id": "Q3xNEGOMTkI5",
    "outputId": "07aa29c7-5788-46fc-de4a-8fb7f779e3a3"
   },
   "outputs": [
    {
     "data": {
      "image/png": "",
      "text/plain": [
       "<Figure size 640x480 with 1 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "plt.scatter(df_sep2011['Mean_purch'], df_sep2011['Sum_purch'], c=df_sep2011['cluster_labels'], cmap='viridis')\n",
    "plt.title(\"For Sep 2011\")\n",
    "plt.xlabel('Mean_purch')\n",
    "plt.ylabel('Sum_purch')\n",
    "plt.show()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {
    "colab": {
     "base_uri": "https://localhost:8080/"
    },
    "collapsed": true,
    "id": "ngThsU64TqRs",
    "outputId": "9dc8ec03-b12a-4c3d-b1a7-050eeedb6ee8"
   },
   "outputs": [
    {
     "data": {
      "text/html": [
       "\n",
       "  <div id=\"df-77cd2cf9-52e9-47c4-ac68-6be508d5a521\">\n",
       "    <div class=\"colab-df-container\">\n",
       "      <div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>No. of visits</th>\n",
       "      <th>Mean_purch</th>\n",
       "      <th>Sum_purch</th>\n",
       "      <th>Item_count</th>\n",
       "      <th>Total_quantity</th>\n",
       "      <th>Avg_quant</th>\n",
       "      <th>CustomerID</th>\n",
       "      <th>cluster_labels</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>1</td>\n",
       "      <td>103.333333</td>\n",
       "      <td>310.00</td>\n",
       "      <td>3</td>\n",
       "      <td>217</td>\n",
       "      <td>72.333333</td>\n",
       "      <td>2</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>2</td>\n",
       "      <td>19.765625</td>\n",
       "      <td>632.50</td>\n",
       "      <td>27</td>\n",
       "      <td>155</td>\n",
       "      <td>4.843750</td>\n",
       "      <td>5</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>1</td>\n",
       "      <td>20.749750</td>\n",
       "      <td>829.99</td>\n",
       "      <td>40</td>\n",
       "      <td>267</td>\n",
       "      <td>6.675000</td>\n",
       "      <td>15</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>1</td>\n",
       "      <td>39.900000</td>\n",
       "      <td>79.80</td>\n",
       "      <td>2</td>\n",
       "      <td>181</td>\n",
       "      <td>90.500000</td>\n",
       "      <td>17</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>1</td>\n",
       "      <td>29.470769</td>\n",
       "      <td>383.12</td>\n",
       "      <td>13</td>\n",
       "      <td>202</td>\n",
       "      <td>15.538462</td>\n",
       "      <td>22</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>...</th>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1261</th>\n",
       "      <td>1</td>\n",
       "      <td>14.986667</td>\n",
       "      <td>224.80</td>\n",
       "      <td>15</td>\n",
       "      <td>102</td>\n",
       "      <td>6.800000</td>\n",
       "      <td>4321</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1262</th>\n",
       "      <td>1</td>\n",
       "      <td>18.409412</td>\n",
       "      <td>312.96</td>\n",
       "      <td>17</td>\n",
       "      <td>87</td>\n",
       "      <td>5.117647</td>\n",
       "      <td>4324</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1263</th>\n",
       "      <td>1</td>\n",
       "      <td>102.000000</td>\n",
       "      <td>102.00</td>\n",
       "      <td>1</td>\n",
       "      <td>40</td>\n",
       "      <td>40.000000</td>\n",
       "      <td>4329</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1264</th>\n",
       "      <td>1</td>\n",
       "      <td>19.322222</td>\n",
       "      <td>173.90</td>\n",
       "      <td>9</td>\n",
       "      <td>66</td>\n",
       "      <td>7.333333</td>\n",
       "      <td>4333</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1265</th>\n",
       "      <td>1</td>\n",
       "      <td>2.870213</td>\n",
       "      <td>134.90</td>\n",
       "      <td>47</td>\n",
       "      <td>95</td>\n",
       "      <td>2.021277</td>\n",
       "      <td>4337</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "<p>1261 rows × 8 columns</p>\n",
       "</div>\n",
       "      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-77cd2cf9-52e9-47c4-ac68-6be508d5a521')\"\n",
       "              title=\"Convert this dataframe to an interactive table.\"\n",
       "              style=\"display:none;\">\n",
       "        \n",
       "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
       "       width=\"24px\">\n",
       "    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n",
       "    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n",
       "  </svg>\n",
       "      </button>\n",
       "      \n",
       "  <style>\n",
       "    .colab-df-container {\n",
       "      display:flex;\n",
       "      flex-wrap:wrap;\n",
       "      gap: 12px;\n",
       "    }\n",
       "\n",
       "    .colab-df-convert {\n",
       "      background-color: #E8F0FE;\n",
       "      border: none;\n",
       "      border-radius: 50%;\n",
       "      cursor: pointer;\n",
       "      display: none;\n",
       "      fill: #1967D2;\n",
       "      height: 32px;\n",
       "      padding: 0 0 0 0;\n",
       "      width: 32px;\n",
       "    }\n",
       "\n",
       "    .colab-df-convert:hover {\n",
       "      background-color: #E2EBFA;\n",
       "      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
       "      fill: #174EA6;\n",
       "    }\n",
       "\n",
       "    [theme=dark] .colab-df-convert {\n",
       "      background-color: #3B4455;\n",
       "      fill: #D2E3FC;\n",
       "    }\n",
       "\n",
       "    [theme=dark] .colab-df-convert:hover {\n",
       "      background-color: #434B5C;\n",
       "      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
       "      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
       "      fill: #FFFFFF;\n",
       "    }\n",
       "  </style>\n",
       "\n",
       "      <script>\n",
       "        const buttonEl =\n",
       "          document.querySelector('#df-77cd2cf9-52e9-47c4-ac68-6be508d5a521 button.colab-df-convert');\n",
       "        buttonEl.style.display =\n",
       "          google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
       "\n",
       "        async function convertToInteractive(key) {\n",
       "          const element = document.querySelector('#df-77cd2cf9-52e9-47c4-ac68-6be508d5a521');\n",
       "          const dataTable =\n",
       "            await google.colab.kernel.invokeFunction('convertToInteractive',\n",
       "                                                     [key], {});\n",
       "          if (!dataTable) return;\n",
       "\n",
       "          const docLinkHtml = 'Like what you see? Visit the ' +\n",
       "            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n",
       "            + ' to learn more about interactive tables.';\n",
       "          element.innerHTML = '';\n",
       "          dataTable['output_type'] = 'display_data';\n",
       "          await google.colab.output.renderOutput(dataTable, element);\n",
       "          const docLink = document.createElement('div');\n",
       "          docLink.innerHTML = docLinkHtml;\n",
       "          element.appendChild(docLink);\n",
       "        }\n",
       "      </script>\n",
       "    </div>\n",
       "  </div>\n",
       "  "
      ],
      "text/plain": [
       "      No. of visits  Mean_purch  Sum_purch  Item_count  Total_quantity  \\\n",
       "0                 1  103.333333     310.00           3             217   \n",
       "1                 2   19.765625     632.50          27             155   \n",
       "2                 1   20.749750     829.99          40             267   \n",
       "3                 1   39.900000      79.80           2             181   \n",
       "4                 1   29.470769     383.12          13             202   \n",
       "...             ...         ...        ...         ...             ...   \n",
       "1261              1   14.986667     224.80          15             102   \n",
       "1262              1   18.409412     312.96          17              87   \n",
       "1263              1  102.000000     102.00           1              40   \n",
       "1264              1   19.322222     173.90           9              66   \n",
       "1265              1    2.870213     134.90          47              95   \n",
       "\n",
       "      Avg_quant  CustomerID  cluster_labels  \n",
       "0     72.333333           2               0  \n",
       "1      4.843750           5               0  \n",
       "2      6.675000          15               0  \n",
       "3     90.500000          17               0  \n",
       "4     15.538462          22               0  \n",
       "...         ...         ...             ...  \n",
       "1261   6.800000        4321               0  \n",
       "1262   5.117647        4324               0  \n",
       "1263  40.000000        4329               0  \n",
       "1264   7.333333        4333               0  \n",
       "1265   2.021277        4337               0  \n",
       "\n",
       "[1261 rows x 8 columns]"
      ]
     },
     "execution_count": 179,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "#Thus Clusters 1 and 2 are outliers as they have very few datapoints(Customers)\n",
    "#So we remove them and then applyKMeans again\n",
    "#Thus\n",
    "#Then check for outliers and if required, repeat the process\n",
    "#Below is for outliers:-\n",
    "\n",
    "df_sep2011 = df_sep2011[df_sep2011['cluster_labels']!=1]\n",
    "df_sep2011 = df_sep2011[df_sep2011['cluster_labels']!=2]\n",
    "df_sep2011"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {
    "colab": {
     "base_uri": "https://localhost:8080/"
    },
    "collapsed": true,
    "id": "CAjyFy5cTyUO",
    "outputId": "c71db1a3-da98-41a1-8c72-8533881e278a"
   },
   "outputs": [
    {
     "data": {
      "text/plain": [
       "0    1261\n",
       "Name: cluster_labels, dtype: int64"
      ]
     },
     "execution_count": 180,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "df_sep2011['cluster_labels'].value_counts()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {
    "colab": {
     "base_uri": "https://localhost:8080/"
    },
    "collapsed": true,
    "id": "wQVo57BYT3uk",
    "outputId": "0229d1b9-91b9-44a7-be7b-efde1744411b"
   },
   "outputs": [
    {
     "data": {
      "text/html": [
       "\n",
       "  <div id=\"df-0dec23ac-b6f6-439f-aad6-3255a52719da\">\n",
       "    <div class=\"colab-df-container\">\n",
       "      <div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>No. of visits</th>\n",
       "      <th>Mean_purch</th>\n",
       "      <th>Sum_purch</th>\n",
       "      <th>Item_count</th>\n",
       "      <th>Total_quantity</th>\n",
       "      <th>Avg_quant</th>\n",
       "      <th>CustomerID</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>1</td>\n",
       "      <td>103.333333</td>\n",
       "      <td>310.00</td>\n",
       "      <td>3</td>\n",
       "      <td>217</td>\n",
       "      <td>72.333333</td>\n",
       "      <td>2</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>2</td>\n",
       "      <td>19.765625</td>\n",
       "      <td>632.50</td>\n",
       "      <td>27</td>\n",
       "      <td>155</td>\n",
       "      <td>4.843750</td>\n",
       "      <td>5</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>1</td>\n",
       "      <td>20.749750</td>\n",
       "      <td>829.99</td>\n",
       "      <td>40</td>\n",
       "      <td>267</td>\n",
       "      <td>6.675000</td>\n",
       "      <td>15</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>1</td>\n",
       "      <td>39.900000</td>\n",
       "      <td>79.80</td>\n",
       "      <td>2</td>\n",
       "      <td>181</td>\n",
       "      <td>90.500000</td>\n",
       "      <td>17</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>1</td>\n",
       "      <td>29.470769</td>\n",
       "      <td>383.12</td>\n",
       "      <td>13</td>\n",
       "      <td>202</td>\n",
       "      <td>15.538462</td>\n",
       "      <td>22</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>...</th>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1261</th>\n",
       "      <td>1</td>\n",
       "      <td>14.986667</td>\n",
       "      <td>224.80</td>\n",
       "      <td>15</td>\n",
       "      <td>102</td>\n",
       "      <td>6.800000</td>\n",
       "      <td>4321</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1262</th>\n",
       "      <td>1</td>\n",
       "      <td>18.409412</td>\n",
       "      <td>312.96</td>\n",
       "      <td>17</td>\n",
       "      <td>87</td>\n",
       "      <td>5.117647</td>\n",
       "      <td>4324</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1263</th>\n",
       "      <td>1</td>\n",
       "      <td>102.000000</td>\n",
       "      <td>102.00</td>\n",
       "      <td>1</td>\n",
       "      <td>40</td>\n",
       "      <td>40.000000</td>\n",
       "      <td>4329</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1264</th>\n",
       "      <td>1</td>\n",
       "      <td>19.322222</td>\n",
       "      <td>173.90</td>\n",
       "      <td>9</td>\n",
       "      <td>66</td>\n",
       "      <td>7.333333</td>\n",
       "      <td>4333</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1265</th>\n",
       "      <td>1</td>\n",
       "      <td>2.870213</td>\n",
       "      <td>134.90</td>\n",
       "      <td>47</td>\n",
       "      <td>95</td>\n",
       "      <td>2.021277</td>\n",
       "      <td>4337</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "<p>1261 rows × 7 columns</p>\n",
       "</div>\n",
       "      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-0dec23ac-b6f6-439f-aad6-3255a52719da')\"\n",
       "              title=\"Convert this dataframe to an interactive table.\"\n",
       "              style=\"display:none;\">\n",
       "        \n",
       "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
       "       width=\"24px\">\n",
       "    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n",
       "    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n",
       "  </svg>\n",
       "      </button>\n",
       "      \n",
       "  <style>\n",
       "    .colab-df-container {\n",
       "      display:flex;\n",
       "      flex-wrap:wrap;\n",
       "      gap: 12px;\n",
       "    }\n",
       "\n",
       "    .colab-df-convert {\n",
       "      background-color: #E8F0FE;\n",
       "      border: none;\n",
       "      border-radius: 50%;\n",
       "      cursor: pointer;\n",
       "      display: none;\n",
       "      fill: #1967D2;\n",
       "      height: 32px;\n",
       "      padding: 0 0 0 0;\n",
       "      width: 32px;\n",
       "    }\n",
       "\n",
       "    .colab-df-convert:hover {\n",
       "      background-color: #E2EBFA;\n",
       "      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
       "      fill: #174EA6;\n",
       "    }\n",
       "\n",
       "    [theme=dark] .colab-df-convert {\n",
       "      background-color: #3B4455;\n",
       "      fill: #D2E3FC;\n",
       "    }\n",
       "\n",
       "    [theme=dark] .colab-df-convert:hover {\n",
       "      background-color: #434B5C;\n",
       "      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
       "      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
       "      fill: #FFFFFF;\n",
       "    }\n",
       "  </style>\n",
       "\n",
       "      <script>\n",
       "        const buttonEl =\n",
       "          document.querySelector('#df-0dec23ac-b6f6-439f-aad6-3255a52719da button.colab-df-convert');\n",
       "        buttonEl.style.display =\n",
       "          google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
       "\n",
       "        async function convertToInteractive(key) {\n",
       "          const element = document.querySelector('#df-0dec23ac-b6f6-439f-aad6-3255a52719da');\n",
       "          const dataTable =\n",
       "            await google.colab.kernel.invokeFunction('convertToInteractive',\n",
       "                                                     [key], {});\n",
       "          if (!dataTable) return;\n",
       "\n",
       "          const docLinkHtml = 'Like what you see? Visit the ' +\n",
       "            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n",
       "            + ' to learn more about interactive tables.';\n",
       "          element.innerHTML = '';\n",
       "          dataTable['output_type'] = 'display_data';\n",
       "          await google.colab.output.renderOutput(dataTable, element);\n",
       "          const docLink = document.createElement('div');\n",
       "          docLink.innerHTML = docLinkHtml;\n",
       "          element.appendChild(docLink);\n",
       "        }\n",
       "      </script>\n",
       "    </div>\n",
       "  </div>\n",
       "  "
      ],
      "text/plain": [
       "      No. of visits  Mean_purch  Sum_purch  Item_count  Total_quantity  \\\n",
       "0                 1  103.333333     310.00           3             217   \n",
       "1                 2   19.765625     632.50          27             155   \n",
       "2                 1   20.749750     829.99          40             267   \n",
       "3                 1   39.900000      79.80           2             181   \n",
       "4                 1   29.470769     383.12          13             202   \n",
       "...             ...         ...        ...         ...             ...   \n",
       "1261              1   14.986667     224.80          15             102   \n",
       "1262              1   18.409412     312.96          17              87   \n",
       "1263              1  102.000000     102.00           1              40   \n",
       "1264              1   19.322222     173.90           9              66   \n",
       "1265              1    2.870213     134.90          47              95   \n",
       "\n",
       "      Avg_quant  CustomerID  \n",
       "0     72.333333           2  \n",
       "1      4.843750           5  \n",
       "2      6.675000          15  \n",
       "3     90.500000          17  \n",
       "4     15.538462          22  \n",
       "...         ...         ...  \n",
       "1261   6.800000        4321  \n",
       "1262   5.117647        4324  \n",
       "1263  40.000000        4329  \n",
       "1264   7.333333        4333  \n",
       "1265   2.021277        4337  \n",
       "\n",
       "[1261 rows x 7 columns]"
      ]
     },
     "execution_count": 181,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "df_sep2011_person = df_sep2011.copy(deep=True)\n",
    "df_sep2011_person.drop(['cluster_labels'],axis=1,inplace=True)\n",
    "df_sep2011_person\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {
    "colab": {
     "base_uri": "https://localhost:8080/"
    },
    "collapsed": true,
    "id": "MiiosYa5T8sI",
    "outputId": "c666ca52-af6d-4d38-8328-f84d7c760bf2"
   },
   "outputs": [
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "/usr/local/lib/python3.9/dist-packages/sklearn/cluster/_kmeans.py:870: FutureWarning: The default value of `n_init` will change from 10 to 'auto' in 1.4. Set the value of `n_init` explicitly to suppress the warning\n",
      "  warnings.warn(\n"
     ]
    },
    {
     "data": {
      "text/html": [
       "\n",
       "  <div id=\"df-5d7205ac-2164-41f0-8dc7-e779b2aa1de9\">\n",
       "    <div class=\"colab-df-container\">\n",
       "      <div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>No. of visits</th>\n",
       "      <th>Mean_purch</th>\n",
       "      <th>Sum_purch</th>\n",
       "      <th>Item_count</th>\n",
       "      <th>Total_quantity</th>\n",
       "      <th>Avg_quant</th>\n",
       "      <th>CustomerID</th>\n",
       "      <th>cluster_labels</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>1</td>\n",
       "      <td>103.333333</td>\n",
       "      <td>310.00</td>\n",
       "      <td>3</td>\n",
       "      <td>217</td>\n",
       "      <td>72.333333</td>\n",
       "      <td>2</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>2</td>\n",
       "      <td>19.765625</td>\n",
       "      <td>632.50</td>\n",
       "      <td>27</td>\n",
       "      <td>155</td>\n",
       "      <td>4.843750</td>\n",
       "      <td>5</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>1</td>\n",
       "      <td>20.749750</td>\n",
       "      <td>829.99</td>\n",
       "      <td>40</td>\n",
       "      <td>267</td>\n",
       "      <td>6.675000</td>\n",
       "      <td>15</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>1</td>\n",
       "      <td>39.900000</td>\n",
       "      <td>79.80</td>\n",
       "      <td>2</td>\n",
       "      <td>181</td>\n",
       "      <td>90.500000</td>\n",
       "      <td>17</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>1</td>\n",
       "      <td>29.470769</td>\n",
       "      <td>383.12</td>\n",
       "      <td>13</td>\n",
       "      <td>202</td>\n",
       "      <td>15.538462</td>\n",
       "      <td>22</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>...</th>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1261</th>\n",
       "      <td>1</td>\n",
       "      <td>14.986667</td>\n",
       "      <td>224.80</td>\n",
       "      <td>15</td>\n",
       "      <td>102</td>\n",
       "      <td>6.800000</td>\n",
       "      <td>4321</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1262</th>\n",
       "      <td>1</td>\n",
       "      <td>18.409412</td>\n",
       "      <td>312.96</td>\n",
       "      <td>17</td>\n",
       "      <td>87</td>\n",
       "      <td>5.117647</td>\n",
       "      <td>4324</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1263</th>\n",
       "      <td>1</td>\n",
       "      <td>102.000000</td>\n",
       "      <td>102.00</td>\n",
       "      <td>1</td>\n",
       "      <td>40</td>\n",
       "      <td>40.000000</td>\n",
       "      <td>4329</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1264</th>\n",
       "      <td>1</td>\n",
       "      <td>19.322222</td>\n",
       "      <td>173.90</td>\n",
       "      <td>9</td>\n",
       "      <td>66</td>\n",
       "      <td>7.333333</td>\n",
       "      <td>4333</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1265</th>\n",
       "      <td>1</td>\n",
       "      <td>2.870213</td>\n",
       "      <td>134.90</td>\n",
       "      <td>47</td>\n",
       "      <td>95</td>\n",
       "      <td>2.021277</td>\n",
       "      <td>4337</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "<p>1261 rows × 8 columns</p>\n",
       "</div>\n",
       "      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-5d7205ac-2164-41f0-8dc7-e779b2aa1de9')\"\n",
       "              title=\"Convert this dataframe to an interactive table.\"\n",
       "              style=\"display:none;\">\n",
       "        \n",
       "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
       "       width=\"24px\">\n",
       "    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n",
       "    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n",
       "  </svg>\n",
       "      </button>\n",
       "      \n",
       "  <style>\n",
       "    .colab-df-container {\n",
       "      display:flex;\n",
       "      flex-wrap:wrap;\n",
       "      gap: 12px;\n",
       "    }\n",
       "\n",
       "    .colab-df-convert {\n",
       "      background-color: #E8F0FE;\n",
       "      border: none;\n",
       "      border-radius: 50%;\n",
       "      cursor: pointer;\n",
       "      display: none;\n",
       "      fill: #1967D2;\n",
       "      height: 32px;\n",
       "      padding: 0 0 0 0;\n",
       "      width: 32px;\n",
       "    }\n",
       "\n",
       "    .colab-df-convert:hover {\n",
       "      background-color: #E2EBFA;\n",
       "      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
       "      fill: #174EA6;\n",
       "    }\n",
       "\n",
       "    [theme=dark] .colab-df-convert {\n",
       "      background-color: #3B4455;\n",
       "      fill: #D2E3FC;\n",
       "    }\n",
       "\n",
       "    [theme=dark] .colab-df-convert:hover {\n",
       "      background-color: #434B5C;\n",
       "      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
       "      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
       "      fill: #FFFFFF;\n",
       "    }\n",
       "  </style>\n",
       "\n",
       "      <script>\n",
       "        const buttonEl =\n",
       "          document.querySelector('#df-5d7205ac-2164-41f0-8dc7-e779b2aa1de9 button.colab-df-convert');\n",
       "        buttonEl.style.display =\n",
       "          google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
       "\n",
       "        async function convertToInteractive(key) {\n",
       "          const element = document.querySelector('#df-5d7205ac-2164-41f0-8dc7-e779b2aa1de9');\n",
       "          const dataTable =\n",
       "            await google.colab.kernel.invokeFunction('convertToInteractive',\n",
       "                                                     [key], {});\n",
       "          if (!dataTable) return;\n",
       "\n",
       "          const docLinkHtml = 'Like what you see? Visit the ' +\n",
       "            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n",
       "            + ' to learn more about interactive tables.';\n",
       "          element.innerHTML = '';\n",
       "          dataTable['output_type'] = 'display_data';\n",
       "          await google.colab.output.renderOutput(dataTable, element);\n",
       "          const docLink = document.createElement('div');\n",
       "          docLink.innerHTML = docLinkHtml;\n",
       "          element.appendChild(docLink);\n",
       "        }\n",
       "      </script>\n",
       "    </div>\n",
       "  </div>\n",
       "  "
      ],
      "text/plain": [
       "      No. of visits  Mean_purch  Sum_purch  Item_count  Total_quantity  \\\n",
       "0                 1  103.333333     310.00           3             217   \n",
       "1                 2   19.765625     632.50          27             155   \n",
       "2                 1   20.749750     829.99          40             267   \n",
       "3                 1   39.900000      79.80           2             181   \n",
       "4                 1   29.470769     383.12          13             202   \n",
       "...             ...         ...        ...         ...             ...   \n",
       "1261              1   14.986667     224.80          15             102   \n",
       "1262              1   18.409412     312.96          17              87   \n",
       "1263              1  102.000000     102.00           1              40   \n",
       "1264              1   19.322222     173.90           9              66   \n",
       "1265              1    2.870213     134.90          47              95   \n",
       "\n",
       "      Avg_quant  CustomerID  cluster_labels  \n",
       "0     72.333333           2               1  \n",
       "1      4.843750           5               1  \n",
       "2      6.675000          15               1  \n",
       "3     90.500000          17               1  \n",
       "4     15.538462          22               1  \n",
       "...         ...         ...             ...  \n",
       "1261   6.800000        4321               0  \n",
       "1262   5.117647        4324               0  \n",
       "1263  40.000000        4329               0  \n",
       "1264   7.333333        4333               0  \n",
       "1265   2.021277        4337               0  \n",
       "\n",
       "[1261 rows x 8 columns]"
      ]
     },
     "execution_count": 182,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "df_sep2011_new = df_cluster_labels(df_sep2011_person,3)\n",
    "df_sep2011_new"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {
    "colab": {
     "base_uri": "https://localhost:8080/"
    },
    "id": "JvfyTwRxo0tt",
    "outputId": "29050189-4fe6-4e8e-983d-ea5821f2e575"
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "The Silhouette Score is :- 0.528081845524613\n"
     ]
    }
   ],
   "source": [
    "silhte_score_sep2011_new = silhouette_score(df_sep2011_person, df_sep2011_new['cluster_labels'])\n",
    "print(\"The Silhouette Score is :- \"+str(silhte_score_sep2011_new))\n",
    "#Indicates that silhouette score is realistic for dataset without outliers"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {
    "colab": {
     "base_uri": "https://localhost:8080/"
    },
    "collapsed": true,
    "id": "buBDHJyZUBGq",
    "outputId": "268e1297-db8c-47b5-fb2d-f62b2cddbfb8"
   },
   "outputs": [
    {
     "data": {
      "text/plain": [
       "1    623\n",
       "0    603\n",
       "2     35\n",
       "Name: cluster_labels, dtype: int64"
      ]
     },
     "execution_count": 184,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "df_sep2011_new['cluster_labels'].value_counts()\n",
    "#These are comparatively good clusters"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {
    "colab": {
     "base_uri": "https://localhost:8080/"
    },
    "collapsed": true,
    "id": "hl4ddjciUFfF",
    "outputId": "f9122bc1-fc30-4a77-ed18-aaec0c37af54"
   },
   "outputs": [
    {
     "data": {
      "image/png": "",
      "text/plain": [
       "<Figure size 640x480 with 1 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "plt.scatter(df_sep2011_new['Mean_purch'], df_sep2011_new['Sum_purch'], c=df_sep2011_new['cluster_labels'], cmap='viridis')\n",
    "plt.title(\"For Sep 2011 (After removing outliers)\")\n",
    "plt.xlabel('Mean_purch')\n",
    "plt.ylabel('Sum_purch')\n",
    "plt.show()\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {
    "id": "671QVdFSUKTV"
   },
   "outputs": [],
   "source": [
    "sep2011 = descrip_dict(og_sep2011,df_sep2011_new)\n",
    "sep2011 = processlis(sep2011)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {
    "colab": {
     "base_uri": "https://localhost:8080/"
    },
    "collapsed": true,
    "id": "50zgcDmbUQFe",
    "outputId": "4b9ddde3-f88a-4ca1-8315-7d5331317071"
   },
   "outputs": [
    {
     "data": {
      "text/plain": [
       "[     CustomerID                                        Description\n",
       " 0             2  [DOUGHNUT LIP GLOSS , ICE CREAM PEN LIP GLOSS ...\n",
       " 1             5  [ANTIQUE GLASS PEDESTAL BOWL, PANTRY MAGNETIC ...\n",
       " 2            15  [RED RETROSPOT PICNIC BAG, RED RETROSPOT SMALL...\n",
       " 3            17                 [POSTAGE, BUBBLEGUM RING ASSORTED]\n",
       " 4            22  [HANGING QUILTED PATCHWORK APPLES, AIRLINE BAG...\n",
       " ..          ...                                                ...\n",
       " 618        2125  [KINGS CHOICE TEA CADDY , METAL SIGN EMPIRE TE...\n",
       " 619        2126  [WOODLAND BUNNIES LOLLY MAKERS, CHRISTMAS RETR...\n",
       " 620        2131  [VINTAGE BILLBOARD LOVE/HATE MUG, HOME SWEET H...\n",
       " 621        2132  [CHRISTMAS LIGHTS 10 SANTAS , BISCUIT TIN 50'S...\n",
       " 622        2134  [WHITE HANGING HEART T-LIGHT HOLDER, 6 RIBBONS...\n",
       " \n",
       " [623 rows x 2 columns],\n",
       "      CustomerID                                        Description\n",
       " 0          2150  [HOME SWEET HOME CUSHION COVER , BELLE JARDINI...\n",
       " 1          2151  [GRAND CHOCOLATECANDLE, HOMEMADE JAM SCENTED C...\n",
       " 2          2160  [WHITE SKULL HOT WATER BOTTLE , CERAMIC PIRATE...\n",
       " 3          2163  [MINT KITCHEN SCALES, JAM MAKING SET PRINTED, ...\n",
       " 4          2164  [LOVE BUILDING BLOCK WORD, BLUE SPOT CERAMIC D...\n",
       " ..          ...                                                ...\n",
       " 598        4321  [FELTCRAFT CHRISTMAS FAIRY, CHRISTMAS CRAFT LI...\n",
       " 599        4324  [CHILLI LIGHTS, PRETTY HANGING QUILTED HEARTS,...\n",
       " 600        4329                           [ART LIGHTS,FUNK MONKEY]\n",
       " 601        4333  [HOT WATER BOTTLE TEA AND SYMPATHY, GARDENERS ...\n",
       " 602        4337  [RECYCLING BAG RETROSPOT , 60 TEATIME FAIRY CA...\n",
       " \n",
       " [603 rows x 2 columns]]"
      ]
     },
     "execution_count": 187,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "sep2011"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {
    "colab": {
     "base_uri": "https://localhost:8080/"
    },
    "id": "KZDPPnuYN3X3",
    "outputId": "02bf2e9d-9704-44bf-d680-23851d9ad128"
   },
   "outputs": [
    {
     "data": {
      "image/png": "",
      "text/plain": [
       "<Figure size 640x480 with 1 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "data": {
      "image/png": "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EZE2DFUiIiJNGKpERESaMFSJiIg0YagSERFpwlAlIiLShKFKRESkCUOViIhIE4YqERGRJgxVIiIiTRiqREREmjBUiYiINGGoEhERacJQJSIi0oShSkREpAlDlYiISBOGKhERkSYMVSIiIk0YqkRERJowVImIiDRhqBIREWnCUCUiItKEoUpERKQJQ5WIiEgThioREZEmDFUiIiJNGKpERESaMFSJiIg0YagSERFpwlAlIiLShKFKRESkCUOViIhIE4YqERGRJgxVIiIiTRiqREREmjBUiYiINGGoEhERacJQJSIi0oShSkREpAlDlYiISBOGKhERkSYMVSIiIk0YqkRERJowVImIiDRhqBIREWnCUCUiItKEoUpERKQJQ5WIiEgThioREZEmDFUiIiJNGiRUz5w5g1/+8pdo27YtQkJC0Lt3b+zcudOYLiKYNm0aOnTogJCQECQmJuLo0aMe88jLy0NKSgpsNhsiIiIwZswYXLx40aPMvn37MHToUAQHByM2NhazZs2qUpdly5ahe/fuCA4ORu/evbFq1aqGWGUiIiL9oXrhwgXccccdCAwMxOrVq5GZmYk33ngDkZGRRplZs2bhrbfewrvvvov09HS0atUKSUlJuHLlilEmJSUFBw8exNq1a7FixQps2rQJ48aNM6Y7nU4MHz4cN954IzIyMjB79mz88Y9/xHvvvWeU2bp1K0aPHo0xY8Zg9+7dGDlyJEaOHIkDBw7oXm0iIiJANHvppZdkyJAhNU53uVxit9tl9uzZxmv5+flitVpl8eLFIiKSmZkpAGTHjh1GmdWrV4vJZJIzZ86IiMi8efMkMjJSioqKPJbdrVs34/kjjzwiycnJHsuPj4+X8ePH+7QuDodDAIjD4fCpPBERtUy+5oH2I9UvvvgCAwcOxMMPP4yoqCj069cP77//vjH9+PHjyM7ORmJiovFaeHg44uPjkZaWBgBIS0tDREQEBg4caJRJTEyE2WxGenq6UebOO+9EUFCQUSYpKQlZWVm4cOGCUabictxl3MuprKioCE6n0+NBRETkK+2heuzYMbzzzjvo2rUrvvrqKzzzzDP43e9+h0WLFgEAsrOzAQDR0dEe74uOjjamZWdnIyoqymN6QEAA2rRp41GmunlUXEZNZdzTK5sxYwbCw8ONR2xsbJ3Xn4iIrl/aQ9XlcqF///74y1/+gn79+mHcuHEYO3Ys3n33Xd2L0m7q1KlwOBzG4/Tp0/6uEhERNSPaQ7VDhw7o0aOHx2u33norTp06BQCw2+0AgJycHI8yOTk5xjS73Y7c3FyP6aWlpcjLy/MoU908Ki6jpjLu6ZVZrVbYbDaPBxERka+0h+odd9yBrKwsj9eOHDmCG2+8EQAQFxcHu92O1NRUY7rT6UR6ejoSEhIAAAkJCcjPz0dGRoZRZt26dXC5XIiPjzfKbNq0CSUlJUaZtWvXolu3bkZL44SEBI/luMu4l0NERKSV7hZS27dvl4CAAHnttdfk6NGj8tFHH0loaKh8+OGHRpmZM2dKRESEfP7557Jv3z554IEHJC4uTgoLC40yI0aMkH79+kl6erps3rxZunbtKqNHjzam5+fnS3R0tDz++ONy4MABWbJkiYSGhsr8+fONMlu2bJGAgAB5/fXX5dChQzJ9+nQJDAyU/fv3+7QubP1LREQivueB9lAVEfnyyy+lV69eYrVapXv37vLee+95THe5XPLKK69IdHS0WK1WGTZsmGRlZXmUOX/+vIwePVrCwsLEZrPJk08+KQUFBR5l9u7dK0OGDBGr1So33HCDzJw5s0pdPvnkE7nlllskKChIevbsKStXrvR5PRiqREQk4nsemERE/Hus3HQ5nU6Eh4fD4XDw+ioR0XXM1zxg379ERESaMFSJiIg0YagSERFpwlAlIiLShKFKRESkCUOViIhIE4YqERGRJgxVIiIiTRiqREREmjBUiYiINGGoEhERacJQJSIi0oShSkREpAlDlYiISBOGKhERkSYMVSIiIk0YqkRERJowVImIiDRhqBIREWnCUCUiItIkwN8VICIi75y4gn34Dk5cQSiC0BsxaIswf1eLqsFQJSJqogSCTTiKTTgKADDBBAGwCUfRH7G4F71g5gnHJoX/G0RETdQOnMRGHIUAEAAuCAQCANiF0/gPDvu1flQVQ5WIqAkqgwtflx+h1mQHTuAyihupRuQLhioRURN0Bvm4VEtglkHwDXIbqUbkC4YqEVETVIxSH8uVNXBNqC4YqkRETVA7H1v3+lqOGgdDlYioCYpAKG5CO5hgqna6CUAbhOJGtGncipFXDFUioibqXvRCMAJgrhSsJphggRkj0bfG0CX/YKgSETVRbdAKYzEEt+EGWMrD0wSgO6IxBnegIyL9W0Gqgp0/EBE1YREIxf3og3vQC5dRjBAEIohf3U0W/2eIiJqBQFgQjhB/V4NqwdO/REREmjBUiYiINGGoEhERacJQJSIi0oShSkREpAlDlYiISBOGKhERkSYMVSIiIk0YqkRERJowVImIiDRhqBIREWnCUCUiItKEoUpERKQJQ5WIiEgThioREZEmDFUiIiJNGKpERESaMFSJiIg0YagSERFpwlAlIiLShKFKRESkSYOH6syZM2EymTBp0iTjtStXrmDChAlo27YtwsLCMGrUKOTk5Hi879SpU0hOTkZoaCiioqIwZcoUlJaWepTZsGED+vfvD6vVii5dumDhwoVVlj937lx07twZwcHBiI+Px/bt2xtiNYmIiBo2VHfs2IH58+fjtttu83j9+eefx5dffolly5Zh48aNOHv2LB566CFjellZGZKTk1FcXIytW7di0aJFWLhwIaZNm2aUOX78OJKTk3HXXXdhz549mDRpEp566il89dVXRpmlS5di8uTJmD59Onbt2oU+ffogKSkJubm5DbnaRER0vZIGUlBQIF27dpW1a9fKj3/8Y3nuuedERCQ/P18CAwNl2bJlRtlDhw4JAElLSxMRkVWrVonZbJbs7GyjzDvvvCM2m02KiopEROTFF1+Unj17eizz0UcflaSkJOP54MGDZcKECcbzsrIyiYmJkRkzZvi0Dg6HQwCIw+Go28oTEVGL4mseNNiR6oQJE5CcnIzExESP1zMyMlBSUuLxevfu3dGpUyekpaUBANLS0tC7d29ER0cbZZKSkuB0OnHw4EGjTOV5JyUlGfMoLi5GRkaGRxmz2YzExESjTGVFRUVwOp0eDyIiIl8FNMRMlyxZgl27dmHHjh1VpmVnZyMoKAgREREer0dHRyM7O9soUzFQ3dPd07yVcTqdKCwsxIULF1BWVlZtmcOHD1db7xkzZuBPf/qT7ytKRERUgfYj1dOnT+O5557DRx99hODgYN2zb1BTp06Fw+EwHqdPn/Z3lYiIqBnRHqoZGRnIzc1F//79ERAQgICAAGzcuBFvvfUWAgICEB0djeLiYuTn53u8LycnB3a7HQBgt9urtAZ2P6+tjM1mQ0hICNq1aweLxVJtGfc8KrNarbDZbB4PIiIiX2kP1WHDhmH//v3Ys2eP8Rg4cCBSUlKMvwMDA5Gammq8JysrC6dOnUJCQgIAICEhAfv37/dopbt27VrYbDb06NHDKFNxHu4y7nkEBQVhwIABHmVcLhdSU1ONMkRERFo1Rqupiq1/RUSefvpp6dSpk6xbt0527twpCQkJkpCQYEwvLS2VXr16yfDhw2XPnj2yZs0aad++vUydOtUoc+zYMQkNDZUpU6bIoUOHZO7cuWKxWGTNmjVGmSVLlojVapWFCxdKZmamjBs3TiIiIjxaFXvD1r9ERCTiex40SEOl2vz1r3+F2WzGqFGjUFRUhKSkJMybN8+YbrFYsGLFCjzzzDNISEhAq1at8MQTT+C///u/jTJxcXFYuXIlnn/+ebz55pvo2LEjPvjgAyQlJRllHn30UZw7dw7Tpk1DdnY2+vbtizVr1lRpvERERKSDSUTE35VoqpxOJ8LDw+FwOHh9lYjoOuZrHrDvXyIiIk0YqkRERJowVImIiDRhqBIREWnCUCUiItKEoUpERKQJQ5WIiEgThioREZEmDFUiIiJNGKpERESaMFSJiIg0YagSERFpwlAlIiLShKFKRESkCUOViIhIE4YqERGRJgxVIiIiTRiqREREmjBUiYiINGGoUvMjAjidQEGBv2tCROSBoUrNhwjwt78BPXsC4eGAzQb06wd8/LGaRkTkZwxVah5EgPHjgaeeAg4fvvr6vn1ASgowdar/6kZEVI6hSs3DqlXA+++rvyselbpc6t//+3+BrVsbv15ERBUwVKl5mDcPsFhqnh4QoMoQEfkRQ5Wahz17gLKymqeXlqoyRER+xFCl5iE0VE8ZIqIGxFCl5uHnP/d++tdsBh5+uPHqQ0RUDYYqNQ/PPguEhKjwrMxiASIjgd/8pvHrRURUAUOVmofYWGDtWhWegGqYFBCg/o6KAtatA9q29V/9iIgABPi7AkQ++9GPgNOngaVLgc2bAZMJuPtuYNQoICjI37UjIoJJhF3R1MTpdCI8PBwOhwM2m83f1SEiIj/xNQ94+peIiEgThioREZEmDFUiIiJNGKpERESaMFSJiIg0YagSERFpwlAlIiLShKFKRESkCUOViIhIE4YqERGRJgxVIiIiTdihPpGvioqAzz4Ddu8GrFbgZz8DBg/2d62IqAlhqBL5YsMGNQj6Dz8AgYGACPDqq8CddwKffgq0a+fvGhJRE8DTv0S1OXgQuOceIC9PPS8pAUpL1d9btgAjRgBlZf6rHxE1GQxVotrMnq1C1OWqOq2sDMjIAL76qvHrRURNDkOVyBsR4JNPrh6ZVicgQJUhouser6mS/125AixbBmzbBlgswE9/Ctx7r/rb31wuoLDQe5myMsDpbJz6EFGTxlAl/9qyBXjgAeD8edUACADefhvo0gVYvVr9608WC3DjjcDJkzWXMZuBW25pvDoRUZPF07/kP8eOAcOHAxcuqOclJeoBAMePA3fdBVy86L/6uT37rArOmrhcwNixjVcfImqyGKrkP2+/DRQX19wA6MwZ4OOPG79elU2cCAwYUPV0tMmk/n31VeDmmxu/XkTU5DBUyX+WLvXeAAhQ11r9LTQUWL8emDwZCA+/+nr37sCHHwJ/+IP/6kZETYr2UJ0xYwYGDRqE1q1bIyoqCiNHjkRWVpZHmStXrmDChAlo27YtwsLCMGrUKOTk5HiUOXXqFJKTkxEaGoqoqChMmTIFpZW+gDds2ID+/fvDarWiS5cuWLhwYZX6zJ07F507d0ZwcDDi4+Oxfft23atM1+ryZe/TRYCCgsapS21atQJmzQJycoAjR9Q11oMHgZQUf9eMiJoQ7aG6ceNGTJgwAdu2bcPatWtRUlKC4cOH49KlS0aZ559/Hl9++SWWLVuGjRs34uzZs3jooYeM6WVlZUhOTkZxcTG2bt2KRYsWYeHChZg2bZpR5vjx40hOTsZdd92FPXv2YNKkSXjqqafwVYX7BZcuXYrJkydj+vTp2LVrF/r06YOkpCTk5ubqXm26Fj16eL9WGRAA9OnTePXxhdUKdO0KdOp09fQvEZGbNLDc3FwBIBs3bhQRkfz8fAkMDJRly5YZZQ4dOiQAJC0tTUREVq1aJWazWbKzs40y77zzjthsNikqKhIRkRdffFF69uzpsaxHH31UkpKSjOeDBw+WCRMmGM/LysokJiZGZsyY4VPdHQ6HABCHw1HHtSaffPihiDoerfmRkeHvWhIR+ZwHDX5N1eFwAADatGkDAMjIyEBJSQkSExONMt27d0enTp2QlpYGAEhLS0Pv3r0RHR1tlElKSoLT6cTBgweNMhXn4S7jnkdxcTEyMjI8ypjNZiQmJhplKisqKoLT6fR4UAN67DFg1KiqR3zuo9c//AHo37/x60VEdI0aNFRdLhcmTZqEO+64A7169QIAZGdnIygoCBERER5lo6OjkZ2dbZSpGKju6e5p3so4nU4UFhbihx9+QFlZWbVl3POobMaMGQgPDzcesbGx17bi5BuLBViyBHjjDXU61a1nT+Cjj4A//9l/dSMiugYNGqoTJkzAgQMHsGTJkoZcjDZTp06Fw+EwHqdPn/Z3lVq+gADg+efVfanZ2WoUmL17gV/8wt81IyKqswbrUWnixIlYsWIFNm3ahI4dOxqv2+12FBcXIz8/3+NoNScnB3a73ShTuZWuu3VwxTKVWwzn5OTAZrMhJCQEFosFFoul2jLueVRmtVphtVqvbYWpfsxmoNJZBSKi5kb7kaqIYOLEifjss8+wbt06xMXFeUwfMGAAAgMDkZqaaryWlZWFU6dOISEhAQCQkJCA/fv3e7TSXbt2LWw2G3r06GGUqTgPdxn3PIKCgjBgwACPMi6XC6mpqUYZIiIirXS3kHrmmWckPDxcNmzYIN9//73xuHz5slHm6aeflk6dOsm6detk586dkpCQIAkJCcb00tJS6dWrlwwfPlz27Nkja9askfbt28vUqVONMseOHZPQ0FCZMmWKHDp0SObOnSsWi0XWrFljlFmyZIlYrVZZuHChZGZmyrhx4yQiIsKjVbE3bP1LREQivueB9lAFUO1jwYIFRpnCwkJ59tlnJTIyUkJDQ+XBBx+U77//3mM+J06ckHvuuUdCQkKkXbt28sILL0hJSYlHmfXr10vfvn0lKChIbrrpJo9luL399tvSqVMnCQoKksGDB8u2bdt8XheGKhERifieByYREX8dJTd1TqcT4eHhcDgcsNls/q4OERH5ia95wL5/iYiINGGoEhERacJQJSIi0oShSkREpAlDlYiISBOGKhERkSYMVSIiIk0YqkRERJowVImIiDRhqBIREWnCUCUiItKEoUpERKQJQ5WIiEgThioREZEmDFUiIiJNGKpERESaMFSJiIg0YagSERFpwlAlIiLShKFKRESkSYC/K0DUkC6fB/YsBM7uACxBQJcRwK2jgACrv2tGRC0RQ5VarMPLgU9HA2XF5S+YgH3/BGy/Bx5fC7Tr5s/aEVFLxNO/1CJl7wGWPQyUFgHiKn+UqWkFZ4F/DANKLvu1ikTUAjFUqUVKm1P+h1SdJmVAwRngwJJGrRKRX5SVAPkn1I9JqWZ/IL0YqtQiHV4OuEprnm4yA1lfNFp1iBpdSSGwfhrwhh14Mw6YcwPwbh/gwFJ/16xl4zVVanFEaj+1Ky71pUPUEpVeAT4cDpzeqj7rbrkHgU8fAy4cA4ZO9V/9WjIeqVKLs2H61eunNTFZgA79Gqc+RI1txzvAqS2egQoAKH++7g/A+aONXq3rAkOVWpSLOcDmGT4UFGDAuAavDpFf7JjnfbrJDOz6oHHqcr3h6d/rUPFF1XghOAIwmfxdG70OflLNr/Nq3P0aEHlTw9eHqLGJABe+qaVMGXD+cMMs33EK2Pb/gH0fAUUOICIOGPi0+hEbGNIwy2xKGKrXkawvgc0zge+2qufhNwLxzwHxvwXMLeSTcClHndqtLVi73ts49SFqbCYTEBAClHppM2CyAEGt9S87ey+w6CdAUcHVSzDns4CvngcOLAZ+9R8gKEz/cpsSnv69TqT9FVhyP3Bm29XXHCeB/30BWPqQ95ayzUnrG3xYFxMQZm+U6hD5Rc9Hvf9QljKgx8/1LlNcwCcPeQaqmqAeZ3cC617Wu8ymiKHaDBTmAcfXAyc3XVuHBXnfqPAEqjmCE+DIl6orv5ag16OAJbDm6SYLcEsy0Cqq8epE1Nhu/y/1WTdV8w1vDgCiegO3/EzvMo/9R7UqrqmRoJSp67jFl/Qut6lhqDZhVxzA578BXrcD/7gbWPhj9fe6l+t2ZLlzfvU7l8EMbP+fele3SQhpA9z9l+qnmSxAQDAwzJeGTETNWFRPIGUVYI1Qz82BV49c7f1UN526L/mc2VH7PEsuAeeP6F1uU9NCrqS1PCWXgUV3ATn7PH/5FRcAX/9FNYf/+RLfGhrl7q/lFhMXcC6z3lVuMm5/AQhqpW6tuZR79fUOA4D75gNRvfxXN6LGEnc38MIZIPNfwPe7AItVnaWJvaNhGiiaA3zrscnbmSRAnU0rOKv+bh1TywFBE8RQbaJ2faD6r62umz0IkPkJcOJpIO6u2ucV1Ep9ML013gkIvsaKaiCiRpHJPwmEtgNuHFr/X9EDnwb6jQFOb1FH/G26qF/vRNeTgGDgtl+qR0PrkgSk/t57mdYxQLtbq58mLmD7XCDtDdXeA1CNKRMmA4MnNp9wZag2UTvne59uCgB2f+BbqHYbCRz6d83TzQFAj1F1qp42x9cDK59RLQTdwuxA4iygz+P1m7clEOj8k/rNw1/EBRxfBxxZoUbZ6TAA6PWY+oFE1BTZ+wKd71ZtP6SGy1O3vwiYLVVfFwE+HwPsXej5uuMksOY5daT9wILmcQtgM8n+64/zFKo/Si0npapRgC96PgxEdFZBXIVJPX40ue51rK+Tm1RXapV7drmYDSz/1fV7c7rzDDC/P/DPnwI75qrt8OVTwJwY4Juv/F07opo9vBSI7q3+NpWHp/us06AJQPzvqn/fN2uqBmpFexepMs0BQ7WBiaiBsgvz6jZCREhb79NNFqBVtG/zCggGfrUOiIxTz80B5R90ExAYCoz+4uqO0JjWTCo/JV3Daen//a/rr3/eshLgn4nAuYPquasUcJWov4suqtuicvb5r35E3oS2A55KBx7+F9D9QXXk2m8MMHYHcO//1HykmfHu1RCujskC7HynYeqsG0//NhBxqVO42+aoW1oA1UDm9inAbY/Xfhqj76+BTX/23jz9tjqcHo2MAyYcAo6uUo+yYuCGQUDvFMDaADeB1+bcISB7t/cyRQ51+rPnw41Tp6Yg63Pgh5p6uikfF3br68CD/2jUalEzdvkHYPcC4NRm9b3T+S6g7xOqR7WGYAlUl5Pqckkpp5bGlFIG5B6of90aA0O1AYioW2H2LoI6vVou9yCw/An1ARo+2/s8Bk0AMt4DLp+revuMyQLEDFCNb9LfUl+0sbcDMYO8h7XZAnS7Tz38zd26zxuT2bdyLcmhf5f3CFXDF4yrVLXmZKiSL779X2Dpg2rUGnEBMKkhD9f9QXUb2L4HcHMSEB7r33pabXrKNAUM1QaQ9UV5oAKe10XL/057Hbj1QRWENWnVHvjNZuBfj6mWsTBdff9NP1VdkM3ve7VFnLiADv2Bh5c1jz5tfenRSFxA6w4NX5emImd/7b/YgfIvSPH+A6qsRP2Iai4tJkm/vG+Bxferz4JxiaX8O6TkErDtr1fLdr4LeHQ5EOyn4Or1WPmtfzVcCjKZVZnmgLtcA9gx1/v1AXOAb9cHIm8Cxm4Hxu4E7nkbSH4XePYAUPCdOpUDqA+h+4OYsw9YMFRdw23q2vcAom+D10+g1aa/15em6FIusOhu4N3bgHO1neIyAW27Vh+orlLVicf/dAP+HAS8GgQseUCNqUnXnx1zy89y+TDAxIn1wOtRQNYKfcsXUbcFHlkJnM3w3qak/1OqHUl135smi+rUpf9T+urWkHik2gBq62zBVQpkfgqc/0bd2zVgnLp/qyYxA9QDAPb+s+ZrC65S1XI2Yz4w9P9ce/0bg8kEJP0V+OdwQCochVc0bKZqSOV2NgM4uhIoLVJjoXZ7oPYbyZu60iuqk48fsmov6zZoYtXXykrUab6jq66+JmXAkVXquvSDHwK9R/s2fxHVyYjJwlt4mrOsz2s/61FRWZFqCPf4/wI3JdZv2cfXAat/d7XBHQC07ab2+a73VC0f2g749Qbg42Qg/4TqAQpQjfTCY4HRK1SZ5sAkUpc2qdcXp9OJ8PBwOBwO2Gy+nxd5qwtw4VvfyprMqqeTxz4Hbv5p7eX/mQQc/4/3jhzadAV+20y6AvvmK3Wfav7xq6+FtAUSZ179ZXr5PPDJz4GTG672Z+oqUf33Pvwv1VlEc+QqBdY8D+zwsYtIk1ndd5uyGrAEeU5Lf0u1pq7pNixzIDD5jLqsUGN9ytQPsm1/vdq4ruOPgDteArqP9K2O9VVWosIge095D0A/q3kw+Sv56hr0pVzA1lG1NuWPgKvmxKqzWnVl7wuMr6URoTfH/gN8OKL8yLTi91T52ZXHlgPd7q/+va4y9cPw5Eb1/MY7ga7J1d/b2th8zQOGqhfXGqr/mQpsnV2HX4lmIMAK/O4b70esADC/X3lPS14EhgL/p56dVhd8r6672Dr61tvSlXzA+R0QHAnYblC3EO1ZpK4HmwOALiOAW0ep9axMXOp0trtHpZuGXQ0NVxnwtwR183fl7Wkyq3LjdgHta+ilpam64gA+GgF8t632soC6Bj1oouoo3b0NCy8Au95XZy9+OOT982Yyqz6Rh7xU/XRxAZ+mAAeXul+4+j5xqf6Sh9TSW059nfwaWPZzFZLmwPJLG2VA3DDg4U/UKUBAfVlvngls/JNqxW62qB8oga2A4W8AA8c3bD2bi09GAYe/qLkjBm+ezby2fUoEmNtd/Sir9oe/SX2nPHe8aQRlXfiaBzz92wAGT1DXM4oLfHyDS516yXgP+Mkfay6WvRcwB9U83a20SH3ZVD6a8cWRFcDG/y5vHAX1RdVvjKpXSGTV8o5TQOr/UV/G7lbKbbupI0+j1bIJ2PdPwPaS6si7XXf1csH3wP6PVGcHYdFA718A4Z085//tV1frUpm41JHN1tnAPW+pQZG/26qOZuOGqaGtqgvxpuDLsaoDcl8ERwLPf+f5JZR/AlhwJ1BwxrdB2QEgZ0/N0w4sBQ4uqfq6e96pU1X/0EGt1a1YPR/VO+D0uUzVEUhZsXruvjcXAE5sAD66FxizVYV82hvAugqXN9yfs5JLwMqn1dFqY3TL19QN/q33ntS8uZR7baF6dkctHeYL4DytjkTj7r62ujV1PFL14lqPVAEVTovreOtKxwT1xVHZd9uAFU8DOXt9n9fj/1FHfBXlfQPsfBc4s12FTdefed6vtusD9WVfuZ9gk0U1jhmT5nlvW/5J4IPB6qjUl1FzTBZ1ynbiEfXFuOlVAHJ1UHFxAT96Xt1u5G61uvzXKiy9/do2WdTAx0XO8tPDUPUJ6wD88iv/dGzhjeMU8P86w2uPWW4mMxAzUN1QX9H7g9QZC19HKzIHqKB5YEH10/92hxpr12tAm8uPCktU0D/yadVuMksuqx9LweF1uwa2/Elg/4fe1ydlDdBpCPCGHSi+WHM5W0fguRPXfiR0KRfY8Y5qwV+Yp+7xHvC02lf82Uf2tVj3CvD1n73fplWd334DtLm57svL/FSdbajNAwvV9mxOeKTqZ9fSAre6L5QzO4CFP/H85e6LykfJGe+pa5cwXd25jqWqo9JfrVVHiCufVa9X/mKVMtWV4Nd/AX466+rra19U6+nrziplwMXvVZd7xmnGSsvbNkd1RuE+Yi9y1H76SspUoEJUWXdWXcpVQ+ZNPFL9Uba/HF8PnwIVUNtmQKXTmWd2qAGf68JVCtzi5Udezl4fjnhdgKu8TJED+Phede2tXXfVQG79dGDfP1TjKwC48cfAT/4EdP6x99mKqKNkb4FqDlCfmeKL3gMVUJchTqcBNw6pZX3KOU6ps0CWIHWa/cMk1WGC+3OdvVftO3sXqTMt7uu2hRdUo0FLkLruey1nhuqj9Aqw/2N1CcBxWp3t6fuk6jgmKEyVuftV4IbBar86tbn2H2Emi7qOfi2BCni/Zu9RrgWPZ8xQbSDu01h1UfnUZ8ll4Kvn1Y7g6yk+t7bd1PVIiLqlYkV115kEKMpXLXATXqi9R5O0Oera6cCn1egRhz6t269ft9pOSW2ZpepjbQ20ucXHX9nVhJSUqdDfsxBIeL5udXSVqRbK7iPmgrPq2qXzNBDSTjUqC++kroHX9YjI121mMqt7mSufyjz2H3jct1wbcwAQEVdz45DCC1eD0FfiUp/LtL+qywMfDr/6w8bt1Gb1o+aRT703dHKV1r58V6m6rn5mu2/12/P3qqGavVfdI16Yr0ZKCQ5XZ2ccJyoUct+qVM395We2q9PgP/kT8L+T1RkU94/dkLbqevcdL3reG1xWrI7e9i5Sp+rDbwT6/Ua1XL9yQS0/81/qGnurKNUQrfcvah9RqcgJ/OOnwNntV88sFZxR22jLLNUtYFh5N6buDl9EgL3/AFb/tvpLUyaz+qwkzal+mYV5qmemE+vUvDoNUf/37uUAalg5W0f1w6YmwZHqB+/ef6gAb3uL93Vtbnj614v6nP79fjfwXv+6Le+2XwEjFwL7PlSnR+tyutdgUj0tte6gGn5AgMAwoKSWX/edhqrTzLUdEbsD7rbH1XXShvLwMnVN9PwRdd9lfXQaAjz59dXnl86pX/jO00Boe3WrSXgn9UVxYLEKiu93qi+ZTkPVl8SBxeUdLpg9Q7GVXR0dxPRXAxaEhKttFHmTel91zmUC83wYhq7348B973reVpR/Ur23pA4N0dp0US2G23SpfvqX48oHL7iGbwJzQC1HPyYVXpPPer8G+9dY71/Eda+YuhXD3gfoORrYMA3IO1r722pjCVang88fqf7H0YDxwM/eVX9fcagfrBWDz/1jyNZJBWOxs/ofzB1vBx76Z80duXz+pPqRV9MPNHOguqPAffuKiLq0s/tvNQ8DaeuoTstWvmwEqMEvPk4Gii/BoxGbJUjtqyLq0lLOHqCooA7tSaA6nnjow9obadbGVapaDuceUPtMtweu9neuA1v/alCfUAWAD+LLb3r24cjEZAF6/1L9gvt2Nep0JFL9DOv2/sgu6he7r9foGtr9fwf6Pan+/tejwMFPrn1e0X1Vq9ft/6MaUrjPIlQ8AjZZ1BdRWR2P2LwJaq2C7LbH1bpUvB698CdqrFevpzyD1BFevyeBm4cDMAFzewDna+obuBq2jsDFHPVjKSJOjUs5aMLVBlz7FwP/TkH9Pms+6J2i1j84QjVycl/ndn/7bJ4BrHu54euhQ21jE3e9Tw1lmH+87pdtKi4jtB0wfo/6gew8oy7hHFmhviN8vVVm6MvAXf8NfDEG2FPD9fSKQtsBv0ot75ilXMFZ4O2u5YNb1Of/x4yaO6IwARE3An2eAAY+c/XoV0QFes4+dcmhpFBt++KLgC0GCAhRIX4uEzjyhTq7V7Fr2F6jgfs/0NOojqGqQX1DNe9b4O93qCMjX3o18Sdz4LV/ATSE0SvUdbFtfwVKL9dvXkGt6/bLWTuT+rJ6Yv3V03pnM9Qp08I832YREadOOy7/Vf2rExCsTleWXFanIBuLOUB9SUqZOpIwmdWRjyVQnRbVcSTZkpgsaoDu2DuAZQ9f+/5568+BQ/+qw3LNgDVcdTgz4BnVuv6Mj7d+1TjPQEB8qL/JrD6bT6xX14lXT/T9nv/qZ6jaEoz+vB7zKMdQ1aC+oQqoBhzb3lRHSbWdgiUlILT8GlsT/yFSVyYzEBwFFOUBrmu45k7XofqesWqOysd41rn/3/UqcOfL9ZuHr3lwXfT9O3fuXHTu3BnBwcGIj4/H9u0+tnbQIMwOJM4AXvwBCKvnNYPrRelltLhABdRpq8JsBirVwfUWqIBaZ837//pXgC21jAymS4sP1aVLl2Ly5MmYPn06du3ahT59+iApKQm5ubmNWo///B64eJ0NY0ZE1FT850XV4rihtfhQnTNnDsaOHYsnn3wSPXr0wLvvvovQ0FD8/e9/b7Q6FF8G0t9stMUREVE1lj8BfPqLhl1Giw7V4uJiZGRkIDHx6pALZrMZiYmJSEtLq1K+qKgITqfT46FD2hxcn6dxiIiamAOLgd0NeEzVokP1hx9+QFlZGaKjoz1ej46ORnZ2dpXyM2bMQHh4uPGIjY3VUo8jX2qZDRERafCfBhwcokWHal1NnToVDofDeJw+fVrLfK+ldyUiImoYl8+p+1sbQovuprBdu3awWCzIycnxeD0nJwd2u71KeavVCqtV/7AmUT29jxBCRESNq6Huy2/RR6pBQUEYMGAAUlNTjddcLhdSU1ORkJDQaPUYNLHRFkVERLUICFZ9EDeEFh2qADB58mS8//77WLRoEQ4dOoRnnnkGly5dwpNPPtlodegYr0awJyIi/xv0WzVgRkNo0ad/AeDRRx/FuXPnMG3aNGRnZ6Nv375Ys2ZNlcZLDclkAkZ/qQZaPr2l0RZLRESVRNwEJP6l4ebPbgq90NFNYWWHPgNW/873DrF94q2j6pbIDPR8DDi8HCir1C9waDugfS81BFaxnjuifGYNB9r3Ab7bAuAahsTzRUAroLQOI9QgEAgMBkq8NMoIsqlxUksrjEBC18ikTi2WFqPBPgO+iLxZ1eXCNzUUuMbvjCAbICagxOG9XGiUGsf1/BE1Nq05QPUzreM6ptkKuIrq/j6TBejzOHDfB9c2gD0HKW+ibn1QPfK+VSNZBIUBN/xIhWxRgRqpQVyqxXCrKOD7PcDu94GSK0DnO9WoC6VFwNGVamipNl3UUE1XHKrT7LJSNdzRuUyg6KIakzQ2AYjqpQZjPr5edeIeZlfzD20H3DCo6gDLIlBfsCbg1BZgz9+AC8fVl0XpFaDYoUa2SfgvVa8TG9RQc5fPqR3KbAJa3wDcOFQtNzBUhc6Fb4FTW4FL2WrkiDC7GjINJuBKHnB8g6pf+x7AHf8FxA1T2+nw52osV3s/oMdDaicF1OgdF7PVSB6Vh4669IMawi0wFLD3Vdvm5CY1PJQ1DIgdAnS/X+1sJhOQvUeNPZt/So2I0ao9EHe36tD8+93qEdFZDbodGOz9//mHLOD7DLW9gsMBmNXg1tkZasB3V5na5gHB6v+m812qDq1j1JB0F04CF44BgVbghnigXber43SWlahh0n44pOoeM0Btg+KLqjNys0Wte2Cw2o7ubXUlX41YAxOQd0T9H3eM9xwwuvSKGsggd3/5/4sLaBWtxnU1mdT2A4Cbk9R2DbCqz/Llc+r/OzBElblwXI2mEhwJtL9VfZlm7wMCW6nPpNmiRtDpMgIoLQRy9gOOk2rblxWr6ecOqsEQrDa17QKCgZhBasxRk0mVPb0VCOugBqEvLVTzLCpQgwXYblDvzdmnPstRvdT+5h4rFya1r5UUAd+sUkMtFuYD7boC3R9S8zy6Uq1H6xiga/LV0X0ANXrL1jeAvG9UnQY9o+pYk7ISFTBlRWrZQa2BSznqNccp9XdZ+djJrhI10EBpsdqerpLyz/7PgcjO5SPVfK8+s0GhgC0WuOmnat9x71fu//OiAvVZrlw3V6kaJq2sWI1bfHqzGv7RHKiGSzQHqW0Q2fnqoOcen/HDwLnDQEQn9f78Y2oZbbp4jilbE8dpIP+E2hZnd6r//5hBauxXoPzzE64+X1fy1aASbbuq/7uykvLPtajvvrJiNQKS+//n0jkg75h6HhiivudC29ZeJx14pOpFQxypEhFR88MO9YmIiBoZQ5WIiEgThioREZEmDFUiIiJNGKpERESaMFSJiIg0YagSERFpwlAlIiLShKFKRESkCUOViIhIE/b964W7B0ens5F7ZicioibFnQO19ezLUPWioEAN7REbG+vnmhARUVNQUFCA8PDwGqezQ30vXC4Xzp49i9atW8PUUCPaVsPpdCI2NhanT59mR/7XgNuv/rgN64fbr36a4vYTERQUFCAmJgZmc81XTnmk6oXZbEbHjh39tnybzdZkPlDNEbdf/XEb1g+3X/00te3n7QjVjQ2ViIiINGGoEhERacJQbYKsViumT58Oq9Xq76o0S9x+9cdtWD/cfvXTnLcfGyoRERFpwiNVIiIiTRiqREREmjBUiYiINGGoEhERacJQJSIi0oSh2khOnDiBMWPGIC4uDiEhIbj55psxffp0FBcXe5Tbt28fhg4diuDgYMTGxmLWrFlV5rVs2TJ0794dwcHB6N27N1atWuUxXUQwbdo0dOjQASEhIUhMTMTRo0cbdP0aw2uvvYbbb78doaGhiIiIqLbMqVOnkJycjNDQUERFRWHKlCkoLS31KLNhwwb0798fVqsVXbp0wcKFC6vMZ+7cuejcuTOCg4MRHx+P7du3N8AaNU3X87pXtGnTJtx3332IiYmByWTC8uXLPab7sp/l5eUhJSUFNpsNERERGDNmDC5evOhRxpd9vrmZMWMGBg0ahNatWyMqKgojR45EVlaWR5krV65gwoQJaNu2LcLCwjBq1Cjk5OR4lNG1PzcqoUaxevVq+fWvfy1fffWVfPvtt/L5559LVFSUvPDCC0YZh8Mh0dHRkpKSIgcOHJDFixdLSEiIzJ8/3yizZcsWsVgsMmvWLMnMzJSXX35ZAgMDZf/+/UaZmTNnSnh4uCxfvlz27t0r999/v8TFxUlhYWGjrrNu06ZNkzlz5sjkyZMlPDy8yvTS0lLp1auXJCYmyu7du2XVqlXSrl07mTp1qlHm2LFjEhoaKpMnT5bMzEx5++23xWKxyJo1a4wyS5YskaCgIPn73/8uBw8elLFjx0pERITk5OQ0xmr61fW87pWtWrVK/vCHP8i///1vASCfffaZx3Rf9rMRI0ZInz59ZNu2bfL1119Lly5dZPTo0cZ0X/b55igpKUkWLFggBw4ckD179si9994rnTp1kosXLxplnn76aYmNjZXU1FTZuXOn/OhHP5Lbb7/dmK5rf25sDFU/mjVrlsTFxRnP582bJ5GRkVJUVGS89tJLL0m3bt2M54888ogkJyd7zCc+Pl7Gjx8vIiIul0vsdrvMnj3bmJ6fny9Wq1UWL17cUKvSqBYsWFBtqK5atUrMZrNkZ2cbr73zzjtis9mMbfriiy9Kz549Pd736KOPSlJSkvF88ODBMmHCBON5WVmZxMTEyIwZMzSvSdNzPa+7N5VD1Zf9LDMzUwDIjh07jDKrV68Wk8kkZ86cERHf9vmWIDc3VwDIxo0bRURtq8DAQFm2bJlR5tChQwJA0tLSRETf/tzYePrXjxwOB9q0aWM8T0tLw5133omgoCDjtaSkJGRlZeHChQtGmcTERI/5JCUlIS0tDQBw/PhxZGdne5QJDw9HfHy8UaalSktLQ+/evREdHW28lpSUBKfTiYMHDxplvG2/4uJiZGRkeJQxm81ITExs8dvvel73uvJlP0tLS0NERAQGDhxolElMTITZbEZ6erpRprZ9viVwOBwAYHzfZWRkoKSkxGP7de/eHZ06dfLYfvXdn/2Boeon33zzDd5++22MHz/eeC07O9vjAwTAeJ6dne21TMXpFd9XXZmWqj7bz+l0orCwED/88APKysquy+13Pa97Xfmyn2VnZyMqKspjekBAANq0aVPr57HiMpo7l8uFSZMm4Y477kCvXr0AqHULCgqq0jai8var7/7sDwzVevr9738Pk8nk9XH48GGP95w5cwYjRozAww8/jLFjx/qp5k3DtWw/Imo+JkyYgAMHDmDJkiX+rkqj4Hiq9fTCCy/g17/+tdcyN910k/H32bNncdddd+H222/He++951HObrdXaf3mfm63272WqTjd/VqHDh08yvTt29f3FWskdd1+3tjt9iotVX3dfjabDSEhIbBYLLBYLF63cUvVrl2763bd68qX/cxutyM3N9fjfaWlpcjLy6v181hxGc3ZxIkTsWLFCmzatMljbGq73Y7i4mLk5+d7HK1W/i6r7/7sDzxSraf27duje/fuXh/u6yVnzpzBT37yEwwYMAALFiyoMnp8QkICNm3ahJKSEuO1tWvXolu3boiMjDTKpKamerxv7dq1SEhIAADExcXBbrd7lHE6nUhPTzfKNCV12X61SUhIwP79+z2+yNauXQubzYYePXoYZbxtv6CgIAwYMMCjjMvlQmpqapPcfjpdz+teV77sZwkJCcjPz0dGRoZRZt26dXC5XIiPjzfK1LbPN0cigokTJ+Kzzz7DunXrEBcX5zF9wIABCAwM9Nh+WVlZOHXqlMf2q+/+7Bd+ayJ1nfnuu++kS5cuMmzYMPnuu+/k+++/Nx5u+fn5Eh0dLY8//rgcOHBAlixZIqGhoVVuqQkICJDXX39dDh06JNOnT6/2lpqIiAj5/PPPZd++ffLAAw+0iFtqTp48Kbt375Y//elPEhYWJrt375bdu3dLQUGBiFxtgj98+HDZs2ePrFmzRtq3b19tE/wpU6bIoUOHZO7cudXeUmO1WmXhwoWSmZkp48aNk4iICI9WiC3V9bzulRUUFBifMQAyZ84c2b17t5w8eVJEfNvPRowYIf369ZP09HTZvHmzdO3a1eOWGl/2+ebomWeekfDwcNmwYYPHd93ly5eNMk8//bR06tRJ1q1bJzt37pSEhARJSEgwpuvanxsbQ7WRLFiwQABU+6ho7969MmTIELFarXLDDTfIzJkzq8zrk08+kVtuuUWCgoKkZ8+esnLlSo/pLpdLXnnlFYmOjhar1SrDhg2TrKysBl2/xvDEE09Uu/3Wr19vlDlx4oTcc889EhISIu3atZMXXnhBSkpKPOazfv166du3rwQFBclNN90kCxYsqLKst99+Wzp16iRBQUEyePBg2bZtWwOvXdNxPa97RevXr6/28/bEE0+IiG/72fnz52X06NESFhYmNptNnnzySeNHoJsv+3xzU9N3XcV9rbCwUJ599lmJjIyU0NBQefDBBz0OMkT07c+NieOpEhERacJrqkRERJowVImIiDRhqBIREWnCUCUiItKEoUpERKQJQ5WIiEgThioREZEmDFUiIiJNGKpERESaMFSJiIg0YagSERFp8v8BcgkDdqs6IuwAAAAASUVORK5CYII=",
      "text/plain": [
       "<Figure size 500x500 with 1 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "(1261, 4)\n",
      "(3, 4)\n",
      "(3, 4)\n"
     ]
    },
    {
     "data": {
      "image/png": "",
      "text/plain": [
       "<Figure size 640x480 with 1 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "data": {
      "image/png": "",
      "text/plain": [
       "<Figure size 500x500 with 1 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "(739, 5)\n",
      "(522, 5)\n"
     ]
    },
    {
     "data": {
      "text/plain": [
       "[     CustomerID                                        Description\n",
       " 0             2  [DOUGHNUT LIP GLOSS , ICE CREAM PEN LIP GLOSS ...\n",
       " 1             5  [ANTIQUE GLASS PEDESTAL BOWL, PANTRY MAGNETIC ...\n",
       " 2            15  [RED RETROSPOT PICNIC BAG, RED RETROSPOT SMALL...\n",
       " 3            17                 [POSTAGE, BUBBLEGUM RING ASSORTED]\n",
       " 4            22  [HANGING QUILTED PATCHWORK APPLES, AIRLINE BAG...\n",
       " ..          ...                                                ...\n",
       " 734        3708  [PINK CREAM FELT CRAFT TRINKET BOX , FELTCRAFT...\n",
       " 735        3754  [GROW YOUR OWN BASIL IN ENAMEL MUG, FRIDGE MAG...\n",
       " 736        3995  [SPOTTY PINK DUCK DOORSTOP, DOORSTOP RETROSPOT...\n",
       " 737        4063                     [POLYESTER FILLER PAD 40x40cm]\n",
       " 738        4303  [CARD BILLBOARD FONT, GIN & TONIC DIET GREETIN...\n",
       " \n",
       " [739 rows x 2 columns],\n",
       "      CustomerID                                        Description\n",
       " 0          1753  [GINGHAM RECIPE BOOK BOX, RIBBON REEL LACE DES...\n",
       " 1          1855  [STRAWBERRY CERAMIC TRINKET BOX, SWEETHEART CE...\n",
       " 2          1861  [RED RETROSPOT CHARLOTTE BAG, JUMBO BAG VINTAG...\n",
       " 3          1884  [COLOURING PENCILS BROWN TUBE, 12 PENCILS TALL...\n",
       " 4          1901  [SET OF 12 MINI LOAF BAKING CASES, PACK OF 72 ...\n",
       " ..          ...                                                ...\n",
       " 517        4308  [PACK OF 60 PINK PAISLEY CAKE CASES, 60 TEATIM...\n",
       " 518        4309  [PARTY BUNTING, DRAWER KNOB CRACKLE GLAZE IVOR...\n",
       " 519        4315  [PACK OF 60 DINOSAUR CAKE CASES, PACK OF 72 SK...\n",
       " 520        4317  [ANTIQUE SILVER T-LIGHT GLASS, WHITE HANGING H...\n",
       " 521        4319  [HAND WARMER BABUSHKA DESIGN, HAND WARMER BIRD...\n",
       " \n",
       " [522 rows x 2 columns]]"
      ]
     },
     "execution_count": 188,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "pca = PCA(n_components = 3)\n",
    "pca.fit(X = dvt_sep2011)\n",
    "new_dvt = pca.transform(dvt_sep2011)\n",
    "\n",
    "new_dvt = pd.DataFrame(data = new_dvt,columns = ['X0','X1','X2'])\n",
    "model = AgglomerativeClustering(distance_threshold=0, n_clusters=None, linkage='ward').fit(new_dvt)\n",
    "\n",
    "plot_dendrogram(model, truncate_mode=\"level\", p=4)\n",
    "\n",
    "dict_sep2011 =  Agglocls(new_dvt,3)\n",
    "\n",
    "final_dvt_sep2011 = dict_sep2011[0]\n",
    "pca_sep2011 = PCA(n_components = 3)\n",
    "pca_sep2011.fit(X = final_dvt_sep2011)\n",
    "final_dvt_sep2011 = pca_sep2011.transform(final_dvt_sep2011)\n",
    "final_dvt_sep2011 = pd.DataFrame(data = final_dvt_sep2011,columns = ['X0','X1','X2'])\n",
    "AggloDendo(final_dvt_sep2011)\n",
    "\n",
    "dict_sep2011_final =  AggloPca(final_dvt_sep2011,2,dvt_sep2011,'X0','X2')\n",
    "\n",
    "sep2011_agg = descrip_dict(og_sep2011,final_dvt_sep2011)\n",
    "sep2011_agg = processlis(sep2011_agg)\n",
    "sep2011_agg\n",
    "\n",
    "\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {
    "id": "ESlM9vqcxwsu"
   },
   "outputs": [],
   "source": [
    "Cluster_dict['sep2011'] = (len(sep2011),len(sep2011_agg))\n",
    "dicti_2011sep = {}\n",
    "klis = []\n",
    "for i in range(Cluster_dict['sep2011'][0]):\n",
    "  temp = apriori_rules(sep2011[i],0.075)\n",
    "  klis.append(temp)\n",
    "alis = []\n",
    "for i in range(Cluster_dict['sep2011'][1]):\n",
    "  temp = apriori_rules(sep2011_agg[i],0.075)\n",
    "  alis.append(temp)\n",
    "#apriori_rules(1_agg[0],0.075)\n",
    "dicti_2011sep['K-means'] = klis\n",
    "dicti_2011sep['Agglo'] = alis\n",
    "\n",
    "Rules_dict['sep2011'] = dicti_2011sep"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {
    "id": "7FeZ74j5V1Bl"
   },
   "source": [
    "## For Oct 2011"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {
    "colab": {
     "base_uri": "https://localhost:8080/"
    },
    "id": "DBG6KpK4V0YI",
    "outputId": "5856501f-ea1e-4249-fef5-f696399b35d3"
   },
   "outputs": [
    {
     "data": {
      "text/html": [
       "\n",
       "  <div id=\"df-25f2d3e7-ebd0-462f-ba5d-f0b10d8c5d77\">\n",
       "    <div class=\"colab-df-container\">\n",
       "      <div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>InvoiceNo</th>\n",
       "      <th>StockCode</th>\n",
       "      <th>Description</th>\n",
       "      <th>Quantity</th>\n",
       "      <th>UnitPrice</th>\n",
       "      <th>CustomerID</th>\n",
       "      <th>Country</th>\n",
       "      <th>time_intervals</th>\n",
       "      <th>Total Price</th>\n",
       "      <th>Money_bins</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>320705</th>\n",
       "      <td>565080</td>\n",
       "      <td>20677</td>\n",
       "      <td>PINK POLKADOT BOWL</td>\n",
       "      <td>8</td>\n",
       "      <td>1.25</td>\n",
       "      <td>871</td>\n",
       "      <td>United Kingdom</td>\n",
       "      <td>04:00-07:59</td>\n",
       "      <td>10.00</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>320706</th>\n",
       "      <td>565080</td>\n",
       "      <td>22128</td>\n",
       "      <td>PARTY CONES CANDY ASSORTED</td>\n",
       "      <td>24</td>\n",
       "      <td>1.25</td>\n",
       "      <td>871</td>\n",
       "      <td>United Kingdom</td>\n",
       "      <td>04:00-07:59</td>\n",
       "      <td>30.00</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>320707</th>\n",
       "      <td>565081</td>\n",
       "      <td>21067</td>\n",
       "      <td>NaN</td>\n",
       "      <td>1</td>\n",
       "      <td>0.00</td>\n",
       "      <td>4339</td>\n",
       "      <td>United Kingdom</td>\n",
       "      <td>08:00-11:59</td>\n",
       "      <td>0.00</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>320708</th>\n",
       "      <td>565082</td>\n",
       "      <td>22423</td>\n",
       "      <td>REGENCY CAKESTAND 3 TIER</td>\n",
       "      <td>2</td>\n",
       "      <td>12.75</td>\n",
       "      <td>722</td>\n",
       "      <td>United Kingdom</td>\n",
       "      <td>08:00-11:59</td>\n",
       "      <td>25.50</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>320709</th>\n",
       "      <td>565082</td>\n",
       "      <td>15060B</td>\n",
       "      <td>FAIRY CAKE DESIGN UMBRELLA</td>\n",
       "      <td>8</td>\n",
       "      <td>3.75</td>\n",
       "      <td>722</td>\n",
       "      <td>United Kingdom</td>\n",
       "      <td>08:00-11:59</td>\n",
       "      <td>30.00</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>...</th>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>370926</th>\n",
       "      <td>569202</td>\n",
       "      <td>22486</td>\n",
       "      <td>PLASMATRONIC LAMP</td>\n",
       "      <td>1</td>\n",
       "      <td>8.29</td>\n",
       "      <td>4339</td>\n",
       "      <td>United Kingdom</td>\n",
       "      <td>16:00-19:59</td>\n",
       "      <td>8.29</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>370927</th>\n",
       "      <td>569202</td>\n",
       "      <td>22495</td>\n",
       "      <td>SET OF 2 ROUND TINS CAMEMBERT</td>\n",
       "      <td>1</td>\n",
       "      <td>5.79</td>\n",
       "      <td>4339</td>\n",
       "      <td>United Kingdom</td>\n",
       "      <td>16:00-19:59</td>\n",
       "      <td>5.79</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>370928</th>\n",
       "      <td>569202</td>\n",
       "      <td>22539</td>\n",
       "      <td>MINI JIGSAW DOLLY GIRL</td>\n",
       "      <td>2</td>\n",
       "      <td>0.83</td>\n",
       "      <td>4339</td>\n",
       "      <td>United Kingdom</td>\n",
       "      <td>16:00-19:59</td>\n",
       "      <td>1.66</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>370929</th>\n",
       "      <td>569202</td>\n",
       "      <td>22540</td>\n",
       "      <td>MINI JIGSAW CIRCUS PARADE</td>\n",
       "      <td>2</td>\n",
       "      <td>0.83</td>\n",
       "      <td>4339</td>\n",
       "      <td>United Kingdom</td>\n",
       "      <td>16:00-19:59</td>\n",
       "      <td>1.66</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>370930</th>\n",
       "      <td>569202</td>\n",
       "      <td>22805</td>\n",
       "      <td>BLUE DRAWER KNOB ACRYLIC EDWARDIAN</td>\n",
       "      <td>10</td>\n",
       "      <td>1.25</td>\n",
       "      <td>4339</td>\n",
       "      <td>United Kingdom</td>\n",
       "      <td>16:00-19:59</td>\n",
       "      <td>12.50</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "<p>49323 rows × 10 columns</p>\n",
       "</div>\n",
       "      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-25f2d3e7-ebd0-462f-ba5d-f0b10d8c5d77')\"\n",
       "              title=\"Convert this dataframe to an interactive table.\"\n",
       "              style=\"display:none;\">\n",
       "        \n",
       "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
       "       width=\"24px\">\n",
       "    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n",
       "    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n",
       "  </svg>\n",
       "      </button>\n",
       "      \n",
       "  <style>\n",
       "    .colab-df-container {\n",
       "      display:flex;\n",
       "      flex-wrap:wrap;\n",
       "      gap: 12px;\n",
       "    }\n",
       "\n",
       "    .colab-df-convert {\n",
       "      background-color: #E8F0FE;\n",
       "      border: none;\n",
       "      border-radius: 50%;\n",
       "      cursor: pointer;\n",
       "      display: none;\n",
       "      fill: #1967D2;\n",
       "      height: 32px;\n",
       "      padding: 0 0 0 0;\n",
       "      width: 32px;\n",
       "    }\n",
       "\n",
       "    .colab-df-convert:hover {\n",
       "      background-color: #E2EBFA;\n",
       "      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
       "      fill: #174EA6;\n",
       "    }\n",
       "\n",
       "    [theme=dark] .colab-df-convert {\n",
       "      background-color: #3B4455;\n",
       "      fill: #D2E3FC;\n",
       "    }\n",
       "\n",
       "    [theme=dark] .colab-df-convert:hover {\n",
       "      background-color: #434B5C;\n",
       "      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
       "      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
       "      fill: #FFFFFF;\n",
       "    }\n",
       "  </style>\n",
       "\n",
       "      <script>\n",
       "        const buttonEl =\n",
       "          document.querySelector('#df-25f2d3e7-ebd0-462f-ba5d-f0b10d8c5d77 button.colab-df-convert');\n",
       "        buttonEl.style.display =\n",
       "          google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
       "\n",
       "        async function convertToInteractive(key) {\n",
       "          const element = document.querySelector('#df-25f2d3e7-ebd0-462f-ba5d-f0b10d8c5d77');\n",
       "          const dataTable =\n",
       "            await google.colab.kernel.invokeFunction('convertToInteractive',\n",
       "                                                     [key], {});\n",
       "          if (!dataTable) return;\n",
       "\n",
       "          const docLinkHtml = 'Like what you see? Visit the ' +\n",
       "            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n",
       "            + ' to learn more about interactive tables.';\n",
       "          element.innerHTML = '';\n",
       "          dataTable['output_type'] = 'display_data';\n",
       "          await google.colab.output.renderOutput(dataTable, element);\n",
       "          const docLink = document.createElement('div');\n",
       "          docLink.innerHTML = docLinkHtml;\n",
       "          element.appendChild(docLink);\n",
       "        }\n",
       "      </script>\n",
       "    </div>\n",
       "  </div>\n",
       "  "
      ],
      "text/plain": [
       "       InvoiceNo StockCode                         Description  Quantity  \\\n",
       "320705    565080     20677                  PINK POLKADOT BOWL         8   \n",
       "320706    565080     22128          PARTY CONES CANDY ASSORTED        24   \n",
       "320707    565081     21067                                 NaN         1   \n",
       "320708    565082     22423            REGENCY CAKESTAND 3 TIER         2   \n",
       "320709    565082    15060B          FAIRY CAKE DESIGN UMBRELLA         8   \n",
       "...          ...       ...                                 ...       ...   \n",
       "370926    569202     22486                   PLASMATRONIC LAMP         1   \n",
       "370927    569202     22495      SET OF 2 ROUND TINS CAMEMBERT          1   \n",
       "370928    569202     22539              MINI JIGSAW DOLLY GIRL         2   \n",
       "370929    569202     22540          MINI JIGSAW CIRCUS PARADE          2   \n",
       "370930    569202     22805  BLUE DRAWER KNOB ACRYLIC EDWARDIAN        10   \n",
       "\n",
       "        UnitPrice  CustomerID         Country time_intervals  Total Price  \\\n",
       "320705       1.25         871  United Kingdom    04:00-07:59        10.00   \n",
       "320706       1.25         871  United Kingdom    04:00-07:59        30.00   \n",
       "320707       0.00        4339  United Kingdom    08:00-11:59         0.00   \n",
       "320708      12.75         722  United Kingdom    08:00-11:59        25.50   \n",
       "320709       3.75         722  United Kingdom    08:00-11:59        30.00   \n",
       "...           ...         ...             ...            ...          ...   \n",
       "370926       8.29        4339  United Kingdom    16:00-19:59         8.29   \n",
       "370927       5.79        4339  United Kingdom    16:00-19:59         5.79   \n",
       "370928       0.83        4339  United Kingdom    16:00-19:59         1.66   \n",
       "370929       0.83        4339  United Kingdom    16:00-19:59         1.66   \n",
       "370930       1.25        4339  United Kingdom    16:00-19:59        12.50   \n",
       "\n",
       "        Money_bins  \n",
       "320705           0  \n",
       "320706           0  \n",
       "320707           0  \n",
       "320708           0  \n",
       "320709           0  \n",
       "...            ...  \n",
       "370926           0  \n",
       "370927           0  \n",
       "370928           0  \n",
       "370929           0  \n",
       "370930           0  \n",
       "\n",
       "[49323 rows x 10 columns]"
      ]
     },
     "execution_count": 190,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "og_oct2011 = df_list_month_intervals[9]\n",
    "og_oct2011"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {
    "colab": {
     "base_uri": "https://localhost:8080/"
    },
    "id": "PuKTB2RPWwkA",
    "outputId": "911ec5f0-f490-4d38-dba1-b82ca89c92a7"
   },
   "outputs": [
    {
     "data": {
      "text/html": [
       "\n",
       "  <div id=\"df-5de5598c-96d3-4bd0-aa22-90a7b3ed42d4\">\n",
       "    <div class=\"colab-df-container\">\n",
       "      <div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>No. of visits</th>\n",
       "      <th>Mean_purch</th>\n",
       "      <th>Sum_purch</th>\n",
       "      <th>Item_count</th>\n",
       "      <th>Total_quantity</th>\n",
       "      <th>Avg_quant</th>\n",
       "      <th>CustomerID</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>1</td>\n",
       "      <td>103.333333</td>\n",
       "      <td>310.00</td>\n",
       "      <td>3</td>\n",
       "      <td>217</td>\n",
       "      <td>72.333333</td>\n",
       "      <td>2</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>2</td>\n",
       "      <td>19.765625</td>\n",
       "      <td>632.50</td>\n",
       "      <td>27</td>\n",
       "      <td>155</td>\n",
       "      <td>4.843750</td>\n",
       "      <td>5</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>1</td>\n",
       "      <td>20.749750</td>\n",
       "      <td>829.99</td>\n",
       "      <td>40</td>\n",
       "      <td>267</td>\n",
       "      <td>6.675000</td>\n",
       "      <td>15</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>1</td>\n",
       "      <td>39.900000</td>\n",
       "      <td>79.80</td>\n",
       "      <td>2</td>\n",
       "      <td>181</td>\n",
       "      <td>90.500000</td>\n",
       "      <td>17</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>1</td>\n",
       "      <td>29.470769</td>\n",
       "      <td>383.12</td>\n",
       "      <td>13</td>\n",
       "      <td>202</td>\n",
       "      <td>15.538462</td>\n",
       "      <td>22</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>...</th>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1262</th>\n",
       "      <td>1</td>\n",
       "      <td>18.409412</td>\n",
       "      <td>312.96</td>\n",
       "      <td>17</td>\n",
       "      <td>87</td>\n",
       "      <td>5.117647</td>\n",
       "      <td>4324</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1263</th>\n",
       "      <td>1</td>\n",
       "      <td>102.000000</td>\n",
       "      <td>102.00</td>\n",
       "      <td>1</td>\n",
       "      <td>40</td>\n",
       "      <td>40.000000</td>\n",
       "      <td>4329</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1264</th>\n",
       "      <td>1</td>\n",
       "      <td>19.322222</td>\n",
       "      <td>173.90</td>\n",
       "      <td>9</td>\n",
       "      <td>66</td>\n",
       "      <td>7.333333</td>\n",
       "      <td>4333</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1265</th>\n",
       "      <td>1</td>\n",
       "      <td>2.870213</td>\n",
       "      <td>134.90</td>\n",
       "      <td>47</td>\n",
       "      <td>95</td>\n",
       "      <td>2.021277</td>\n",
       "      <td>4337</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1266</th>\n",
       "      <td>140</td>\n",
       "      <td>11.379726</td>\n",
       "      <td>105751.79</td>\n",
       "      <td>1888</td>\n",
       "      <td>30517</td>\n",
       "      <td>3.283870</td>\n",
       "      <td>4339</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "<p>1267 rows × 7 columns</p>\n",
       "</div>\n",
       "      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-5de5598c-96d3-4bd0-aa22-90a7b3ed42d4')\"\n",
       "              title=\"Convert this dataframe to an interactive table.\"\n",
       "              style=\"display:none;\">\n",
       "        \n",
       "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
       "       width=\"24px\">\n",
       "    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n",
       "    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n",
       "  </svg>\n",
       "      </button>\n",
       "      \n",
       "  <style>\n",
       "    .colab-df-container {\n",
       "      display:flex;\n",
       "      flex-wrap:wrap;\n",
       "      gap: 12px;\n",
       "    }\n",
       "\n",
       "    .colab-df-convert {\n",
       "      background-color: #E8F0FE;\n",
       "      border: none;\n",
       "      border-radius: 50%;\n",
       "      cursor: pointer;\n",
       "      display: none;\n",
       "      fill: #1967D2;\n",
       "      height: 32px;\n",
       "      padding: 0 0 0 0;\n",
       "      width: 32px;\n",
       "    }\n",
       "\n",
       "    .colab-df-convert:hover {\n",
       "      background-color: #E2EBFA;\n",
       "      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
       "      fill: #174EA6;\n",
       "    }\n",
       "\n",
       "    [theme=dark] .colab-df-convert {\n",
       "      background-color: #3B4455;\n",
       "      fill: #D2E3FC;\n",
       "    }\n",
       "\n",
       "    [theme=dark] .colab-df-convert:hover {\n",
       "      background-color: #434B5C;\n",
       "      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
       "      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
       "      fill: #FFFFFF;\n",
       "    }\n",
       "  </style>\n",
       "\n",
       "      <script>\n",
       "        const buttonEl =\n",
       "          document.querySelector('#df-5de5598c-96d3-4bd0-aa22-90a7b3ed42d4 button.colab-df-convert');\n",
       "        buttonEl.style.display =\n",
       "          google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
       "\n",
       "        async function convertToInteractive(key) {\n",
       "          const element = document.querySelector('#df-5de5598c-96d3-4bd0-aa22-90a7b3ed42d4');\n",
       "          const dataTable =\n",
       "            await google.colab.kernel.invokeFunction('convertToInteractive',\n",
       "                                                     [key], {});\n",
       "          if (!dataTable) return;\n",
       "\n",
       "          const docLinkHtml = 'Like what you see? Visit the ' +\n",
       "            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n",
       "            + ' to learn more about interactive tables.';\n",
       "          element.innerHTML = '';\n",
       "          dataTable['output_type'] = 'display_data';\n",
       "          await google.colab.output.renderOutput(dataTable, element);\n",
       "          const docLink = document.createElement('div');\n",
       "          docLink.innerHTML = docLinkHtml;\n",
       "          element.appendChild(docLink);\n",
       "        }\n",
       "      </script>\n",
       "    </div>\n",
       "  </div>\n",
       "  "
      ],
      "text/plain": [
       "      No. of visits  Mean_purch  Sum_purch  Item_count  Total_quantity  \\\n",
       "0                 1  103.333333     310.00           3             217   \n",
       "1                 2   19.765625     632.50          27             155   \n",
       "2                 1   20.749750     829.99          40             267   \n",
       "3                 1   39.900000      79.80           2             181   \n",
       "4                 1   29.470769     383.12          13             202   \n",
       "...             ...         ...        ...         ...             ...   \n",
       "1262              1   18.409412     312.96          17              87   \n",
       "1263              1  102.000000     102.00           1              40   \n",
       "1264              1   19.322222     173.90           9              66   \n",
       "1265              1    2.870213     134.90          47              95   \n",
       "1266            140   11.379726  105751.79        1888           30517   \n",
       "\n",
       "      Avg_quant  CustomerID  \n",
       "0     72.333333           2  \n",
       "1      4.843750           5  \n",
       "2      6.675000          15  \n",
       "3     90.500000          17  \n",
       "4     15.538462          22  \n",
       "...         ...         ...  \n",
       "1262   5.117647        4324  \n",
       "1263  40.000000        4329  \n",
       "1264   7.333333        4333  \n",
       "1265   2.021277        4337  \n",
       "1266   3.283870        4339  \n",
       "\n",
       "[1267 rows x 7 columns]"
      ]
     },
     "execution_count": 191,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "dvt_oct2011= person_df(og_oct2011) #Our function gives such a dataframe\n",
    "#By which we can form clusters using KMeans\n",
    "dvt_oct2011"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {
    "colab": {
     "base_uri": "https://localhost:8080/"
    },
    "id": "ypC-QbhOW1Xc",
    "outputId": "7e47c7ec-ae3b-4d6e-a86f-c8220394a023"
   },
   "outputs": [
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "/usr/local/lib/python3.9/dist-packages/sklearn/cluster/_kmeans.py:870: FutureWarning: The default value of `n_init` will change from 10 to 'auto' in 1.4. Set the value of `n_init` explicitly to suppress the warning\n",
      "  warnings.warn(\n"
     ]
    },
    {
     "data": {
      "text/html": [
       "\n",
       "  <div id=\"df-ed784449-e322-44b7-8cb3-661a6af5318d\">\n",
       "    <div class=\"colab-df-container\">\n",
       "      <div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>No. of visits</th>\n",
       "      <th>Mean_purch</th>\n",
       "      <th>Sum_purch</th>\n",
       "      <th>Item_count</th>\n",
       "      <th>Total_quantity</th>\n",
       "      <th>Avg_quant</th>\n",
       "      <th>CustomerID</th>\n",
       "      <th>cluster_labels</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>1</td>\n",
       "      <td>103.333333</td>\n",
       "      <td>310.00</td>\n",
       "      <td>3</td>\n",
       "      <td>217</td>\n",
       "      <td>72.333333</td>\n",
       "      <td>2</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>2</td>\n",
       "      <td>19.765625</td>\n",
       "      <td>632.50</td>\n",
       "      <td>27</td>\n",
       "      <td>155</td>\n",
       "      <td>4.843750</td>\n",
       "      <td>5</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>1</td>\n",
       "      <td>20.749750</td>\n",
       "      <td>829.99</td>\n",
       "      <td>40</td>\n",
       "      <td>267</td>\n",
       "      <td>6.675000</td>\n",
       "      <td>15</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>1</td>\n",
       "      <td>39.900000</td>\n",
       "      <td>79.80</td>\n",
       "      <td>2</td>\n",
       "      <td>181</td>\n",
       "      <td>90.500000</td>\n",
       "      <td>17</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>1</td>\n",
       "      <td>29.470769</td>\n",
       "      <td>383.12</td>\n",
       "      <td>13</td>\n",
       "      <td>202</td>\n",
       "      <td>15.538462</td>\n",
       "      <td>22</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>...</th>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1262</th>\n",
       "      <td>1</td>\n",
       "      <td>18.409412</td>\n",
       "      <td>312.96</td>\n",
       "      <td>17</td>\n",
       "      <td>87</td>\n",
       "      <td>5.117647</td>\n",
       "      <td>4324</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1263</th>\n",
       "      <td>1</td>\n",
       "      <td>102.000000</td>\n",
       "      <td>102.00</td>\n",
       "      <td>1</td>\n",
       "      <td>40</td>\n",
       "      <td>40.000000</td>\n",
       "      <td>4329</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1264</th>\n",
       "      <td>1</td>\n",
       "      <td>19.322222</td>\n",
       "      <td>173.90</td>\n",
       "      <td>9</td>\n",
       "      <td>66</td>\n",
       "      <td>7.333333</td>\n",
       "      <td>4333</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1265</th>\n",
       "      <td>1</td>\n",
       "      <td>2.870213</td>\n",
       "      <td>134.90</td>\n",
       "      <td>47</td>\n",
       "      <td>95</td>\n",
       "      <td>2.021277</td>\n",
       "      <td>4337</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1266</th>\n",
       "      <td>140</td>\n",
       "      <td>11.379726</td>\n",
       "      <td>105751.79</td>\n",
       "      <td>1888</td>\n",
       "      <td>30517</td>\n",
       "      <td>3.283870</td>\n",
       "      <td>4339</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "<p>1267 rows × 8 columns</p>\n",
       "</div>\n",
       "      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-ed784449-e322-44b7-8cb3-661a6af5318d')\"\n",
       "              title=\"Convert this dataframe to an interactive table.\"\n",
       "              style=\"display:none;\">\n",
       "        \n",
       "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
       "       width=\"24px\">\n",
       "    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n",
       "    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n",
       "  </svg>\n",
       "      </button>\n",
       "      \n",
       "  <style>\n",
       "    .colab-df-container {\n",
       "      display:flex;\n",
       "      flex-wrap:wrap;\n",
       "      gap: 12px;\n",
       "    }\n",
       "\n",
       "    .colab-df-convert {\n",
       "      background-color: #E8F0FE;\n",
       "      border: none;\n",
       "      border-radius: 50%;\n",
       "      cursor: pointer;\n",
       "      display: none;\n",
       "      fill: #1967D2;\n",
       "      height: 32px;\n",
       "      padding: 0 0 0 0;\n",
       "      width: 32px;\n",
       "    }\n",
       "\n",
       "    .colab-df-convert:hover {\n",
       "      background-color: #E2EBFA;\n",
       "      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
       "      fill: #174EA6;\n",
       "    }\n",
       "\n",
       "    [theme=dark] .colab-df-convert {\n",
       "      background-color: #3B4455;\n",
       "      fill: #D2E3FC;\n",
       "    }\n",
       "\n",
       "    [theme=dark] .colab-df-convert:hover {\n",
       "      background-color: #434B5C;\n",
       "      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
       "      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
       "      fill: #FFFFFF;\n",
       "    }\n",
       "  </style>\n",
       "\n",
       "      <script>\n",
       "        const buttonEl =\n",
       "          document.querySelector('#df-ed784449-e322-44b7-8cb3-661a6af5318d button.colab-df-convert');\n",
       "        buttonEl.style.display =\n",
       "          google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
       "\n",
       "        async function convertToInteractive(key) {\n",
       "          const element = document.querySelector('#df-ed784449-e322-44b7-8cb3-661a6af5318d');\n",
       "          const dataTable =\n",
       "            await google.colab.kernel.invokeFunction('convertToInteractive',\n",
       "                                                     [key], {});\n",
       "          if (!dataTable) return;\n",
       "\n",
       "          const docLinkHtml = 'Like what you see? Visit the ' +\n",
       "            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n",
       "            + ' to learn more about interactive tables.';\n",
       "          element.innerHTML = '';\n",
       "          dataTable['output_type'] = 'display_data';\n",
       "          await google.colab.output.renderOutput(dataTable, element);\n",
       "          const docLink = document.createElement('div');\n",
       "          docLink.innerHTML = docLinkHtml;\n",
       "          element.appendChild(docLink);\n",
       "        }\n",
       "      </script>\n",
       "    </div>\n",
       "  </div>\n",
       "  "
      ],
      "text/plain": [
       "      No. of visits  Mean_purch  Sum_purch  Item_count  Total_quantity  \\\n",
       "0                 1  103.333333     310.00           3             217   \n",
       "1                 2   19.765625     632.50          27             155   \n",
       "2                 1   20.749750     829.99          40             267   \n",
       "3                 1   39.900000      79.80           2             181   \n",
       "4                 1   29.470769     383.12          13             202   \n",
       "...             ...         ...        ...         ...             ...   \n",
       "1262              1   18.409412     312.96          17              87   \n",
       "1263              1  102.000000     102.00           1              40   \n",
       "1264              1   19.322222     173.90           9              66   \n",
       "1265              1    2.870213     134.90          47              95   \n",
       "1266            140   11.379726  105751.79        1888           30517   \n",
       "\n",
       "      Avg_quant  CustomerID  cluster_labels  \n",
       "0     72.333333           2               0  \n",
       "1      4.843750           5               0  \n",
       "2      6.675000          15               0  \n",
       "3     90.500000          17               0  \n",
       "4     15.538462          22               0  \n",
       "...         ...         ...             ...  \n",
       "1262   5.117647        4324               0  \n",
       "1263  40.000000        4329               0  \n",
       "1264   7.333333        4333               0  \n",
       "1265   2.021277        4337               0  \n",
       "1266   3.283870        4339               1  \n",
       "\n",
       "[1267 rows x 8 columns]"
      ]
     },
     "execution_count": 192,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "df_oct2011 = df_cluster_labels(dvt_oct2011,3)\n",
    "df_oct2011"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {
    "colab": {
     "base_uri": "https://localhost:8080/"
    },
    "id": "XKYlJK0KpIlM",
    "outputId": "edf96d27-b415-4cf1-fabf-0723d1b43271"
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "The Silhouette Score is :- 0.9394436256113118\n"
     ]
    }
   ],
   "source": [
    "silhte_score_oct2011 = silhouette_score(dvt_oct2011, df_oct2011['cluster_labels'])\n",
    "print(\"The Silhouette Score is :- \"+str(silhte_score_oct2011))"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {
    "colab": {
     "base_uri": "https://localhost:8080/"
    },
    "id": "l_U7GOn8W7Hr",
    "outputId": "8e949ffc-c55f-4231-fd2f-6a224b339aad"
   },
   "outputs": [
    {
     "data": {
      "text/plain": [
       "0    1261\n",
       "2       4\n",
       "1       2\n",
       "Name: cluster_labels, dtype: int64"
      ]
     },
     "execution_count": 194,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "df_oct2011['cluster_labels'].value_counts()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {
    "colab": {
     "base_uri": "https://localhost:8080/"
    },
    "id": "hz2MARPIW-af",
    "outputId": "e4fef7f1-ce95-4497-8f2d-958b67e355d4"
   },
   "outputs": [
    {
     "data": {
      "image/png": "",
      "text/plain": [
       "<Figure size 640x480 with 1 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "plt.scatter(df_oct2011['Mean_purch'], df_oct2011['Sum_purch'], c=df_oct2011['cluster_labels'], cmap='viridis')\n",
    "plt.title(\"For Oct 2011\")\n",
    "plt.xlabel('Mean_purch')\n",
    "plt.ylabel('Sum_purch')\n",
    "plt.show()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {
    "colab": {
     "base_uri": "https://localhost:8080/"
    },
    "id": "PGk7-RPrXGWe",
    "outputId": "ed7f470d-2405-4a8c-a2ad-d4095be94cda"
   },
   "outputs": [
    {
     "data": {
      "text/html": [
       "\n",
       "  <div id=\"df-6e6e2046-964d-4890-b3c7-4703e094b532\">\n",
       "    <div class=\"colab-df-container\">\n",
       "      <div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>No. of visits</th>\n",
       "      <th>Mean_purch</th>\n",
       "      <th>Sum_purch</th>\n",
       "      <th>Item_count</th>\n",
       "      <th>Total_quantity</th>\n",
       "      <th>Avg_quant</th>\n",
       "      <th>CustomerID</th>\n",
       "      <th>cluster_labels</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>1</td>\n",
       "      <td>103.333333</td>\n",
       "      <td>310.00</td>\n",
       "      <td>3</td>\n",
       "      <td>217</td>\n",
       "      <td>72.333333</td>\n",
       "      <td>2</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>2</td>\n",
       "      <td>19.765625</td>\n",
       "      <td>632.50</td>\n",
       "      <td>27</td>\n",
       "      <td>155</td>\n",
       "      <td>4.843750</td>\n",
       "      <td>5</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>1</td>\n",
       "      <td>20.749750</td>\n",
       "      <td>829.99</td>\n",
       "      <td>40</td>\n",
       "      <td>267</td>\n",
       "      <td>6.675000</td>\n",
       "      <td>15</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>1</td>\n",
       "      <td>39.900000</td>\n",
       "      <td>79.80</td>\n",
       "      <td>2</td>\n",
       "      <td>181</td>\n",
       "      <td>90.500000</td>\n",
       "      <td>17</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>1</td>\n",
       "      <td>29.470769</td>\n",
       "      <td>383.12</td>\n",
       "      <td>13</td>\n",
       "      <td>202</td>\n",
       "      <td>15.538462</td>\n",
       "      <td>22</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>...</th>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1261</th>\n",
       "      <td>1</td>\n",
       "      <td>14.986667</td>\n",
       "      <td>224.80</td>\n",
       "      <td>15</td>\n",
       "      <td>102</td>\n",
       "      <td>6.800000</td>\n",
       "      <td>4321</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1262</th>\n",
       "      <td>1</td>\n",
       "      <td>18.409412</td>\n",
       "      <td>312.96</td>\n",
       "      <td>17</td>\n",
       "      <td>87</td>\n",
       "      <td>5.117647</td>\n",
       "      <td>4324</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1263</th>\n",
       "      <td>1</td>\n",
       "      <td>102.000000</td>\n",
       "      <td>102.00</td>\n",
       "      <td>1</td>\n",
       "      <td>40</td>\n",
       "      <td>40.000000</td>\n",
       "      <td>4329</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1264</th>\n",
       "      <td>1</td>\n",
       "      <td>19.322222</td>\n",
       "      <td>173.90</td>\n",
       "      <td>9</td>\n",
       "      <td>66</td>\n",
       "      <td>7.333333</td>\n",
       "      <td>4333</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1265</th>\n",
       "      <td>1</td>\n",
       "      <td>2.870213</td>\n",
       "      <td>134.90</td>\n",
       "      <td>47</td>\n",
       "      <td>95</td>\n",
       "      <td>2.021277</td>\n",
       "      <td>4337</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "<p>1261 rows × 8 columns</p>\n",
       "</div>\n",
       "      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-6e6e2046-964d-4890-b3c7-4703e094b532')\"\n",
       "              title=\"Convert this dataframe to an interactive table.\"\n",
       "              style=\"display:none;\">\n",
       "        \n",
       "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
       "       width=\"24px\">\n",
       "    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n",
       "    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n",
       "  </svg>\n",
       "      </button>\n",
       "      \n",
       "  <style>\n",
       "    .colab-df-container {\n",
       "      display:flex;\n",
       "      flex-wrap:wrap;\n",
       "      gap: 12px;\n",
       "    }\n",
       "\n",
       "    .colab-df-convert {\n",
       "      background-color: #E8F0FE;\n",
       "      border: none;\n",
       "      border-radius: 50%;\n",
       "      cursor: pointer;\n",
       "      display: none;\n",
       "      fill: #1967D2;\n",
       "      height: 32px;\n",
       "      padding: 0 0 0 0;\n",
       "      width: 32px;\n",
       "    }\n",
       "\n",
       "    .colab-df-convert:hover {\n",
       "      background-color: #E2EBFA;\n",
       "      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
       "      fill: #174EA6;\n",
       "    }\n",
       "\n",
       "    [theme=dark] .colab-df-convert {\n",
       "      background-color: #3B4455;\n",
       "      fill: #D2E3FC;\n",
       "    }\n",
       "\n",
       "    [theme=dark] .colab-df-convert:hover {\n",
       "      background-color: #434B5C;\n",
       "      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
       "      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
       "      fill: #FFFFFF;\n",
       "    }\n",
       "  </style>\n",
       "\n",
       "      <script>\n",
       "        const buttonEl =\n",
       "          document.querySelector('#df-6e6e2046-964d-4890-b3c7-4703e094b532 button.colab-df-convert');\n",
       "        buttonEl.style.display =\n",
       "          google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
       "\n",
       "        async function convertToInteractive(key) {\n",
       "          const element = document.querySelector('#df-6e6e2046-964d-4890-b3c7-4703e094b532');\n",
       "          const dataTable =\n",
       "            await google.colab.kernel.invokeFunction('convertToInteractive',\n",
       "                                                     [key], {});\n",
       "          if (!dataTable) return;\n",
       "\n",
       "          const docLinkHtml = 'Like what you see? Visit the ' +\n",
       "            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n",
       "            + ' to learn more about interactive tables.';\n",
       "          element.innerHTML = '';\n",
       "          dataTable['output_type'] = 'display_data';\n",
       "          await google.colab.output.renderOutput(dataTable, element);\n",
       "          const docLink = document.createElement('div');\n",
       "          docLink.innerHTML = docLinkHtml;\n",
       "          element.appendChild(docLink);\n",
       "        }\n",
       "      </script>\n",
       "    </div>\n",
       "  </div>\n",
       "  "
      ],
      "text/plain": [
       "      No. of visits  Mean_purch  Sum_purch  Item_count  Total_quantity  \\\n",
       "0                 1  103.333333     310.00           3             217   \n",
       "1                 2   19.765625     632.50          27             155   \n",
       "2                 1   20.749750     829.99          40             267   \n",
       "3                 1   39.900000      79.80           2             181   \n",
       "4                 1   29.470769     383.12          13             202   \n",
       "...             ...         ...        ...         ...             ...   \n",
       "1261              1   14.986667     224.80          15             102   \n",
       "1262              1   18.409412     312.96          17              87   \n",
       "1263              1  102.000000     102.00           1              40   \n",
       "1264              1   19.322222     173.90           9              66   \n",
       "1265              1    2.870213     134.90          47              95   \n",
       "\n",
       "      Avg_quant  CustomerID  cluster_labels  \n",
       "0     72.333333           2               0  \n",
       "1      4.843750           5               0  \n",
       "2      6.675000          15               0  \n",
       "3     90.500000          17               0  \n",
       "4     15.538462          22               0  \n",
       "...         ...         ...             ...  \n",
       "1261   6.800000        4321               0  \n",
       "1262   5.117647        4324               0  \n",
       "1263  40.000000        4329               0  \n",
       "1264   7.333333        4333               0  \n",
       "1265   2.021277        4337               0  \n",
       "\n",
       "[1261 rows x 8 columns]"
      ]
     },
     "execution_count": 196,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "#Thus Clusters 1 and 2 are outliers as they have very few datapoints(Customers)\n",
    "#So we remove them and then applyKMeans again\n",
    "#Thus\n",
    "#Then check for outliers and if required, repeat the process\n",
    "#Below is for outliers:-\n",
    "\n",
    "df_oct2011 = df_oct2011[df_oct2011['cluster_labels']!=1]\n",
    "df_oct2011 = df_oct2011[df_oct2011['cluster_labels']!=2]\n",
    "df_oct2011\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {
    "colab": {
     "base_uri": "https://localhost:8080/"
    },
    "id": "6ycdwWCOXOLH",
    "outputId": "7cd47247-9dac-467c-b9a5-d3003819ad17"
   },
   "outputs": [
    {
     "data": {
      "text/plain": [
       "0    1261\n",
       "Name: cluster_labels, dtype: int64"
      ]
     },
     "execution_count": 197,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "df_oct2011['cluster_labels'].value_counts()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {
    "colab": {
     "base_uri": "https://localhost:8080/"
    },
    "id": "zehOS8FIXRdm",
    "outputId": "a4134cdd-40ab-4092-a557-a79e68d2ff7a"
   },
   "outputs": [
    {
     "data": {
      "text/html": [
       "\n",
       "  <div id=\"df-4356078e-9a38-47b3-85f3-7f4cf1de7ed7\">\n",
       "    <div class=\"colab-df-container\">\n",
       "      <div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>No. of visits</th>\n",
       "      <th>Mean_purch</th>\n",
       "      <th>Sum_purch</th>\n",
       "      <th>Item_count</th>\n",
       "      <th>Total_quantity</th>\n",
       "      <th>Avg_quant</th>\n",
       "      <th>CustomerID</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>1</td>\n",
       "      <td>103.333333</td>\n",
       "      <td>310.00</td>\n",
       "      <td>3</td>\n",
       "      <td>217</td>\n",
       "      <td>72.333333</td>\n",
       "      <td>2</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>2</td>\n",
       "      <td>19.765625</td>\n",
       "      <td>632.50</td>\n",
       "      <td>27</td>\n",
       "      <td>155</td>\n",
       "      <td>4.843750</td>\n",
       "      <td>5</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>1</td>\n",
       "      <td>20.749750</td>\n",
       "      <td>829.99</td>\n",
       "      <td>40</td>\n",
       "      <td>267</td>\n",
       "      <td>6.675000</td>\n",
       "      <td>15</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>1</td>\n",
       "      <td>39.900000</td>\n",
       "      <td>79.80</td>\n",
       "      <td>2</td>\n",
       "      <td>181</td>\n",
       "      <td>90.500000</td>\n",
       "      <td>17</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>1</td>\n",
       "      <td>29.470769</td>\n",
       "      <td>383.12</td>\n",
       "      <td>13</td>\n",
       "      <td>202</td>\n",
       "      <td>15.538462</td>\n",
       "      <td>22</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>...</th>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1261</th>\n",
       "      <td>1</td>\n",
       "      <td>14.986667</td>\n",
       "      <td>224.80</td>\n",
       "      <td>15</td>\n",
       "      <td>102</td>\n",
       "      <td>6.800000</td>\n",
       "      <td>4321</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1262</th>\n",
       "      <td>1</td>\n",
       "      <td>18.409412</td>\n",
       "      <td>312.96</td>\n",
       "      <td>17</td>\n",
       "      <td>87</td>\n",
       "      <td>5.117647</td>\n",
       "      <td>4324</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1263</th>\n",
       "      <td>1</td>\n",
       "      <td>102.000000</td>\n",
       "      <td>102.00</td>\n",
       "      <td>1</td>\n",
       "      <td>40</td>\n",
       "      <td>40.000000</td>\n",
       "      <td>4329</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1264</th>\n",
       "      <td>1</td>\n",
       "      <td>19.322222</td>\n",
       "      <td>173.90</td>\n",
       "      <td>9</td>\n",
       "      <td>66</td>\n",
       "      <td>7.333333</td>\n",
       "      <td>4333</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1265</th>\n",
       "      <td>1</td>\n",
       "      <td>2.870213</td>\n",
       "      <td>134.90</td>\n",
       "      <td>47</td>\n",
       "      <td>95</td>\n",
       "      <td>2.021277</td>\n",
       "      <td>4337</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "<p>1261 rows × 7 columns</p>\n",
       "</div>\n",
       "      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-4356078e-9a38-47b3-85f3-7f4cf1de7ed7')\"\n",
       "              title=\"Convert this dataframe to an interactive table.\"\n",
       "              style=\"display:none;\">\n",
       "        \n",
       "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
       "       width=\"24px\">\n",
       "    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n",
       "    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n",
       "  </svg>\n",
       "      </button>\n",
       "      \n",
       "  <style>\n",
       "    .colab-df-container {\n",
       "      display:flex;\n",
       "      flex-wrap:wrap;\n",
       "      gap: 12px;\n",
       "    }\n",
       "\n",
       "    .colab-df-convert {\n",
       "      background-color: #E8F0FE;\n",
       "      border: none;\n",
       "      border-radius: 50%;\n",
       "      cursor: pointer;\n",
       "      display: none;\n",
       "      fill: #1967D2;\n",
       "      height: 32px;\n",
       "      padding: 0 0 0 0;\n",
       "      width: 32px;\n",
       "    }\n",
       "\n",
       "    .colab-df-convert:hover {\n",
       "      background-color: #E2EBFA;\n",
       "      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
       "      fill: #174EA6;\n",
       "    }\n",
       "\n",
       "    [theme=dark] .colab-df-convert {\n",
       "      background-color: #3B4455;\n",
       "      fill: #D2E3FC;\n",
       "    }\n",
       "\n",
       "    [theme=dark] .colab-df-convert:hover {\n",
       "      background-color: #434B5C;\n",
       "      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
       "      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
       "      fill: #FFFFFF;\n",
       "    }\n",
       "  </style>\n",
       "\n",
       "      <script>\n",
       "        const buttonEl =\n",
       "          document.querySelector('#df-4356078e-9a38-47b3-85f3-7f4cf1de7ed7 button.colab-df-convert');\n",
       "        buttonEl.style.display =\n",
       "          google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
       "\n",
       "        async function convertToInteractive(key) {\n",
       "          const element = document.querySelector('#df-4356078e-9a38-47b3-85f3-7f4cf1de7ed7');\n",
       "          const dataTable =\n",
       "            await google.colab.kernel.invokeFunction('convertToInteractive',\n",
       "                                                     [key], {});\n",
       "          if (!dataTable) return;\n",
       "\n",
       "          const docLinkHtml = 'Like what you see? Visit the ' +\n",
       "            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n",
       "            + ' to learn more about interactive tables.';\n",
       "          element.innerHTML = '';\n",
       "          dataTable['output_type'] = 'display_data';\n",
       "          await google.colab.output.renderOutput(dataTable, element);\n",
       "          const docLink = document.createElement('div');\n",
       "          docLink.innerHTML = docLinkHtml;\n",
       "          element.appendChild(docLink);\n",
       "        }\n",
       "      </script>\n",
       "    </div>\n",
       "  </div>\n",
       "  "
      ],
      "text/plain": [
       "      No. of visits  Mean_purch  Sum_purch  Item_count  Total_quantity  \\\n",
       "0                 1  103.333333     310.00           3             217   \n",
       "1                 2   19.765625     632.50          27             155   \n",
       "2                 1   20.749750     829.99          40             267   \n",
       "3                 1   39.900000      79.80           2             181   \n",
       "4                 1   29.470769     383.12          13             202   \n",
       "...             ...         ...        ...         ...             ...   \n",
       "1261              1   14.986667     224.80          15             102   \n",
       "1262              1   18.409412     312.96          17              87   \n",
       "1263              1  102.000000     102.00           1              40   \n",
       "1264              1   19.322222     173.90           9              66   \n",
       "1265              1    2.870213     134.90          47              95   \n",
       "\n",
       "      Avg_quant  CustomerID  \n",
       "0     72.333333           2  \n",
       "1      4.843750           5  \n",
       "2      6.675000          15  \n",
       "3     90.500000          17  \n",
       "4     15.538462          22  \n",
       "...         ...         ...  \n",
       "1261   6.800000        4321  \n",
       "1262   5.117647        4324  \n",
       "1263  40.000000        4329  \n",
       "1264   7.333333        4333  \n",
       "1265   2.021277        4337  \n",
       "\n",
       "[1261 rows x 7 columns]"
      ]
     },
     "execution_count": 198,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "df_oct2011_person = df_oct2011.copy(deep=True)\n",
    "df_oct2011_person.drop(['cluster_labels'],axis=1,inplace=True)\n",
    "df_oct2011_person"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {
    "colab": {
     "base_uri": "https://localhost:8080/"
    },
    "id": "WUgtRgLcXbpC",
    "outputId": "285be7d7-c155-4271-fb32-7273bcb49494"
   },
   "outputs": [
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "/usr/local/lib/python3.9/dist-packages/sklearn/cluster/_kmeans.py:870: FutureWarning: The default value of `n_init` will change from 10 to 'auto' in 1.4. Set the value of `n_init` explicitly to suppress the warning\n",
      "  warnings.warn(\n"
     ]
    },
    {
     "data": {
      "text/html": [
       "\n",
       "  <div id=\"df-28632e70-9574-4fab-a27c-21cedffd0f1d\">\n",
       "    <div class=\"colab-df-container\">\n",
       "      <div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>No. of visits</th>\n",
       "      <th>Mean_purch</th>\n",
       "      <th>Sum_purch</th>\n",
       "      <th>Item_count</th>\n",
       "      <th>Total_quantity</th>\n",
       "      <th>Avg_quant</th>\n",
       "      <th>CustomerID</th>\n",
       "      <th>cluster_labels</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>1</td>\n",
       "      <td>103.333333</td>\n",
       "      <td>310.00</td>\n",
       "      <td>3</td>\n",
       "      <td>217</td>\n",
       "      <td>72.333333</td>\n",
       "      <td>2</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>2</td>\n",
       "      <td>19.765625</td>\n",
       "      <td>632.50</td>\n",
       "      <td>27</td>\n",
       "      <td>155</td>\n",
       "      <td>4.843750</td>\n",
       "      <td>5</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>1</td>\n",
       "      <td>20.749750</td>\n",
       "      <td>829.99</td>\n",
       "      <td>40</td>\n",
       "      <td>267</td>\n",
       "      <td>6.675000</td>\n",
       "      <td>15</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>1</td>\n",
       "      <td>39.900000</td>\n",
       "      <td>79.80</td>\n",
       "      <td>2</td>\n",
       "      <td>181</td>\n",
       "      <td>90.500000</td>\n",
       "      <td>17</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>1</td>\n",
       "      <td>29.470769</td>\n",
       "      <td>383.12</td>\n",
       "      <td>13</td>\n",
       "      <td>202</td>\n",
       "      <td>15.538462</td>\n",
       "      <td>22</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>...</th>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1261</th>\n",
       "      <td>1</td>\n",
       "      <td>14.986667</td>\n",
       "      <td>224.80</td>\n",
       "      <td>15</td>\n",
       "      <td>102</td>\n",
       "      <td>6.800000</td>\n",
       "      <td>4321</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1262</th>\n",
       "      <td>1</td>\n",
       "      <td>18.409412</td>\n",
       "      <td>312.96</td>\n",
       "      <td>17</td>\n",
       "      <td>87</td>\n",
       "      <td>5.117647</td>\n",
       "      <td>4324</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1263</th>\n",
       "      <td>1</td>\n",
       "      <td>102.000000</td>\n",
       "      <td>102.00</td>\n",
       "      <td>1</td>\n",
       "      <td>40</td>\n",
       "      <td>40.000000</td>\n",
       "      <td>4329</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1264</th>\n",
       "      <td>1</td>\n",
       "      <td>19.322222</td>\n",
       "      <td>173.90</td>\n",
       "      <td>9</td>\n",
       "      <td>66</td>\n",
       "      <td>7.333333</td>\n",
       "      <td>4333</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1265</th>\n",
       "      <td>1</td>\n",
       "      <td>2.870213</td>\n",
       "      <td>134.90</td>\n",
       "      <td>47</td>\n",
       "      <td>95</td>\n",
       "      <td>2.021277</td>\n",
       "      <td>4337</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "<p>1261 rows × 8 columns</p>\n",
       "</div>\n",
       "      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-28632e70-9574-4fab-a27c-21cedffd0f1d')\"\n",
       "              title=\"Convert this dataframe to an interactive table.\"\n",
       "              style=\"display:none;\">\n",
       "        \n",
       "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
       "       width=\"24px\">\n",
       "    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n",
       "    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n",
       "  </svg>\n",
       "      </button>\n",
       "      \n",
       "  <style>\n",
       "    .colab-df-container {\n",
       "      display:flex;\n",
       "      flex-wrap:wrap;\n",
       "      gap: 12px;\n",
       "    }\n",
       "\n",
       "    .colab-df-convert {\n",
       "      background-color: #E8F0FE;\n",
       "      border: none;\n",
       "      border-radius: 50%;\n",
       "      cursor: pointer;\n",
       "      display: none;\n",
       "      fill: #1967D2;\n",
       "      height: 32px;\n",
       "      padding: 0 0 0 0;\n",
       "      width: 32px;\n",
       "    }\n",
       "\n",
       "    .colab-df-convert:hover {\n",
       "      background-color: #E2EBFA;\n",
       "      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
       "      fill: #174EA6;\n",
       "    }\n",
       "\n",
       "    [theme=dark] .colab-df-convert {\n",
       "      background-color: #3B4455;\n",
       "      fill: #D2E3FC;\n",
       "    }\n",
       "\n",
       "    [theme=dark] .colab-df-convert:hover {\n",
       "      background-color: #434B5C;\n",
       "      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
       "      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
       "      fill: #FFFFFF;\n",
       "    }\n",
       "  </style>\n",
       "\n",
       "      <script>\n",
       "        const buttonEl =\n",
       "          document.querySelector('#df-28632e70-9574-4fab-a27c-21cedffd0f1d button.colab-df-convert');\n",
       "        buttonEl.style.display =\n",
       "          google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
       "\n",
       "        async function convertToInteractive(key) {\n",
       "          const element = document.querySelector('#df-28632e70-9574-4fab-a27c-21cedffd0f1d');\n",
       "          const dataTable =\n",
       "            await google.colab.kernel.invokeFunction('convertToInteractive',\n",
       "                                                     [key], {});\n",
       "          if (!dataTable) return;\n",
       "\n",
       "          const docLinkHtml = 'Like what you see? Visit the ' +\n",
       "            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n",
       "            + ' to learn more about interactive tables.';\n",
       "          element.innerHTML = '';\n",
       "          dataTable['output_type'] = 'display_data';\n",
       "          await google.colab.output.renderOutput(dataTable, element);\n",
       "          const docLink = document.createElement('div');\n",
       "          docLink.innerHTML = docLinkHtml;\n",
       "          element.appendChild(docLink);\n",
       "        }\n",
       "      </script>\n",
       "    </div>\n",
       "  </div>\n",
       "  "
      ],
      "text/plain": [
       "      No. of visits  Mean_purch  Sum_purch  Item_count  Total_quantity  \\\n",
       "0                 1  103.333333     310.00           3             217   \n",
       "1                 2   19.765625     632.50          27             155   \n",
       "2                 1   20.749750     829.99          40             267   \n",
       "3                 1   39.900000      79.80           2             181   \n",
       "4                 1   29.470769     383.12          13             202   \n",
       "...             ...         ...        ...         ...             ...   \n",
       "1261              1   14.986667     224.80          15             102   \n",
       "1262              1   18.409412     312.96          17              87   \n",
       "1263              1  102.000000     102.00           1              40   \n",
       "1264              1   19.322222     173.90           9              66   \n",
       "1265              1    2.870213     134.90          47              95   \n",
       "\n",
       "      Avg_quant  CustomerID  cluster_labels  \n",
       "0     72.333333           2               1  \n",
       "1      4.843750           5               1  \n",
       "2      6.675000          15               1  \n",
       "3     90.500000          17               1  \n",
       "4     15.538462          22               1  \n",
       "...         ...         ...             ...  \n",
       "1261   6.800000        4321               0  \n",
       "1262   5.117647        4324               0  \n",
       "1263  40.000000        4329               0  \n",
       "1264   7.333333        4333               0  \n",
       "1265   2.021277        4337               0  \n",
       "\n",
       "[1261 rows x 8 columns]"
      ]
     },
     "execution_count": 199,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "df_oct2011_new = df_cluster_labels(df_oct2011_person,3)\n",
    "df_oct2011_new"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {
    "colab": {
     "base_uri": "https://localhost:8080/"
    },
    "id": "IErPodu-pN-8",
    "outputId": "ce4d4930-6104-4d17-dbae-e6be8b725f94"
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "The Silhouette Score is :- 0.528081845524613\n"
     ]
    }
   ],
   "source": [
    "silhte_score_oct2011_new = silhouette_score(df_oct2011_person, df_oct2011_new['cluster_labels'])\n",
    "print(\"The Silhouette Score is :- \"+str(silhte_score_oct2011_new))\n",
    "#Indicates that silhouette score is realistic for dataset without outliers\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {
    "colab": {
     "base_uri": "https://localhost:8080/"
    },
    "id": "tb2wzDP9Xfon",
    "outputId": "abd9f2c8-9b31-4f47-828e-9a0022de1b83"
   },
   "outputs": [
    {
     "data": {
      "text/plain": [
       "1    623\n",
       "0    603\n",
       "2     35\n",
       "Name: cluster_labels, dtype: int64"
      ]
     },
     "execution_count": 201,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "df_oct2011_new['cluster_labels'].value_counts()\n",
    "#These are comparatively good clusters"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {
    "colab": {
     "base_uri": "https://localhost:8080/"
    },
    "id": "lqP7Y7igXj5e",
    "outputId": "926e8de5-c89d-46e4-daec-eb9d3e94b7f0"
   },
   "outputs": [
    {
     "data": {
      "image/png": "",
      "text/plain": [
       "<Figure size 640x480 with 1 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "plt.scatter(df_oct2011_new['Mean_purch'], df_oct2011_new['Sum_purch'], c=df_oct2011_new['cluster_labels'], cmap='viridis')\n",
    "plt.title(\"For Oct 2011 (After removing outliers)\")\n",
    "plt.xlabel('Mean_purch')\n",
    "plt.ylabel('avg_quantity')\n",
    "plt.show()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {
    "id": "EdTQhN6aXqOK"
   },
   "outputs": [],
   "source": [
    "oct2011 = descrip_dict(og_oct2011,df_oct2011_new)\n",
    "oct2011 = processlis(oct2011)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {
    "colab": {
     "base_uri": "https://localhost:8080/"
    },
    "id": "FF6Lj0etXuHM",
    "outputId": "1084b8db-cf03-4dc5-9b05-511fe0194dd2"
   },
   "outputs": [
    {
     "data": {
      "text/plain": [
       "[     CustomerID                                        Description\n",
       " 0             2  [DOUGHNUT LIP GLOSS , ICE CREAM PEN LIP GLOSS ...\n",
       " 1             5  [ANTIQUE GLASS PEDESTAL BOWL, PANTRY MAGNETIC ...\n",
       " 2            15  [RED RETROSPOT PICNIC BAG, RED RETROSPOT SMALL...\n",
       " 3            17                 [POSTAGE, BUBBLEGUM RING ASSORTED]\n",
       " 4            22  [HANGING QUILTED PATCHWORK APPLES, AIRLINE BAG...\n",
       " ..          ...                                                ...\n",
       " 618        2125  [KINGS CHOICE TEA CADDY , METAL SIGN EMPIRE TE...\n",
       " 619        2126  [WOODLAND BUNNIES LOLLY MAKERS, CHRISTMAS RETR...\n",
       " 620        2131  [VINTAGE BILLBOARD LOVE/HATE MUG, HOME SWEET H...\n",
       " 621        2132  [CHRISTMAS LIGHTS 10 SANTAS , BISCUIT TIN 50'S...\n",
       " 622        2134  [WHITE HANGING HEART T-LIGHT HOLDER, 6 RIBBONS...\n",
       " \n",
       " [623 rows x 2 columns],\n",
       "      CustomerID                                        Description\n",
       " 0          2150  [HOME SWEET HOME CUSHION COVER , BELLE JARDINI...\n",
       " 1          2151  [GRAND CHOCOLATECANDLE, HOMEMADE JAM SCENTED C...\n",
       " 2          2160  [WHITE SKULL HOT WATER BOTTLE , CERAMIC PIRATE...\n",
       " 3          2163  [MINT KITCHEN SCALES, JAM MAKING SET PRINTED, ...\n",
       " 4          2164  [LOVE BUILDING BLOCK WORD, BLUE SPOT CERAMIC D...\n",
       " ..          ...                                                ...\n",
       " 598        4321  [FELTCRAFT CHRISTMAS FAIRY, CHRISTMAS CRAFT LI...\n",
       " 599        4324  [CHILLI LIGHTS, PRETTY HANGING QUILTED HEARTS,...\n",
       " 600        4329                           [ART LIGHTS,FUNK MONKEY]\n",
       " 601        4333  [HOT WATER BOTTLE TEA AND SYMPATHY, GARDENERS ...\n",
       " 602        4337  [RECYCLING BAG RETROSPOT , 60 TEATIME FAIRY CA...\n",
       " \n",
       " [603 rows x 2 columns]]"
      ]
     },
     "execution_count": 204,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "oct2011"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {
    "colab": {
     "base_uri": "https://localhost:8080/"
    },
    "id": "BrRt1UyEPKYG",
    "outputId": "518d21da-781d-41dd-c537-71b2a110460a"
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "      No. of visits  Mean_purch  Sum_purch  Item_count  Total_quantity  \\\n",
      "0                 1  103.333333     310.00           3             217   \n",
      "1                 2   19.765625     632.50          27             155   \n",
      "2                 1   20.749750     829.99          40             267   \n",
      "3                 1   39.900000      79.80           2             181   \n",
      "4                 1   29.470769     383.12          13             202   \n",
      "...             ...         ...        ...         ...             ...   \n",
      "1262              1   18.409412     312.96          17              87   \n",
      "1263              1  102.000000     102.00           1              40   \n",
      "1264              1   19.322222     173.90           9              66   \n",
      "1265              1    2.870213     134.90          47              95   \n",
      "1266            140   11.379726  105751.79        1888           30517   \n",
      "\n",
      "      Avg_quant  CustomerID  \n",
      "0     72.333333           2  \n",
      "1      4.843750           5  \n",
      "2      6.675000          15  \n",
      "3     90.500000          17  \n",
      "4     15.538462          22  \n",
      "...         ...         ...  \n",
      "1262   5.117647        4324  \n",
      "1263  40.000000        4329  \n",
      "1264   7.333333        4333  \n",
      "1265   2.021277        4337  \n",
      "1266   3.283870        4339  \n",
      "\n",
      "[1267 rows x 7 columns]\n"
     ]
    }
   ],
   "source": [
    "print(dvt_oct2011)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {
    "colab": {
     "base_uri": "https://localhost:8080/"
    },
    "id": "pAP5M7NlOWfI",
    "outputId": "9c9d10ea-c8c7-424e-f0a3-e7ff7653ab44"
   },
   "outputs": [
    {
     "data": {
      "image/png": "",
      "text/plain": [
       "<Figure size 640x480 with 1 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "data": {
      "image/png": "",
      "text/plain": [
       "<Figure size 500x500 with 1 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "(1261, 4)\n",
      "(3, 4)\n",
      "(3, 4)\n"
     ]
    },
    {
     "data": {
      "image/png": "",
      "text/plain": [
       "<Figure size 640x480 with 1 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "data": {
      "image/png": "",
      "text/plain": [
       "<Figure size 500x500 with 1 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "(739, 5)\n",
      "(522, 5)\n"
     ]
    },
    {
     "data": {
      "text/plain": [
       "[     CustomerID                                        Description\n",
       " 0             2  [DOUGHNUT LIP GLOSS , ICE CREAM PEN LIP GLOSS ...\n",
       " 1             5  [ANTIQUE GLASS PEDESTAL BOWL, PANTRY MAGNETIC ...\n",
       " 2            15  [RED RETROSPOT PICNIC BAG, RED RETROSPOT SMALL...\n",
       " 3            17                 [POSTAGE, BUBBLEGUM RING ASSORTED]\n",
       " 4            22  [HANGING QUILTED PATCHWORK APPLES, AIRLINE BAG...\n",
       " ..          ...                                                ...\n",
       " 734        3708  [PINK CREAM FELT CRAFT TRINKET BOX , FELTCRAFT...\n",
       " 735        3754  [GROW YOUR OWN BASIL IN ENAMEL MUG, FRIDGE MAG...\n",
       " 736        3995  [SPOTTY PINK DUCK DOORSTOP, DOORSTOP RETROSPOT...\n",
       " 737        4063                     [POLYESTER FILLER PAD 40x40cm]\n",
       " 738        4303  [CARD BILLBOARD FONT, GIN & TONIC DIET GREETIN...\n",
       " \n",
       " [739 rows x 2 columns],\n",
       "      CustomerID                                        Description\n",
       " 0          1753  [GINGHAM RECIPE BOOK BOX, RIBBON REEL LACE DES...\n",
       " 1          1855  [STRAWBERRY CERAMIC TRINKET BOX, SWEETHEART CE...\n",
       " 2          1861  [RED RETROSPOT CHARLOTTE BAG, JUMBO BAG VINTAG...\n",
       " 3          1884  [COLOURING PENCILS BROWN TUBE, 12 PENCILS TALL...\n",
       " 4          1901  [SET OF 12 MINI LOAF BAKING CASES, PACK OF 72 ...\n",
       " ..          ...                                                ...\n",
       " 517        4308  [PACK OF 60 PINK PAISLEY CAKE CASES, 60 TEATIM...\n",
       " 518        4309  [PARTY BUNTING, DRAWER KNOB CRACKLE GLAZE IVOR...\n",
       " 519        4315  [PACK OF 60 DINOSAUR CAKE CASES, PACK OF 72 SK...\n",
       " 520        4317  [ANTIQUE SILVER T-LIGHT GLASS, WHITE HANGING H...\n",
       " 521        4319  [HAND WARMER BABUSHKA DESIGN, HAND WARMER BIRD...\n",
       " \n",
       " [522 rows x 2 columns]]"
      ]
     },
     "execution_count": 206,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "\n",
    "pca = PCA(n_components = 3)\n",
    "pca.fit(X = dvt_oct2011)\n",
    "new_dvt = pca.transform(dvt_oct2011)\n",
    "\n",
    "new_dvt = pd.DataFrame(data = new_dvt,columns = ['X0','X1','X2'])\n",
    "model = AgglomerativeClustering(distance_threshold=0, n_clusters=None, linkage='ward').fit(new_dvt)\n",
    "\n",
    "plot_dendrogram(model, truncate_mode=\"level\", p=4)\n",
    "\n",
    "dict_oct2011 =  Agglocls(new_dvt,3)\n",
    "\n",
    "final_dvt_oct2011 = dict_oct2011[0]\n",
    "pca_oct2011 = PCA(n_components = 3)\n",
    "pca_oct2011.fit(X = final_dvt_oct2011)\n",
    "final_dvt_oct2011 = pca_oct2011.transform(final_dvt_oct2011)\n",
    "final_dvt_oct2011 = pd.DataFrame(data = final_dvt_oct2011,columns = ['X0','X1','X2'])\n",
    "AggloDendo(final_dvt_oct2011)\n",
    "\n",
    "dict_oct2011_final =  AggloPca(final_dvt_oct2011,2,dvt_oct2011,'X0','X2')\n",
    "\n",
    "oct2011_agg = descrip_dict(og_oct2011,final_dvt_oct2011)\n",
    "oct2011_agg = processlis(oct2011_agg)\n",
    "oct2011_agg\n",
    "\n",
    "\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {
    "colab": {
     "background_save": true
    },
    "id": "DyPR9hTl_q_8"
   },
   "outputs": [],
   "source": [
    "Cluster_dict['oct2011'] = (len(oct2011),len(oct2011_agg))\n",
    "dicti_2011oct = {}\n",
    "klis = []\n",
    "for i in range(Cluster_dict['oct2011'][0]):\n",
    "  temp = apriori_rules(oct2011[i],0.075)\n",
    "  klis.append(temp)\n",
    "alis = []\n",
    "for i in range(Cluster_dict['oct2011'][1]):\n",
    "  temp = apriori_rules(oct2011_agg[i],0.075)\n",
    "  alis.append(temp)\n",
    "#apriori_rules(1_agg[0],0.075)\n",
    "dicti_2011oct['K-means'] = klis\n",
    "dicti_2011oct['Agglo'] = alis\n",
    "\n",
    "Rules_dict['oct2011'] = dicti_2011oct"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {
    "id": "mTl_UL6jPQrp"
   },
   "outputs": [],
   "source": [
    "# only 4 persons visited the store in october hence this analysis is very biased and irrelevant for october analysis "
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {
    "id": "cLcdwGKXXywk"
   },
   "source": [
    "## For Nov 2011"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {
    "id": "yFtfiTIfx9RC"
   },
   "outputs": [],
   "source": []
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {
    "colab": {
     "base_uri": "https://localhost:8080/"
    },
    "id": "q2yBCIRoXxgP",
    "outputId": "018b515a-3977-4672-ddab-6055e9430bd5"
   },
   "outputs": [
    {
     "data": {
      "text/html": [
       "\n",
       "  <div id=\"df-c45b5296-aa20-4cf7-8ae6-b09257012066\">\n",
       "    <div class=\"colab-df-container\">\n",
       "      <div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>InvoiceNo</th>\n",
       "      <th>StockCode</th>\n",
       "      <th>Description</th>\n",
       "      <th>Quantity</th>\n",
       "      <th>UnitPrice</th>\n",
       "      <th>CustomerID</th>\n",
       "      <th>Country</th>\n",
       "      <th>time_intervals</th>\n",
       "      <th>Total Price</th>\n",
       "      <th>Money_bins</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>431673</th>\n",
       "      <td>573744</td>\n",
       "      <td>21314</td>\n",
       "      <td>SMALL GLASS HEART TRINKET POT</td>\n",
       "      <td>8</td>\n",
       "      <td>2.10</td>\n",
       "      <td>3941</td>\n",
       "      <td>United Kingdom</td>\n",
       "      <td>04:00-07:59</td>\n",
       "      <td>16.80</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>431674</th>\n",
       "      <td>573744</td>\n",
       "      <td>21704</td>\n",
       "      <td>BAG 250g SWIRLY MARBLES</td>\n",
       "      <td>12</td>\n",
       "      <td>0.85</td>\n",
       "      <td>3941</td>\n",
       "      <td>United Kingdom</td>\n",
       "      <td>04:00-07:59</td>\n",
       "      <td>10.20</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>431675</th>\n",
       "      <td>573744</td>\n",
       "      <td>21791</td>\n",
       "      <td>VINTAGE HEADS AND TAILS CARD GAME</td>\n",
       "      <td>12</td>\n",
       "      <td>1.25</td>\n",
       "      <td>3941</td>\n",
       "      <td>United Kingdom</td>\n",
       "      <td>04:00-07:59</td>\n",
       "      <td>15.00</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>431676</th>\n",
       "      <td>573744</td>\n",
       "      <td>21892</td>\n",
       "      <td>TRADITIONAL WOODEN CATCH CUP GAME</td>\n",
       "      <td>12</td>\n",
       "      <td>1.25</td>\n",
       "      <td>3941</td>\n",
       "      <td>United Kingdom</td>\n",
       "      <td>04:00-07:59</td>\n",
       "      <td>15.00</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>431677</th>\n",
       "      <td>573744</td>\n",
       "      <td>21915</td>\n",
       "      <td>RED  HARMONICA IN BOX</td>\n",
       "      <td>12</td>\n",
       "      <td>1.25</td>\n",
       "      <td>3941</td>\n",
       "      <td>United Kingdom</td>\n",
       "      <td>04:00-07:59</td>\n",
       "      <td>15.00</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>...</th>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>516364</th>\n",
       "      <td>579885</td>\n",
       "      <td>85034C</td>\n",
       "      <td>3 ROSE MORRIS BOXED CANDLES</td>\n",
       "      <td>4</td>\n",
       "      <td>1.25</td>\n",
       "      <td>2275</td>\n",
       "      <td>United Kingdom</td>\n",
       "      <td>16:00-19:59</td>\n",
       "      <td>5.00</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>516365</th>\n",
       "      <td>579885</td>\n",
       "      <td>21742</td>\n",
       "      <td>LARGE ROUND WICKER PLATTER</td>\n",
       "      <td>2</td>\n",
       "      <td>5.95</td>\n",
       "      <td>2275</td>\n",
       "      <td>United Kingdom</td>\n",
       "      <td>16:00-19:59</td>\n",
       "      <td>11.90</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>516366</th>\n",
       "      <td>579885</td>\n",
       "      <td>23084</td>\n",
       "      <td>RABBIT NIGHT LIGHT</td>\n",
       "      <td>6</td>\n",
       "      <td>2.08</td>\n",
       "      <td>2275</td>\n",
       "      <td>United Kingdom</td>\n",
       "      <td>16:00-19:59</td>\n",
       "      <td>12.48</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>516367</th>\n",
       "      <td>579885</td>\n",
       "      <td>21257</td>\n",
       "      <td>VICTORIAN SEWING BOX MEDIUM</td>\n",
       "      <td>1</td>\n",
       "      <td>7.95</td>\n",
       "      <td>2275</td>\n",
       "      <td>United Kingdom</td>\n",
       "      <td>16:00-19:59</td>\n",
       "      <td>7.95</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>516368</th>\n",
       "      <td>579885</td>\n",
       "      <td>21259</td>\n",
       "      <td>VICTORIAN SEWING BOX SMALL</td>\n",
       "      <td>1</td>\n",
       "      <td>5.95</td>\n",
       "      <td>2275</td>\n",
       "      <td>United Kingdom</td>\n",
       "      <td>16:00-19:59</td>\n",
       "      <td>5.95</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "<p>83498 rows × 10 columns</p>\n",
       "</div>\n",
       "      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-c45b5296-aa20-4cf7-8ae6-b09257012066')\"\n",
       "              title=\"Convert this dataframe to an interactive table.\"\n",
       "              style=\"display:none;\">\n",
       "        \n",
       "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
       "       width=\"24px\">\n",
       "    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n",
       "    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n",
       "  </svg>\n",
       "      </button>\n",
       "      \n",
       "  <style>\n",
       "    .colab-df-container {\n",
       "      display:flex;\n",
       "      flex-wrap:wrap;\n",
       "      gap: 12px;\n",
       "    }\n",
       "\n",
       "    .colab-df-convert {\n",
       "      background-color: #E8F0FE;\n",
       "      border: none;\n",
       "      border-radius: 50%;\n",
       "      cursor: pointer;\n",
       "      display: none;\n",
       "      fill: #1967D2;\n",
       "      height: 32px;\n",
       "      padding: 0 0 0 0;\n",
       "      width: 32px;\n",
       "    }\n",
       "\n",
       "    .colab-df-convert:hover {\n",
       "      background-color: #E2EBFA;\n",
       "      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
       "      fill: #174EA6;\n",
       "    }\n",
       "\n",
       "    [theme=dark] .colab-df-convert {\n",
       "      background-color: #3B4455;\n",
       "      fill: #D2E3FC;\n",
       "    }\n",
       "\n",
       "    [theme=dark] .colab-df-convert:hover {\n",
       "      background-color: #434B5C;\n",
       "      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
       "      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
       "      fill: #FFFFFF;\n",
       "    }\n",
       "  </style>\n",
       "\n",
       "      <script>\n",
       "        const buttonEl =\n",
       "          document.querySelector('#df-c45b5296-aa20-4cf7-8ae6-b09257012066 button.colab-df-convert');\n",
       "        buttonEl.style.display =\n",
       "          google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
       "\n",
       "        async function convertToInteractive(key) {\n",
       "          const element = document.querySelector('#df-c45b5296-aa20-4cf7-8ae6-b09257012066');\n",
       "          const dataTable =\n",
       "            await google.colab.kernel.invokeFunction('convertToInteractive',\n",
       "                                                     [key], {});\n",
       "          if (!dataTable) return;\n",
       "\n",
       "          const docLinkHtml = 'Like what you see? Visit the ' +\n",
       "            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n",
       "            + ' to learn more about interactive tables.';\n",
       "          element.innerHTML = '';\n",
       "          dataTable['output_type'] = 'display_data';\n",
       "          await google.colab.output.renderOutput(dataTable, element);\n",
       "          const docLink = document.createElement('div');\n",
       "          docLink.innerHTML = docLinkHtml;\n",
       "          element.appendChild(docLink);\n",
       "        }\n",
       "      </script>\n",
       "    </div>\n",
       "  </div>\n",
       "  "
      ],
      "text/plain": [
       "       InvoiceNo StockCode                         Description  Quantity  \\\n",
       "431673    573744     21314       SMALL GLASS HEART TRINKET POT         8   \n",
       "431674    573744     21704             BAG 250g SWIRLY MARBLES        12   \n",
       "431675    573744     21791  VINTAGE HEADS AND TAILS CARD GAME         12   \n",
       "431676    573744     21892  TRADITIONAL WOODEN CATCH CUP GAME         12   \n",
       "431677    573744     21915              RED  HARMONICA IN BOX         12   \n",
       "...          ...       ...                                 ...       ...   \n",
       "516364    579885    85034C         3 ROSE MORRIS BOXED CANDLES         4   \n",
       "516365    579885     21742         LARGE ROUND WICKER PLATTER          2   \n",
       "516366    579885     23084                  RABBIT NIGHT LIGHT         6   \n",
       "516367    579885     21257         VICTORIAN SEWING BOX MEDIUM         1   \n",
       "516368    579885     21259         VICTORIAN SEWING BOX SMALL          1   \n",
       "\n",
       "        UnitPrice  CustomerID         Country time_intervals  Total Price  \\\n",
       "431673       2.10        3941  United Kingdom    04:00-07:59        16.80   \n",
       "431674       0.85        3941  United Kingdom    04:00-07:59        10.20   \n",
       "431675       1.25        3941  United Kingdom    04:00-07:59        15.00   \n",
       "431676       1.25        3941  United Kingdom    04:00-07:59        15.00   \n",
       "431677       1.25        3941  United Kingdom    04:00-07:59        15.00   \n",
       "...           ...         ...             ...            ...          ...   \n",
       "516364       1.25        2275  United Kingdom    16:00-19:59         5.00   \n",
       "516365       5.95        2275  United Kingdom    16:00-19:59        11.90   \n",
       "516366       2.08        2275  United Kingdom    16:00-19:59        12.48   \n",
       "516367       7.95        2275  United Kingdom    16:00-19:59         7.95   \n",
       "516368       5.95        2275  United Kingdom    16:00-19:59         5.95   \n",
       "\n",
       "        Money_bins  \n",
       "431673           0  \n",
       "431674           0  \n",
       "431675           0  \n",
       "431676           0  \n",
       "431677           0  \n",
       "...            ...  \n",
       "516364           0  \n",
       "516365           0  \n",
       "516366           0  \n",
       "516367           0  \n",
       "516368           0  \n",
       "\n",
       "[83498 rows x 10 columns]"
      ]
     },
     "execution_count": 209,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "og_nov2011 = df_list_month_intervals[11]\n",
    "og_nov2011"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {
    "colab": {
     "base_uri": "https://localhost:8080/"
    },
    "id": "s4fDVRIeZySc",
    "outputId": "afad241e-20b1-4915-c29b-c644a32f87d3"
   },
   "outputs": [
    {
     "data": {
      "text/html": [
       "\n",
       "  <div id=\"df-c041de23-e6cf-42a1-9814-b951155176db\">\n",
       "    <div class=\"colab-df-container\">\n",
       "      <div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>No. of visits</th>\n",
       "      <th>Mean_purch</th>\n",
       "      <th>Sum_purch</th>\n",
       "      <th>Item_count</th>\n",
       "      <th>Total_quantity</th>\n",
       "      <th>Avg_quant</th>\n",
       "      <th>CustomerID</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>1</td>\n",
       "      <td>24.076027</td>\n",
       "      <td>1757.55</td>\n",
       "      <td>73</td>\n",
       "      <td>631</td>\n",
       "      <td>8.643836</td>\n",
       "      <td>3</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>1</td>\n",
       "      <td>20.782000</td>\n",
       "      <td>311.73</td>\n",
       "      <td>15</td>\n",
       "      <td>127</td>\n",
       "      <td>8.466667</td>\n",
       "      <td>5</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>1</td>\n",
       "      <td>29.175000</td>\n",
       "      <td>58.35</td>\n",
       "      <td>2</td>\n",
       "      <td>5</td>\n",
       "      <td>2.500000</td>\n",
       "      <td>9</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>1</td>\n",
       "      <td>47.386794</td>\n",
       "      <td>6207.67</td>\n",
       "      <td>131</td>\n",
       "      <td>2708</td>\n",
       "      <td>20.671756</td>\n",
       "      <td>10</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>1</td>\n",
       "      <td>29.871250</td>\n",
       "      <td>477.94</td>\n",
       "      <td>16</td>\n",
       "      <td>210</td>\n",
       "      <td>13.125000</td>\n",
       "      <td>15</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>...</th>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1661</th>\n",
       "      <td>1</td>\n",
       "      <td>25.110000</td>\n",
       "      <td>401.76</td>\n",
       "      <td>16</td>\n",
       "      <td>420</td>\n",
       "      <td>26.250000</td>\n",
       "      <td>4323</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1662</th>\n",
       "      <td>1</td>\n",
       "      <td>28.533333</td>\n",
       "      <td>171.20</td>\n",
       "      <td>6</td>\n",
       "      <td>60</td>\n",
       "      <td>10.000000</td>\n",
       "      <td>4327</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1663</th>\n",
       "      <td>1</td>\n",
       "      <td>15.992727</td>\n",
       "      <td>175.92</td>\n",
       "      <td>11</td>\n",
       "      <td>88</td>\n",
       "      <td>8.000000</td>\n",
       "      <td>4330</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1664</th>\n",
       "      <td>4</td>\n",
       "      <td>2.975160</td>\n",
       "      <td>651.56</td>\n",
       "      <td>115</td>\n",
       "      <td>450</td>\n",
       "      <td>2.054795</td>\n",
       "      <td>4337</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1665</th>\n",
       "      <td>226</td>\n",
       "      <td>18.344270</td>\n",
       "      <td>347678.95</td>\n",
       "      <td>2276</td>\n",
       "      <td>89710</td>\n",
       "      <td>4.733288</td>\n",
       "      <td>4339</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "<p>1666 rows × 7 columns</p>\n",
       "</div>\n",
       "      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-c041de23-e6cf-42a1-9814-b951155176db')\"\n",
       "              title=\"Convert this dataframe to an interactive table.\"\n",
       "              style=\"display:none;\">\n",
       "        \n",
       "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
       "       width=\"24px\">\n",
       "    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n",
       "    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n",
       "  </svg>\n",
       "      </button>\n",
       "      \n",
       "  <style>\n",
       "    .colab-df-container {\n",
       "      display:flex;\n",
       "      flex-wrap:wrap;\n",
       "      gap: 12px;\n",
       "    }\n",
       "\n",
       "    .colab-df-convert {\n",
       "      background-color: #E8F0FE;\n",
       "      border: none;\n",
       "      border-radius: 50%;\n",
       "      cursor: pointer;\n",
       "      display: none;\n",
       "      fill: #1967D2;\n",
       "      height: 32px;\n",
       "      padding: 0 0 0 0;\n",
       "      width: 32px;\n",
       "    }\n",
       "\n",
       "    .colab-df-convert:hover {\n",
       "      background-color: #E2EBFA;\n",
       "      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
       "      fill: #174EA6;\n",
       "    }\n",
       "\n",
       "    [theme=dark] .colab-df-convert {\n",
       "      background-color: #3B4455;\n",
       "      fill: #D2E3FC;\n",
       "    }\n",
       "\n",
       "    [theme=dark] .colab-df-convert:hover {\n",
       "      background-color: #434B5C;\n",
       "      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
       "      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
       "      fill: #FFFFFF;\n",
       "    }\n",
       "  </style>\n",
       "\n",
       "      <script>\n",
       "        const buttonEl =\n",
       "          document.querySelector('#df-c041de23-e6cf-42a1-9814-b951155176db button.colab-df-convert');\n",
       "        buttonEl.style.display =\n",
       "          google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
       "\n",
       "        async function convertToInteractive(key) {\n",
       "          const element = document.querySelector('#df-c041de23-e6cf-42a1-9814-b951155176db');\n",
       "          const dataTable =\n",
       "            await google.colab.kernel.invokeFunction('convertToInteractive',\n",
       "                                                     [key], {});\n",
       "          if (!dataTable) return;\n",
       "\n",
       "          const docLinkHtml = 'Like what you see? Visit the ' +\n",
       "            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n",
       "            + ' to learn more about interactive tables.';\n",
       "          element.innerHTML = '';\n",
       "          dataTable['output_type'] = 'display_data';\n",
       "          await google.colab.output.renderOutput(dataTable, element);\n",
       "          const docLink = document.createElement('div');\n",
       "          docLink.innerHTML = docLinkHtml;\n",
       "          element.appendChild(docLink);\n",
       "        }\n",
       "      </script>\n",
       "    </div>\n",
       "  </div>\n",
       "  "
      ],
      "text/plain": [
       "      No. of visits  Mean_purch  Sum_purch  Item_count  Total_quantity  \\\n",
       "0                 1   24.076027    1757.55          73             631   \n",
       "1                 1   20.782000     311.73          15             127   \n",
       "2                 1   29.175000      58.35           2               5   \n",
       "3                 1   47.386794    6207.67         131            2708   \n",
       "4                 1   29.871250     477.94          16             210   \n",
       "...             ...         ...        ...         ...             ...   \n",
       "1661              1   25.110000     401.76          16             420   \n",
       "1662              1   28.533333     171.20           6              60   \n",
       "1663              1   15.992727     175.92          11              88   \n",
       "1664              4    2.975160     651.56         115             450   \n",
       "1665            226   18.344270  347678.95        2276           89710   \n",
       "\n",
       "      Avg_quant  CustomerID  \n",
       "0      8.643836           3  \n",
       "1      8.466667           5  \n",
       "2      2.500000           9  \n",
       "3     20.671756          10  \n",
       "4     13.125000          15  \n",
       "...         ...         ...  \n",
       "1661  26.250000        4323  \n",
       "1662  10.000000        4327  \n",
       "1663   8.000000        4330  \n",
       "1664   2.054795        4337  \n",
       "1665   4.733288        4339  \n",
       "\n",
       "[1666 rows x 7 columns]"
      ]
     },
     "execution_count": 210,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "dvt_nov2011= person_df(og_nov2011) #Our function gives such a dataframe\n",
    "#By which we can form clusters using KMeans\n",
    "dvt_nov2011"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {
    "colab": {
     "base_uri": "https://localhost:8080/"
    },
    "id": "VKAZvrTZZ2Kj",
    "outputId": "6b2b0ab8-b617-4fcf-ab3e-5240354f0dda"
   },
   "outputs": [
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "/usr/local/lib/python3.9/dist-packages/sklearn/cluster/_kmeans.py:870: FutureWarning: The default value of `n_init` will change from 10 to 'auto' in 1.4. Set the value of `n_init` explicitly to suppress the warning\n",
      "  warnings.warn(\n"
     ]
    },
    {
     "data": {
      "text/html": [
       "\n",
       "  <div id=\"df-28939676-62a9-4213-9a87-903b6250bbb2\">\n",
       "    <div class=\"colab-df-container\">\n",
       "      <div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>No. of visits</th>\n",
       "      <th>Mean_purch</th>\n",
       "      <th>Sum_purch</th>\n",
       "      <th>Item_count</th>\n",
       "      <th>Total_quantity</th>\n",
       "      <th>Avg_quant</th>\n",
       "      <th>CustomerID</th>\n",
       "      <th>cluster_labels</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>1</td>\n",
       "      <td>24.076027</td>\n",
       "      <td>1757.55</td>\n",
       "      <td>73</td>\n",
       "      <td>631</td>\n",
       "      <td>8.643836</td>\n",
       "      <td>3</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>1</td>\n",
       "      <td>20.782000</td>\n",
       "      <td>311.73</td>\n",
       "      <td>15</td>\n",
       "      <td>127</td>\n",
       "      <td>8.466667</td>\n",
       "      <td>5</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>1</td>\n",
       "      <td>29.175000</td>\n",
       "      <td>58.35</td>\n",
       "      <td>2</td>\n",
       "      <td>5</td>\n",
       "      <td>2.500000</td>\n",
       "      <td>9</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>1</td>\n",
       "      <td>47.386794</td>\n",
       "      <td>6207.67</td>\n",
       "      <td>131</td>\n",
       "      <td>2708</td>\n",
       "      <td>20.671756</td>\n",
       "      <td>10</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>1</td>\n",
       "      <td>29.871250</td>\n",
       "      <td>477.94</td>\n",
       "      <td>16</td>\n",
       "      <td>210</td>\n",
       "      <td>13.125000</td>\n",
       "      <td>15</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>...</th>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1661</th>\n",
       "      <td>1</td>\n",
       "      <td>25.110000</td>\n",
       "      <td>401.76</td>\n",
       "      <td>16</td>\n",
       "      <td>420</td>\n",
       "      <td>26.250000</td>\n",
       "      <td>4323</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1662</th>\n",
       "      <td>1</td>\n",
       "      <td>28.533333</td>\n",
       "      <td>171.20</td>\n",
       "      <td>6</td>\n",
       "      <td>60</td>\n",
       "      <td>10.000000</td>\n",
       "      <td>4327</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1663</th>\n",
       "      <td>1</td>\n",
       "      <td>15.992727</td>\n",
       "      <td>175.92</td>\n",
       "      <td>11</td>\n",
       "      <td>88</td>\n",
       "      <td>8.000000</td>\n",
       "      <td>4330</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1664</th>\n",
       "      <td>4</td>\n",
       "      <td>2.975160</td>\n",
       "      <td>651.56</td>\n",
       "      <td>115</td>\n",
       "      <td>450</td>\n",
       "      <td>2.054795</td>\n",
       "      <td>4337</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1665</th>\n",
       "      <td>226</td>\n",
       "      <td>18.344270</td>\n",
       "      <td>347678.95</td>\n",
       "      <td>2276</td>\n",
       "      <td>89710</td>\n",
       "      <td>4.733288</td>\n",
       "      <td>4339</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "<p>1666 rows × 8 columns</p>\n",
       "</div>\n",
       "      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-28939676-62a9-4213-9a87-903b6250bbb2')\"\n",
       "              title=\"Convert this dataframe to an interactive table.\"\n",
       "              style=\"display:none;\">\n",
       "        \n",
       "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
       "       width=\"24px\">\n",
       "    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n",
       "    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n",
       "  </svg>\n",
       "      </button>\n",
       "      \n",
       "  <style>\n",
       "    .colab-df-container {\n",
       "      display:flex;\n",
       "      flex-wrap:wrap;\n",
       "      gap: 12px;\n",
       "    }\n",
       "\n",
       "    .colab-df-convert {\n",
       "      background-color: #E8F0FE;\n",
       "      border: none;\n",
       "      border-radius: 50%;\n",
       "      cursor: pointer;\n",
       "      display: none;\n",
       "      fill: #1967D2;\n",
       "      height: 32px;\n",
       "      padding: 0 0 0 0;\n",
       "      width: 32px;\n",
       "    }\n",
       "\n",
       "    .colab-df-convert:hover {\n",
       "      background-color: #E2EBFA;\n",
       "      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
       "      fill: #174EA6;\n",
       "    }\n",
       "\n",
       "    [theme=dark] .colab-df-convert {\n",
       "      background-color: #3B4455;\n",
       "      fill: #D2E3FC;\n",
       "    }\n",
       "\n",
       "    [theme=dark] .colab-df-convert:hover {\n",
       "      background-color: #434B5C;\n",
       "      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
       "      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
       "      fill: #FFFFFF;\n",
       "    }\n",
       "  </style>\n",
       "\n",
       "      <script>\n",
       "        const buttonEl =\n",
       "          document.querySelector('#df-28939676-62a9-4213-9a87-903b6250bbb2 button.colab-df-convert');\n",
       "        buttonEl.style.display =\n",
       "          google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
       "\n",
       "        async function convertToInteractive(key) {\n",
       "          const element = document.querySelector('#df-28939676-62a9-4213-9a87-903b6250bbb2');\n",
       "          const dataTable =\n",
       "            await google.colab.kernel.invokeFunction('convertToInteractive',\n",
       "                                                     [key], {});\n",
       "          if (!dataTable) return;\n",
       "\n",
       "          const docLinkHtml = 'Like what you see? Visit the ' +\n",
       "            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n",
       "            + ' to learn more about interactive tables.';\n",
       "          element.innerHTML = '';\n",
       "          dataTable['output_type'] = 'display_data';\n",
       "          await google.colab.output.renderOutput(dataTable, element);\n",
       "          const docLink = document.createElement('div');\n",
       "          docLink.innerHTML = docLinkHtml;\n",
       "          element.appendChild(docLink);\n",
       "        }\n",
       "      </script>\n",
       "    </div>\n",
       "  </div>\n",
       "  "
      ],
      "text/plain": [
       "      No. of visits  Mean_purch  Sum_purch  Item_count  Total_quantity  \\\n",
       "0                 1   24.076027    1757.55          73             631   \n",
       "1                 1   20.782000     311.73          15             127   \n",
       "2                 1   29.175000      58.35           2               5   \n",
       "3                 1   47.386794    6207.67         131            2708   \n",
       "4                 1   29.871250     477.94          16             210   \n",
       "...             ...         ...        ...         ...             ...   \n",
       "1661              1   25.110000     401.76          16             420   \n",
       "1662              1   28.533333     171.20           6              60   \n",
       "1663              1   15.992727     175.92          11              88   \n",
       "1664              4    2.975160     651.56         115             450   \n",
       "1665            226   18.344270  347678.95        2276           89710   \n",
       "\n",
       "      Avg_quant  CustomerID  cluster_labels  \n",
       "0      8.643836           3               0  \n",
       "1      8.466667           5               0  \n",
       "2      2.500000           9               0  \n",
       "3     20.671756          10               0  \n",
       "4     13.125000          15               0  \n",
       "...         ...         ...             ...  \n",
       "1661  26.250000        4323               0  \n",
       "1662  10.000000        4327               0  \n",
       "1663   8.000000        4330               0  \n",
       "1664   2.054795        4337               0  \n",
       "1665   4.733288        4339               1  \n",
       "\n",
       "[1666 rows x 8 columns]"
      ]
     },
     "execution_count": 211,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "df_nov2011 = df_cluster_labels(dvt_nov2011,3)\n",
    "df_nov2011"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {
    "colab": {
     "base_uri": "https://localhost:8080/"
    },
    "id": "3ErOX4c0pT97",
    "outputId": "4f51115f-dee9-42c6-d44d-16b09cbb7414"
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "The Silhouette Score is :- 0.9020918639507166\n"
     ]
    }
   ],
   "source": [
    "silhte_score_nov2011 = silhouette_score(dvt_nov2011, df_nov2011['cluster_labels'])\n",
    "print(\"The Silhouette Score is :- \"+str(silhte_score_nov2011))"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {
    "colab": {
     "base_uri": "https://localhost:8080/"
    },
    "id": "mzL6tHCyZ6Pu",
    "outputId": "8ae04c9f-5de7-4a01-bacc-63a30c8f29f4"
   },
   "outputs": [
    {
     "data": {
      "text/plain": [
       "0    1655\n",
       "2      10\n",
       "1       1\n",
       "Name: cluster_labels, dtype: int64"
      ]
     },
     "execution_count": 213,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "df_nov2011['cluster_labels'].value_counts()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {
    "colab": {
     "base_uri": "https://localhost:8080/"
    },
    "id": "kq3OvoVWZ-ru",
    "outputId": "e9a1ae08-e5bb-4e1f-9c9b-09aa295b5020"
   },
   "outputs": [
    {
     "data": {
      "image/png": "",
      "text/plain": [
       "<Figure size 640x480 with 1 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "plt.scatter(df_nov2011['Mean_purch'], df_nov2011['Sum_purch'], c=df_nov2011['cluster_labels'], cmap='viridis')\n",
    "plt.title(\"For Nov 2011\")\n",
    "plt.xlabel('Mean_purch')\n",
    "plt.ylabel('Sum_purch')\n",
    "plt.show()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {
    "colab": {
     "base_uri": "https://localhost:8080/"
    },
    "id": "vVrHixg4aKo7",
    "outputId": "806da3c1-f7a0-47e3-d709-f93679559407"
   },
   "outputs": [
    {
     "data": {
      "text/html": [
       "\n",
       "  <div id=\"df-6166baf3-58e1-42ce-8646-e697505a0116\">\n",
       "    <div class=\"colab-df-container\">\n",
       "      <div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>No. of visits</th>\n",
       "      <th>Mean_purch</th>\n",
       "      <th>Sum_purch</th>\n",
       "      <th>Item_count</th>\n",
       "      <th>Total_quantity</th>\n",
       "      <th>Avg_quant</th>\n",
       "      <th>CustomerID</th>\n",
       "      <th>cluster_labels</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>1</td>\n",
       "      <td>24.076027</td>\n",
       "      <td>1757.55</td>\n",
       "      <td>73</td>\n",
       "      <td>631</td>\n",
       "      <td>8.643836</td>\n",
       "      <td>3</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>1</td>\n",
       "      <td>20.782000</td>\n",
       "      <td>311.73</td>\n",
       "      <td>15</td>\n",
       "      <td>127</td>\n",
       "      <td>8.466667</td>\n",
       "      <td>5</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>1</td>\n",
       "      <td>29.175000</td>\n",
       "      <td>58.35</td>\n",
       "      <td>2</td>\n",
       "      <td>5</td>\n",
       "      <td>2.500000</td>\n",
       "      <td>9</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>1</td>\n",
       "      <td>47.386794</td>\n",
       "      <td>6207.67</td>\n",
       "      <td>131</td>\n",
       "      <td>2708</td>\n",
       "      <td>20.671756</td>\n",
       "      <td>10</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>1</td>\n",
       "      <td>29.871250</td>\n",
       "      <td>477.94</td>\n",
       "      <td>16</td>\n",
       "      <td>210</td>\n",
       "      <td>13.125000</td>\n",
       "      <td>15</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>...</th>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1660</th>\n",
       "      <td>1</td>\n",
       "      <td>76.457143</td>\n",
       "      <td>1070.40</td>\n",
       "      <td>14</td>\n",
       "      <td>336</td>\n",
       "      <td>24.000000</td>\n",
       "      <td>4319</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1661</th>\n",
       "      <td>1</td>\n",
       "      <td>25.110000</td>\n",
       "      <td>401.76</td>\n",
       "      <td>16</td>\n",
       "      <td>420</td>\n",
       "      <td>26.250000</td>\n",
       "      <td>4323</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1662</th>\n",
       "      <td>1</td>\n",
       "      <td>28.533333</td>\n",
       "      <td>171.20</td>\n",
       "      <td>6</td>\n",
       "      <td>60</td>\n",
       "      <td>10.000000</td>\n",
       "      <td>4327</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1663</th>\n",
       "      <td>1</td>\n",
       "      <td>15.992727</td>\n",
       "      <td>175.92</td>\n",
       "      <td>11</td>\n",
       "      <td>88</td>\n",
       "      <td>8.000000</td>\n",
       "      <td>4330</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1664</th>\n",
       "      <td>4</td>\n",
       "      <td>2.975160</td>\n",
       "      <td>651.56</td>\n",
       "      <td>115</td>\n",
       "      <td>450</td>\n",
       "      <td>2.054795</td>\n",
       "      <td>4337</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "<p>1655 rows × 8 columns</p>\n",
       "</div>\n",
       "      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-6166baf3-58e1-42ce-8646-e697505a0116')\"\n",
       "              title=\"Convert this dataframe to an interactive table.\"\n",
       "              style=\"display:none;\">\n",
       "        \n",
       "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
       "       width=\"24px\">\n",
       "    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n",
       "    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n",
       "  </svg>\n",
       "      </button>\n",
       "      \n",
       "  <style>\n",
       "    .colab-df-container {\n",
       "      display:flex;\n",
       "      flex-wrap:wrap;\n",
       "      gap: 12px;\n",
       "    }\n",
       "\n",
       "    .colab-df-convert {\n",
       "      background-color: #E8F0FE;\n",
       "      border: none;\n",
       "      border-radius: 50%;\n",
       "      cursor: pointer;\n",
       "      display: none;\n",
       "      fill: #1967D2;\n",
       "      height: 32px;\n",
       "      padding: 0 0 0 0;\n",
       "      width: 32px;\n",
       "    }\n",
       "\n",
       "    .colab-df-convert:hover {\n",
       "      background-color: #E2EBFA;\n",
       "      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
       "      fill: #174EA6;\n",
       "    }\n",
       "\n",
       "    [theme=dark] .colab-df-convert {\n",
       "      background-color: #3B4455;\n",
       "      fill: #D2E3FC;\n",
       "    }\n",
       "\n",
       "    [theme=dark] .colab-df-convert:hover {\n",
       "      background-color: #434B5C;\n",
       "      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
       "      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
       "      fill: #FFFFFF;\n",
       "    }\n",
       "  </style>\n",
       "\n",
       "      <script>\n",
       "        const buttonEl =\n",
       "          document.querySelector('#df-6166baf3-58e1-42ce-8646-e697505a0116 button.colab-df-convert');\n",
       "        buttonEl.style.display =\n",
       "          google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
       "\n",
       "        async function convertToInteractive(key) {\n",
       "          const element = document.querySelector('#df-6166baf3-58e1-42ce-8646-e697505a0116');\n",
       "          const dataTable =\n",
       "            await google.colab.kernel.invokeFunction('convertToInteractive',\n",
       "                                                     [key], {});\n",
       "          if (!dataTable) return;\n",
       "\n",
       "          const docLinkHtml = 'Like what you see? Visit the ' +\n",
       "            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n",
       "            + ' to learn more about interactive tables.';\n",
       "          element.innerHTML = '';\n",
       "          dataTable['output_type'] = 'display_data';\n",
       "          await google.colab.output.renderOutput(dataTable, element);\n",
       "          const docLink = document.createElement('div');\n",
       "          docLink.innerHTML = docLinkHtml;\n",
       "          element.appendChild(docLink);\n",
       "        }\n",
       "      </script>\n",
       "    </div>\n",
       "  </div>\n",
       "  "
      ],
      "text/plain": [
       "      No. of visits  Mean_purch  Sum_purch  Item_count  Total_quantity  \\\n",
       "0                 1   24.076027    1757.55          73             631   \n",
       "1                 1   20.782000     311.73          15             127   \n",
       "2                 1   29.175000      58.35           2               5   \n",
       "3                 1   47.386794    6207.67         131            2708   \n",
       "4                 1   29.871250     477.94          16             210   \n",
       "...             ...         ...        ...         ...             ...   \n",
       "1660              1   76.457143    1070.40          14             336   \n",
       "1661              1   25.110000     401.76          16             420   \n",
       "1662              1   28.533333     171.20           6              60   \n",
       "1663              1   15.992727     175.92          11              88   \n",
       "1664              4    2.975160     651.56         115             450   \n",
       "\n",
       "      Avg_quant  CustomerID  cluster_labels  \n",
       "0      8.643836           3               0  \n",
       "1      8.466667           5               0  \n",
       "2      2.500000           9               0  \n",
       "3     20.671756          10               0  \n",
       "4     13.125000          15               0  \n",
       "...         ...         ...             ...  \n",
       "1660  24.000000        4319               0  \n",
       "1661  26.250000        4323               0  \n",
       "1662  10.000000        4327               0  \n",
       "1663   8.000000        4330               0  \n",
       "1664   2.054795        4337               0  \n",
       "\n",
       "[1655 rows x 8 columns]"
      ]
     },
     "execution_count": 215,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "#Thus Clusters 1 and 2 are outliers as they have very few datapoints(Customers)\n",
    "#So we remove them and then applyKMeans again\n",
    "#Thus\n",
    "#Then check for outliers and if required, repeat the process\n",
    "#Below is for outliers:-\n",
    "\n",
    "df_nov2011 = df_nov2011[df_nov2011['cluster_labels']!=1]\n",
    "df_nov2011 = df_nov2011[df_nov2011['cluster_labels']!=2]\n",
    "df_nov2011"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {
    "colab": {
     "base_uri": "https://localhost:8080/"
    },
    "id": "uRDQ6wtdaPbL",
    "outputId": "096bbbf8-1c7e-41df-8c94-d1a1b5e0431a"
   },
   "outputs": [
    {
     "data": {
      "text/plain": [
       "0    1655\n",
       "Name: cluster_labels, dtype: int64"
      ]
     },
     "execution_count": 216,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "df_nov2011['cluster_labels'].value_counts()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {
    "colab": {
     "base_uri": "https://localhost:8080/"
    },
    "id": "DgMuwErKaTwd",
    "outputId": "2dd09b61-4b91-4988-a639-305364638252"
   },
   "outputs": [
    {
     "data": {
      "text/html": [
       "\n",
       "  <div id=\"df-7a83eab6-77a1-41cb-9983-b29851117a45\">\n",
       "    <div class=\"colab-df-container\">\n",
       "      <div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>No. of visits</th>\n",
       "      <th>Mean_purch</th>\n",
       "      <th>Sum_purch</th>\n",
       "      <th>Item_count</th>\n",
       "      <th>Total_quantity</th>\n",
       "      <th>Avg_quant</th>\n",
       "      <th>CustomerID</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>1</td>\n",
       "      <td>24.076027</td>\n",
       "      <td>1757.55</td>\n",
       "      <td>73</td>\n",
       "      <td>631</td>\n",
       "      <td>8.643836</td>\n",
       "      <td>3</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>1</td>\n",
       "      <td>20.782000</td>\n",
       "      <td>311.73</td>\n",
       "      <td>15</td>\n",
       "      <td>127</td>\n",
       "      <td>8.466667</td>\n",
       "      <td>5</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>1</td>\n",
       "      <td>29.175000</td>\n",
       "      <td>58.35</td>\n",
       "      <td>2</td>\n",
       "      <td>5</td>\n",
       "      <td>2.500000</td>\n",
       "      <td>9</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>1</td>\n",
       "      <td>47.386794</td>\n",
       "      <td>6207.67</td>\n",
       "      <td>131</td>\n",
       "      <td>2708</td>\n",
       "      <td>20.671756</td>\n",
       "      <td>10</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>1</td>\n",
       "      <td>29.871250</td>\n",
       "      <td>477.94</td>\n",
       "      <td>16</td>\n",
       "      <td>210</td>\n",
       "      <td>13.125000</td>\n",
       "      <td>15</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>...</th>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1660</th>\n",
       "      <td>1</td>\n",
       "      <td>76.457143</td>\n",
       "      <td>1070.40</td>\n",
       "      <td>14</td>\n",
       "      <td>336</td>\n",
       "      <td>24.000000</td>\n",
       "      <td>4319</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1661</th>\n",
       "      <td>1</td>\n",
       "      <td>25.110000</td>\n",
       "      <td>401.76</td>\n",
       "      <td>16</td>\n",
       "      <td>420</td>\n",
       "      <td>26.250000</td>\n",
       "      <td>4323</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1662</th>\n",
       "      <td>1</td>\n",
       "      <td>28.533333</td>\n",
       "      <td>171.20</td>\n",
       "      <td>6</td>\n",
       "      <td>60</td>\n",
       "      <td>10.000000</td>\n",
       "      <td>4327</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1663</th>\n",
       "      <td>1</td>\n",
       "      <td>15.992727</td>\n",
       "      <td>175.92</td>\n",
       "      <td>11</td>\n",
       "      <td>88</td>\n",
       "      <td>8.000000</td>\n",
       "      <td>4330</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1664</th>\n",
       "      <td>4</td>\n",
       "      <td>2.975160</td>\n",
       "      <td>651.56</td>\n",
       "      <td>115</td>\n",
       "      <td>450</td>\n",
       "      <td>2.054795</td>\n",
       "      <td>4337</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "<p>1655 rows × 7 columns</p>\n",
       "</div>\n",
       "      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-7a83eab6-77a1-41cb-9983-b29851117a45')\"\n",
       "              title=\"Convert this dataframe to an interactive table.\"\n",
       "              style=\"display:none;\">\n",
       "        \n",
       "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
       "       width=\"24px\">\n",
       "    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n",
       "    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n",
       "  </svg>\n",
       "      </button>\n",
       "      \n",
       "  <style>\n",
       "    .colab-df-container {\n",
       "      display:flex;\n",
       "      flex-wrap:wrap;\n",
       "      gap: 12px;\n",
       "    }\n",
       "\n",
       "    .colab-df-convert {\n",
       "      background-color: #E8F0FE;\n",
       "      border: none;\n",
       "      border-radius: 50%;\n",
       "      cursor: pointer;\n",
       "      display: none;\n",
       "      fill: #1967D2;\n",
       "      height: 32px;\n",
       "      padding: 0 0 0 0;\n",
       "      width: 32px;\n",
       "    }\n",
       "\n",
       "    .colab-df-convert:hover {\n",
       "      background-color: #E2EBFA;\n",
       "      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
       "      fill: #174EA6;\n",
       "    }\n",
       "\n",
       "    [theme=dark] .colab-df-convert {\n",
       "      background-color: #3B4455;\n",
       "      fill: #D2E3FC;\n",
       "    }\n",
       "\n",
       "    [theme=dark] .colab-df-convert:hover {\n",
       "      background-color: #434B5C;\n",
       "      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
       "      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
       "      fill: #FFFFFF;\n",
       "    }\n",
       "  </style>\n",
       "\n",
       "      <script>\n",
       "        const buttonEl =\n",
       "          document.querySelector('#df-7a83eab6-77a1-41cb-9983-b29851117a45 button.colab-df-convert');\n",
       "        buttonEl.style.display =\n",
       "          google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
       "\n",
       "        async function convertToInteractive(key) {\n",
       "          const element = document.querySelector('#df-7a83eab6-77a1-41cb-9983-b29851117a45');\n",
       "          const dataTable =\n",
       "            await google.colab.kernel.invokeFunction('convertToInteractive',\n",
       "                                                     [key], {});\n",
       "          if (!dataTable) return;\n",
       "\n",
       "          const docLinkHtml = 'Like what you see? Visit the ' +\n",
       "            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n",
       "            + ' to learn more about interactive tables.';\n",
       "          element.innerHTML = '';\n",
       "          dataTable['output_type'] = 'display_data';\n",
       "          await google.colab.output.renderOutput(dataTable, element);\n",
       "          const docLink = document.createElement('div');\n",
       "          docLink.innerHTML = docLinkHtml;\n",
       "          element.appendChild(docLink);\n",
       "        }\n",
       "      </script>\n",
       "    </div>\n",
       "  </div>\n",
       "  "
      ],
      "text/plain": [
       "      No. of visits  Mean_purch  Sum_purch  Item_count  Total_quantity  \\\n",
       "0                 1   24.076027    1757.55          73             631   \n",
       "1                 1   20.782000     311.73          15             127   \n",
       "2                 1   29.175000      58.35           2               5   \n",
       "3                 1   47.386794    6207.67         131            2708   \n",
       "4                 1   29.871250     477.94          16             210   \n",
       "...             ...         ...        ...         ...             ...   \n",
       "1660              1   76.457143    1070.40          14             336   \n",
       "1661              1   25.110000     401.76          16             420   \n",
       "1662              1   28.533333     171.20           6              60   \n",
       "1663              1   15.992727     175.92          11              88   \n",
       "1664              4    2.975160     651.56         115             450   \n",
       "\n",
       "      Avg_quant  CustomerID  \n",
       "0      8.643836           3  \n",
       "1      8.466667           5  \n",
       "2      2.500000           9  \n",
       "3     20.671756          10  \n",
       "4     13.125000          15  \n",
       "...         ...         ...  \n",
       "1660  24.000000        4319  \n",
       "1661  26.250000        4323  \n",
       "1662  10.000000        4327  \n",
       "1663   8.000000        4330  \n",
       "1664   2.054795        4337  \n",
       "\n",
       "[1655 rows x 7 columns]"
      ]
     },
     "execution_count": 217,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "#Thus the outliers are removed.\n",
    "#Now we again apply the clustering pipeline\n",
    "\n",
    "df_nov2011_person = df_nov2011.copy(deep=True)\n",
    "df_nov2011_person.drop(['cluster_labels'],axis=1,inplace=True)\n",
    "df_nov2011_person\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {
    "colab": {
     "base_uri": "https://localhost:8080/"
    },
    "id": "w6KegUcCaZZI",
    "outputId": "86c16609-2f72-4212-8c95-9b2f128c5e30"
   },
   "outputs": [
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "/usr/local/lib/python3.9/dist-packages/sklearn/cluster/_kmeans.py:870: FutureWarning: The default value of `n_init` will change from 10 to 'auto' in 1.4. Set the value of `n_init` explicitly to suppress the warning\n",
      "  warnings.warn(\n"
     ]
    },
    {
     "data": {
      "text/html": [
       "\n",
       "  <div id=\"df-ea31172c-be7c-489d-bd4e-ce0bff688ff0\">\n",
       "    <div class=\"colab-df-container\">\n",
       "      <div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>No. of visits</th>\n",
       "      <th>Mean_purch</th>\n",
       "      <th>Sum_purch</th>\n",
       "      <th>Item_count</th>\n",
       "      <th>Total_quantity</th>\n",
       "      <th>Avg_quant</th>\n",
       "      <th>CustomerID</th>\n",
       "      <th>cluster_labels</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>1</td>\n",
       "      <td>24.076027</td>\n",
       "      <td>1757.55</td>\n",
       "      <td>73</td>\n",
       "      <td>631</td>\n",
       "      <td>8.643836</td>\n",
       "      <td>3</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>1</td>\n",
       "      <td>20.782000</td>\n",
       "      <td>311.73</td>\n",
       "      <td>15</td>\n",
       "      <td>127</td>\n",
       "      <td>8.466667</td>\n",
       "      <td>5</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>1</td>\n",
       "      <td>29.175000</td>\n",
       "      <td>58.35</td>\n",
       "      <td>2</td>\n",
       "      <td>5</td>\n",
       "      <td>2.500000</td>\n",
       "      <td>9</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>1</td>\n",
       "      <td>47.386794</td>\n",
       "      <td>6207.67</td>\n",
       "      <td>131</td>\n",
       "      <td>2708</td>\n",
       "      <td>20.671756</td>\n",
       "      <td>10</td>\n",
       "      <td>2</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>1</td>\n",
       "      <td>29.871250</td>\n",
       "      <td>477.94</td>\n",
       "      <td>16</td>\n",
       "      <td>210</td>\n",
       "      <td>13.125000</td>\n",
       "      <td>15</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>...</th>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1660</th>\n",
       "      <td>1</td>\n",
       "      <td>76.457143</td>\n",
       "      <td>1070.40</td>\n",
       "      <td>14</td>\n",
       "      <td>336</td>\n",
       "      <td>24.000000</td>\n",
       "      <td>4319</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1661</th>\n",
       "      <td>1</td>\n",
       "      <td>25.110000</td>\n",
       "      <td>401.76</td>\n",
       "      <td>16</td>\n",
       "      <td>420</td>\n",
       "      <td>26.250000</td>\n",
       "      <td>4323</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1662</th>\n",
       "      <td>1</td>\n",
       "      <td>28.533333</td>\n",
       "      <td>171.20</td>\n",
       "      <td>6</td>\n",
       "      <td>60</td>\n",
       "      <td>10.000000</td>\n",
       "      <td>4327</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1663</th>\n",
       "      <td>1</td>\n",
       "      <td>15.992727</td>\n",
       "      <td>175.92</td>\n",
       "      <td>11</td>\n",
       "      <td>88</td>\n",
       "      <td>8.000000</td>\n",
       "      <td>4330</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1664</th>\n",
       "      <td>4</td>\n",
       "      <td>2.975160</td>\n",
       "      <td>651.56</td>\n",
       "      <td>115</td>\n",
       "      <td>450</td>\n",
       "      <td>2.054795</td>\n",
       "      <td>4337</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "<p>1655 rows × 8 columns</p>\n",
       "</div>\n",
       "      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-ea31172c-be7c-489d-bd4e-ce0bff688ff0')\"\n",
       "              title=\"Convert this dataframe to an interactive table.\"\n",
       "              style=\"display:none;\">\n",
       "        \n",
       "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
       "       width=\"24px\">\n",
       "    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n",
       "    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n",
       "  </svg>\n",
       "      </button>\n",
       "      \n",
       "  <style>\n",
       "    .colab-df-container {\n",
       "      display:flex;\n",
       "      flex-wrap:wrap;\n",
       "      gap: 12px;\n",
       "    }\n",
       "\n",
       "    .colab-df-convert {\n",
       "      background-color: #E8F0FE;\n",
       "      border: none;\n",
       "      border-radius: 50%;\n",
       "      cursor: pointer;\n",
       "      display: none;\n",
       "      fill: #1967D2;\n",
       "      height: 32px;\n",
       "      padding: 0 0 0 0;\n",
       "      width: 32px;\n",
       "    }\n",
       "\n",
       "    .colab-df-convert:hover {\n",
       "      background-color: #E2EBFA;\n",
       "      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
       "      fill: #174EA6;\n",
       "    }\n",
       "\n",
       "    [theme=dark] .colab-df-convert {\n",
       "      background-color: #3B4455;\n",
       "      fill: #D2E3FC;\n",
       "    }\n",
       "\n",
       "    [theme=dark] .colab-df-convert:hover {\n",
       "      background-color: #434B5C;\n",
       "      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
       "      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
       "      fill: #FFFFFF;\n",
       "    }\n",
       "  </style>\n",
       "\n",
       "      <script>\n",
       "        const buttonEl =\n",
       "          document.querySelector('#df-ea31172c-be7c-489d-bd4e-ce0bff688ff0 button.colab-df-convert');\n",
       "        buttonEl.style.display =\n",
       "          google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
       "\n",
       "        async function convertToInteractive(key) {\n",
       "          const element = document.querySelector('#df-ea31172c-be7c-489d-bd4e-ce0bff688ff0');\n",
       "          const dataTable =\n",
       "            await google.colab.kernel.invokeFunction('convertToInteractive',\n",
       "                                                     [key], {});\n",
       "          if (!dataTable) return;\n",
       "\n",
       "          const docLinkHtml = 'Like what you see? Visit the ' +\n",
       "            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n",
       "            + ' to learn more about interactive tables.';\n",
       "          element.innerHTML = '';\n",
       "          dataTable['output_type'] = 'display_data';\n",
       "          await google.colab.output.renderOutput(dataTable, element);\n",
       "          const docLink = document.createElement('div');\n",
       "          docLink.innerHTML = docLinkHtml;\n",
       "          element.appendChild(docLink);\n",
       "        }\n",
       "      </script>\n",
       "    </div>\n",
       "  </div>\n",
       "  "
      ],
      "text/plain": [
       "      No. of visits  Mean_purch  Sum_purch  Item_count  Total_quantity  \\\n",
       "0                 1   24.076027    1757.55          73             631   \n",
       "1                 1   20.782000     311.73          15             127   \n",
       "2                 1   29.175000      58.35           2               5   \n",
       "3                 1   47.386794    6207.67         131            2708   \n",
       "4                 1   29.871250     477.94          16             210   \n",
       "...             ...         ...        ...         ...             ...   \n",
       "1660              1   76.457143    1070.40          14             336   \n",
       "1661              1   25.110000     401.76          16             420   \n",
       "1662              1   28.533333     171.20           6              60   \n",
       "1663              1   15.992727     175.92          11              88   \n",
       "1664              4    2.975160     651.56         115             450   \n",
       "\n",
       "      Avg_quant  CustomerID  cluster_labels  \n",
       "0      8.643836           3               1  \n",
       "1      8.466667           5               1  \n",
       "2      2.500000           9               1  \n",
       "3     20.671756          10               2  \n",
       "4     13.125000          15               1  \n",
       "...         ...         ...             ...  \n",
       "1660  24.000000        4319               0  \n",
       "1661  26.250000        4323               0  \n",
       "1662  10.000000        4327               0  \n",
       "1663   8.000000        4330               0  \n",
       "1664   2.054795        4337               0  \n",
       "\n",
       "[1655 rows x 8 columns]"
      ]
     },
     "execution_count": 218,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "df_nov2011_new = df_cluster_labels(df_nov2011_person,3)\n",
    "df_nov2011_new"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {
    "colab": {
     "base_uri": "https://localhost:8080/"
    },
    "id": "LNI-KbsLpZGm",
    "outputId": "856c86e4-82f6-476f-dde6-1de713dcc9e0"
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "The Silhouette Score is :- 0.5272193764190273\n"
     ]
    }
   ],
   "source": [
    "silhte_score_nov2011_new = silhouette_score(df_nov2011_person, df_nov2011_new['cluster_labels'])\n",
    "print(\"The Silhouette Score is :- \"+str(silhte_score_nov2011_new))\n",
    "#Indicates that silhouette score is realistic for dataset without outliers"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {
    "colab": {
     "base_uri": "https://localhost:8080/"
    },
    "id": "0PfxqZO-ad7X",
    "outputId": "89321a82-7c00-418b-cb17-5614cc0339ea"
   },
   "outputs": [
    {
     "data": {
      "text/plain": [
       "0    815\n",
       "1    811\n",
       "2     29\n",
       "Name: cluster_labels, dtype: int64"
      ]
     },
     "execution_count": 220,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "df_nov2011_new['cluster_labels'].value_counts()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {
    "colab": {
     "base_uri": "https://localhost:8080/"
    },
    "id": "2ZL1SA-MahQL",
    "outputId": "86260754-4ee4-4b48-ac33-880c01bf5674"
   },
   "outputs": [
    {
     "data": {
      "image/png": "",
      "text/plain": [
       "<Figure size 640x480 with 1 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "#These are comparatively good clusters\n",
    "\n",
    "plt.scatter(df_nov2011_new['Mean_purch'], df_nov2011_new['Sum_purch'], c=df_nov2011_new['cluster_labels'], cmap='viridis')\n",
    "plt.title(\"For Nov 2011 (After removing outliers)\")\n",
    "plt.xlabel('Mean_purch')\n",
    "plt.ylabel('Sum_purch')\n",
    "plt.show()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {
    "id": "lCgof6Kkap-W"
   },
   "outputs": [],
   "source": [
    "nov2011 = descrip_dict(og_dec2010,df_dec2010_new)\n",
    "nov2011 = processlis(nov2011)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {
    "colab": {
     "base_uri": "https://localhost:8080/"
    },
    "id": "MAqc4VmBauDW",
    "outputId": "4261d75f-d6e5-427b-e172-5c149d1b300c"
   },
   "outputs": [
    {
     "data": {
      "text/plain": [
       "[     CustomerID                                        Description\n",
       " 0             1  [BLACK CANDELABRA T-LIGHT HOLDER, AIRLINE BAG ...\n",
       " 1             2  [72 SWEETHEART FAIRY CAKE CASES, 60 CAKE CASES...\n",
       " 2            20  [WHITE HANGING HEART T-LIGHT HOLDER, SPACE CAD...\n",
       " 3            26  [HOT WATER BOTTLE BABUSHKA LARGE, CHOCOLATE HO...\n",
       " 4            31  [SET/10 RED POLKADOT PARTY CANDLES, SET/10 PIN...\n",
       " ..          ...                                                ...\n",
       " 398        2226  [JAM MAKING SET WITH JARS, JAM MAKING SET PRIN...\n",
       " 399        2227                       [HAND OPEN SHAPE DECO.WHITE]\n",
       " 400        2230  [SKULL DESIGN TV DINNER TRAY, TV DINNER TRAY D...\n",
       " 401        2235  [DANISH ROSE ROUND SEWING BOX, 3 STRIPEY MICE ...\n",
       " 402        2237  [DOLLY GIRL LUNCH BOX, SPACEBOY LUNCH BOX , LU...\n",
       " \n",
       " [403 rows x 2 columns],\n",
       "      CustomerID                                        Description\n",
       " 0          2261  [CHOCOLATE HOT WATER BOTTLE, PAPER CHAIN KIT V...\n",
       " 1          2283  [RETROSPOT HEART HOT WATER BOTTLE, CHOCOLATE H...\n",
       " 2          2284  [TOOTHPASTE TUBE PEN, LIPSTICK PEN RED, CHOCOL...\n",
       " 3          2287  [BOUDOIR SQUARE TISSUE BOX, RECIPE BOX RETROSP...\n",
       " 4          2291  [DOORMAT FANCY FONT HOME SWEET HOME, DOORMAT S...\n",
       " ..          ...                                                ...\n",
       " 440        4306  [WHITE HANGING HEART T-LIGHT HOLDER, HANGING H...\n",
       " 441        4310  [VINTAGE PAISLEY STATIONERY SET, COLOURING PEN...\n",
       " 442        4319  [WICKER STAR , HEART OF WICKER LARGE, HAND WAR...\n",
       " 443        4320  [CHILLI LIGHTS, MEASURING TAPE BABUSHKA PINK, ...\n",
       " 444        4326  [HOT WATER BOTTLE BABUSHKA , RED TOADSTOOL LED...\n",
       " \n",
       " [445 rows x 2 columns]]"
      ]
     },
     "execution_count": 223,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "nov2011"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {
    "colab": {
     "base_uri": "https://localhost:8080/"
    },
    "id": "1jcMnpcwPfIa",
    "outputId": "56fbb520-71a8-459d-b24b-96e8695b55aa"
   },
   "outputs": [
    {
     "data": {
      "image/png": "",
      "text/plain": [
       "<Figure size 640x480 with 1 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "data": {
      "image/png": "",
      "text/plain": [
       "<Figure size 500x500 with 1 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "(1647, 4)\n",
      "(1, 4)\n",
      "(18, 4)\n"
     ]
    },
    {
     "data": {
      "image/png": "",
      "text/plain": [
       "<Figure size 640x480 with 1 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "data": {
      "image/png": "",
      "text/plain": [
       "<Figure size 500x500 with 1 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "(879, 5)\n",
      "(620, 5)\n",
      "(148, 5)\n"
     ]
    },
    {
     "data": {
      "text/plain": [
       "[     CustomerID                                        Description\n",
       " 0             3  [PARISIENNE CURIO CABINET, SWEETHEART WALL TID...\n",
       " 1            10  [PINK DOUGHNUT TRINKET POT , STRAWBERRY CERAMI...\n",
       " 2            47  [SET OF 3 CAKE TINS SKETCHBOOK, TEA BAG PLATE ...\n",
       " 3            55  [BISCUIT TIN 50'S CHRISTMAS, SET OF 6 NATIVITY...\n",
       " 4            71  [VINTAGE DOILY TRAVEL SEWING KIT, TRADITIONAL ...\n",
       " ..          ...                                                ...\n",
       " 143        3471  [WALL ART VILLAGE SHOW , VINTAGE SHELLS PRINT,...\n",
       " 144        3563  [KEY RING BASEBALL BOOT ASSORTED , ROLL WRAP 5...\n",
       " 145        3609  [REGENCY CAKESTAND 3 TIER, T-LIGHT GLASS FLUTE...\n",
       " 146        3619  [REGENCY SUGAR BOWL GREEN, IVORY WICKER HEART ...\n",
       " 147        3863  [BOX OF 6 CHRISTMAS CAKE DECORATIONS, ASSORTED...\n",
       " \n",
       " [148 rows x 2 columns],\n",
       "      CustomerID                                        Description\n",
       " 0             5  [PETIT TRAY CHIC, PANTRY ROLLING PIN, PANTRY P...\n",
       " 1             9  [REGENCY CAKESTAND 3 TIER, RED RETROSPOT CAKE ...\n",
       " 2            15  [SET 2 TEA TOWELS I LOVE LONDON , LONDON BUS C...\n",
       " 3            24  [GRAND CHOCOLATECANDLE, S/4 CACTI CANDLES, REG...\n",
       " 4            25  [JUMBO BAG WOODLAND ANIMALS, JUMBO BAG PEARS, ...\n",
       " ..          ...                                                ...\n",
       " 874        2692  [HOT WATER BOTTLE KEEP CALM, LOVE HOT WATER BO...\n",
       " 875        2706  [WASHROOM METAL SIGN, NATURAL SLATE HEART CHAL...\n",
       " 876        2713  [VINTAGE HEADS AND TAILS CARD GAME , FELTCRAFT...\n",
       " 877        2724  [WHITE HANGING HEART T-LIGHT HOLDER, JUMBO BAG...\n",
       " 878        2797  [HOME SWEET HOME BLACKBOARD, GLASS BON BON JAR...\n",
       " \n",
       " [879 rows x 2 columns],\n",
       "      CustomerID                                        Description\n",
       " 0          2511  [RETROSPOT HEART HOT WATER BOTTLE, CHOCOLATE H...\n",
       " 1          2548  [CLASSIC CHROME BICYCLE BELL , RABBIT NIGHT LI...\n",
       " 2          2577  [HANGING HEART JAR T-LIGHT HOLDER, ASSORTED CO...\n",
       " 3          2578  [NATURAL SLATE HEART CHALKBOARD , WOOD BLACK B...\n",
       " 4          2586  [PORCELAIN BUDAH INCENSE HOLDER, PINK HORSE SO...\n",
       " ..          ...                                                ...\n",
       " 615        4261  [STRAWBERRY FAIRY CAKE TEAPOT, WOODEN ADVENT C...\n",
       " 616        4263                        [ASSORTED COLOURS SILK FAN]\n",
       " 617        4265  [SET OF 20 VINTAGE CHRISTMAS NAPKINS, HOT WATE...\n",
       " 618        4273  [SMALL WHITE HEART OF WICKER, COLOUR GLASS T-L...\n",
       " 619        4278  [SET 6 SCHOOL MILK BOTTLES IN CRATE, HOME SWEE...\n",
       " \n",
       " [620 rows x 2 columns]]"
      ]
     },
     "execution_count": 224,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "\n",
    "pca = PCA(n_components = 3)\n",
    "pca.fit(X = dvt_nov2011)\n",
    "new_dvt = pca.transform(dvt_nov2011)\n",
    "\n",
    "new_dvt = pd.DataFrame(data = new_dvt,columns = ['X0','X1','X2'])\n",
    "model = AgglomerativeClustering(distance_threshold=0, n_clusters=None, linkage='ward').fit(new_dvt)\n",
    "\n",
    "plot_dendrogram(model, truncate_mode=\"level\", p=4)\n",
    "\n",
    "dict_nov2011 =  Agglocls(new_dvt,3)\n",
    "\n",
    "final_dvt_nov2011 = dict_nov2011[0]\n",
    "pca_nov2011 = PCA(n_components = 3)\n",
    "pca_nov2011.fit(X = final_dvt_nov2011)\n",
    "final_dvt_nov2011 = pca_nov2011.transform(final_dvt_nov2011)\n",
    "final_dvt_nov2011 = pd.DataFrame(data = final_dvt_nov2011,columns = ['X0','X1','X2'])\n",
    "AggloDendo(final_dvt_nov2011)\n",
    "\n",
    "dict_nov2011_final =  AggloPca(final_dvt_nov2011,3,dvt_nov2011,'X1','X0')\n",
    "\n",
    "nov2011_agg = descrip_dict(og_nov2011,final_dvt_nov2011)\n",
    "nov2011_agg = processlis(nov2011_agg)\n",
    "nov2011_agg\n",
    "\n",
    "\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {
    "id": "9_84YVv3yB8p"
   },
   "outputs": [],
   "source": [
    "Cluster_dict['nov2011'] = (len(nov2011),len(nov2011_agg))\n",
    "dicti_2011nov = {}\n",
    "klis = []\n",
    "for i in range(Cluster_dict['nov2011'][0]):\n",
    "  temp = apriori_rules(nov2011[i],0.075)\n",
    "  klis.append(temp)\n",
    "alis = []\n",
    "for i in range(Cluster_dict['nov2011'][1]):\n",
    "  temp = apriori_rules(nov2011_agg[i],0.075)\n",
    "  alis.append(temp)\n",
    "#apriori_rules(1_agg[0],0.075)\n",
    "dicti_2011nov['K-means'] = klis\n",
    "dicti_2011nov['Agglo'] = alis\n",
    "\n",
    "Rules_dict['nov2011'] = dicti_2011nov"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {
    "id": "9L1z5ABZaxVp"
   },
   "source": [
    "## Dec 2011"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {
    "colab": {
     "base_uri": "https://localhost:8080/"
    },
    "id": "oGTDCQg2aw4x",
    "outputId": "0909174d-4b3a-425b-bdc5-a260e305d87a"
   },
   "outputs": [
    {
     "data": {
      "text/html": [
       "\n",
       "  <div id=\"df-c0d655f2-aef3-46ed-b2f7-69c37032cb35\">\n",
       "    <div class=\"colab-df-container\">\n",
       "      <div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>InvoiceNo</th>\n",
       "      <th>StockCode</th>\n",
       "      <th>Description</th>\n",
       "      <th>Quantity</th>\n",
       "      <th>UnitPrice</th>\n",
       "      <th>CustomerID</th>\n",
       "      <th>Country</th>\n",
       "      <th>time_intervals</th>\n",
       "      <th>Total Price</th>\n",
       "      <th>Money_bins</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>516403</th>\n",
       "      <td>579899</td>\n",
       "      <td>23301</td>\n",
       "      <td>GARDENERS KNEELING PAD KEEP CALM</td>\n",
       "      <td>24</td>\n",
       "      <td>1.65</td>\n",
       "      <td>2457</td>\n",
       "      <td>United Kingdom</td>\n",
       "      <td>04:00-07:59</td>\n",
       "      <td>39.60</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>516404</th>\n",
       "      <td>579899</td>\n",
       "      <td>22623</td>\n",
       "      <td>BOX OF VINTAGE JIGSAW BLOCKS</td>\n",
       "      <td>3</td>\n",
       "      <td>5.95</td>\n",
       "      <td>2457</td>\n",
       "      <td>United Kingdom</td>\n",
       "      <td>04:00-07:59</td>\n",
       "      <td>17.85</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>516405</th>\n",
       "      <td>579899</td>\n",
       "      <td>20970</td>\n",
       "      <td>PINK FLORAL FELTCRAFT SHOULDER BAG</td>\n",
       "      <td>4</td>\n",
       "      <td>3.75</td>\n",
       "      <td>2457</td>\n",
       "      <td>United Kingdom</td>\n",
       "      <td>04:00-07:59</td>\n",
       "      <td>15.00</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>516406</th>\n",
       "      <td>579899</td>\n",
       "      <td>23562</td>\n",
       "      <td>SET OF 6 RIBBONS PERFECTLY PRETTY</td>\n",
       "      <td>6</td>\n",
       "      <td>2.89</td>\n",
       "      <td>2457</td>\n",
       "      <td>United Kingdom</td>\n",
       "      <td>04:00-07:59</td>\n",
       "      <td>17.34</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>516407</th>\n",
       "      <td>579899</td>\n",
       "      <td>71477</td>\n",
       "      <td>COLOURED GLASS STAR T-LIGHT HOLDER</td>\n",
       "      <td>4</td>\n",
       "      <td>3.95</td>\n",
       "      <td>2457</td>\n",
       "      <td>United Kingdom</td>\n",
       "      <td>04:00-07:59</td>\n",
       "      <td>15.80</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>...</th>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>541904</th>\n",
       "      <td>581587</td>\n",
       "      <td>22613</td>\n",
       "      <td>PACK OF 20 SPACEBOY NAPKINS</td>\n",
       "      <td>12</td>\n",
       "      <td>0.85</td>\n",
       "      <td>271</td>\n",
       "      <td>France</td>\n",
       "      <td>08:00-11:59</td>\n",
       "      <td>10.20</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>541905</th>\n",
       "      <td>581587</td>\n",
       "      <td>22899</td>\n",
       "      <td>CHILDREN'S APRON DOLLY GIRL</td>\n",
       "      <td>6</td>\n",
       "      <td>2.10</td>\n",
       "      <td>271</td>\n",
       "      <td>France</td>\n",
       "      <td>08:00-11:59</td>\n",
       "      <td>12.60</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>541906</th>\n",
       "      <td>581587</td>\n",
       "      <td>23254</td>\n",
       "      <td>CHILDRENS CUTLERY DOLLY GIRL</td>\n",
       "      <td>4</td>\n",
       "      <td>4.15</td>\n",
       "      <td>271</td>\n",
       "      <td>France</td>\n",
       "      <td>08:00-11:59</td>\n",
       "      <td>16.60</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>541907</th>\n",
       "      <td>581587</td>\n",
       "      <td>23255</td>\n",
       "      <td>CHILDRENS CUTLERY CIRCUS PARADE</td>\n",
       "      <td>4</td>\n",
       "      <td>4.15</td>\n",
       "      <td>271</td>\n",
       "      <td>France</td>\n",
       "      <td>08:00-11:59</td>\n",
       "      <td>16.60</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>541908</th>\n",
       "      <td>581587</td>\n",
       "      <td>22138</td>\n",
       "      <td>BAKING SET 9 PIECE RETROSPOT</td>\n",
       "      <td>3</td>\n",
       "      <td>4.95</td>\n",
       "      <td>271</td>\n",
       "      <td>France</td>\n",
       "      <td>08:00-11:59</td>\n",
       "      <td>14.85</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "<p>25135 rows × 10 columns</p>\n",
       "</div>\n",
       "      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-c0d655f2-aef3-46ed-b2f7-69c37032cb35')\"\n",
       "              title=\"Convert this dataframe to an interactive table.\"\n",
       "              style=\"display:none;\">\n",
       "        \n",
       "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
       "       width=\"24px\">\n",
       "    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n",
       "    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n",
       "  </svg>\n",
       "      </button>\n",
       "      \n",
       "  <style>\n",
       "    .colab-df-container {\n",
       "      display:flex;\n",
       "      flex-wrap:wrap;\n",
       "      gap: 12px;\n",
       "    }\n",
       "\n",
       "    .colab-df-convert {\n",
       "      background-color: #E8F0FE;\n",
       "      border: none;\n",
       "      border-radius: 50%;\n",
       "      cursor: pointer;\n",
       "      display: none;\n",
       "      fill: #1967D2;\n",
       "      height: 32px;\n",
       "      padding: 0 0 0 0;\n",
       "      width: 32px;\n",
       "    }\n",
       "\n",
       "    .colab-df-convert:hover {\n",
       "      background-color: #E2EBFA;\n",
       "      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
       "      fill: #174EA6;\n",
       "    }\n",
       "\n",
       "    [theme=dark] .colab-df-convert {\n",
       "      background-color: #3B4455;\n",
       "      fill: #D2E3FC;\n",
       "    }\n",
       "\n",
       "    [theme=dark] .colab-df-convert:hover {\n",
       "      background-color: #434B5C;\n",
       "      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
       "      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
       "      fill: #FFFFFF;\n",
       "    }\n",
       "  </style>\n",
       "\n",
       "      <script>\n",
       "        const buttonEl =\n",
       "          document.querySelector('#df-c0d655f2-aef3-46ed-b2f7-69c37032cb35 button.colab-df-convert');\n",
       "        buttonEl.style.display =\n",
       "          google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
       "\n",
       "        async function convertToInteractive(key) {\n",
       "          const element = document.querySelector('#df-c0d655f2-aef3-46ed-b2f7-69c37032cb35');\n",
       "          const dataTable =\n",
       "            await google.colab.kernel.invokeFunction('convertToInteractive',\n",
       "                                                     [key], {});\n",
       "          if (!dataTable) return;\n",
       "\n",
       "          const docLinkHtml = 'Like what you see? Visit the ' +\n",
       "            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n",
       "            + ' to learn more about interactive tables.';\n",
       "          element.innerHTML = '';\n",
       "          dataTable['output_type'] = 'display_data';\n",
       "          await google.colab.output.renderOutput(dataTable, element);\n",
       "          const docLink = document.createElement('div');\n",
       "          docLink.innerHTML = docLinkHtml;\n",
       "          element.appendChild(docLink);\n",
       "        }\n",
       "      </script>\n",
       "    </div>\n",
       "  </div>\n",
       "  "
      ],
      "text/plain": [
       "       InvoiceNo StockCode                          Description  Quantity  \\\n",
       "516403    579899     23301    GARDENERS KNEELING PAD KEEP CALM         24   \n",
       "516404    579899     22623        BOX OF VINTAGE JIGSAW BLOCKS          3   \n",
       "516405    579899     20970   PINK FLORAL FELTCRAFT SHOULDER BAG         4   \n",
       "516406    579899     23562  SET OF 6 RIBBONS PERFECTLY PRETTY           6   \n",
       "516407    579899     71477   COLOURED GLASS STAR T-LIGHT HOLDER         4   \n",
       "...          ...       ...                                  ...       ...   \n",
       "541904    581587     22613          PACK OF 20 SPACEBOY NAPKINS        12   \n",
       "541905    581587     22899         CHILDREN'S APRON DOLLY GIRL          6   \n",
       "541906    581587     23254        CHILDRENS CUTLERY DOLLY GIRL          4   \n",
       "541907    581587     23255      CHILDRENS CUTLERY CIRCUS PARADE         4   \n",
       "541908    581587     22138        BAKING SET 9 PIECE RETROSPOT          3   \n",
       "\n",
       "        UnitPrice  CustomerID         Country time_intervals  Total Price  \\\n",
       "516403       1.65        2457  United Kingdom    04:00-07:59        39.60   \n",
       "516404       5.95        2457  United Kingdom    04:00-07:59        17.85   \n",
       "516405       3.75        2457  United Kingdom    04:00-07:59        15.00   \n",
       "516406       2.89        2457  United Kingdom    04:00-07:59        17.34   \n",
       "516407       3.95        2457  United Kingdom    04:00-07:59        15.80   \n",
       "...           ...         ...             ...            ...          ...   \n",
       "541904       0.85         271          France    08:00-11:59        10.20   \n",
       "541905       2.10         271          France    08:00-11:59        12.60   \n",
       "541906       4.15         271          France    08:00-11:59        16.60   \n",
       "541907       4.15         271          France    08:00-11:59        16.60   \n",
       "541908       4.95         271          France    08:00-11:59        14.85   \n",
       "\n",
       "        Money_bins  \n",
       "516403           0  \n",
       "516404           0  \n",
       "516405           0  \n",
       "516406           0  \n",
       "516407           0  \n",
       "...            ...  \n",
       "541904           0  \n",
       "541905           0  \n",
       "541906           0  \n",
       "541907           0  \n",
       "541908           0  \n",
       "\n",
       "[25135 rows x 10 columns]"
      ]
     },
     "execution_count": 226,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "og_dec2011 = df_list_month_intervals[12]\n",
    "og_dec2011\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {
    "colab": {
     "base_uri": "https://localhost:8080/"
    },
    "id": "q3DmIWaSa_DB",
    "outputId": "faae0662-f391-4f78-e013-c8af12256f8b"
   },
   "outputs": [
    {
     "data": {
      "text/html": [
       "\n",
       "  <div id=\"df-f5279519-2963-4da6-9940-19533f0c65ca\">\n",
       "    <div class=\"colab-df-container\">\n",
       "      <div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>No. of visits</th>\n",
       "      <th>Mean_purch</th>\n",
       "      <th>Sum_purch</th>\n",
       "      <th>Item_count</th>\n",
       "      <th>Total_quantity</th>\n",
       "      <th>Avg_quant</th>\n",
       "      <th>CustomerID</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>1</td>\n",
       "      <td>20.438182</td>\n",
       "      <td>224.82</td>\n",
       "      <td>11</td>\n",
       "      <td>192</td>\n",
       "      <td>17.454545</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>1</td>\n",
       "      <td>97.600000</td>\n",
       "      <td>683.20</td>\n",
       "      <td>7</td>\n",
       "      <td>148</td>\n",
       "      <td>21.142857</td>\n",
       "      <td>11</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>1</td>\n",
       "      <td>17.634667</td>\n",
       "      <td>529.04</td>\n",
       "      <td>30</td>\n",
       "      <td>221</td>\n",
       "      <td>7.366667</td>\n",
       "      <td>15</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>1</td>\n",
       "      <td>11.493333</td>\n",
       "      <td>310.32</td>\n",
       "      <td>27</td>\n",
       "      <td>502</td>\n",
       "      <td>18.592593</td>\n",
       "      <td>17</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>1</td>\n",
       "      <td>15.354545</td>\n",
       "      <td>168.90</td>\n",
       "      <td>11</td>\n",
       "      <td>173</td>\n",
       "      <td>15.727273</td>\n",
       "      <td>19</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>...</th>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>611</th>\n",
       "      <td>1</td>\n",
       "      <td>15.994783</td>\n",
       "      <td>367.88</td>\n",
       "      <td>23</td>\n",
       "      <td>254</td>\n",
       "      <td>11.043478</td>\n",
       "      <td>4328</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>612</th>\n",
       "      <td>1</td>\n",
       "      <td>51.000000</td>\n",
       "      <td>51.00</td>\n",
       "      <td>1</td>\n",
       "      <td>20</td>\n",
       "      <td>20.000000</td>\n",
       "      <td>4329</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>613</th>\n",
       "      <td>1</td>\n",
       "      <td>15.568000</td>\n",
       "      <td>77.84</td>\n",
       "      <td>5</td>\n",
       "      <td>28</td>\n",
       "      <td>5.600000</td>\n",
       "      <td>4336</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>614</th>\n",
       "      <td>1</td>\n",
       "      <td>4.160000</td>\n",
       "      <td>208.00</td>\n",
       "      <td>50</td>\n",
       "      <td>142</td>\n",
       "      <td>2.840000</td>\n",
       "      <td>4337</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>615</th>\n",
       "      <td>61</td>\n",
       "      <td>15.400318</td>\n",
       "      <td>120599.89</td>\n",
       "      <td>1806</td>\n",
       "      <td>27639</td>\n",
       "      <td>3.529434</td>\n",
       "      <td>4339</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "<p>616 rows × 7 columns</p>\n",
       "</div>\n",
       "      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-f5279519-2963-4da6-9940-19533f0c65ca')\"\n",
       "              title=\"Convert this dataframe to an interactive table.\"\n",
       "              style=\"display:none;\">\n",
       "        \n",
       "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
       "       width=\"24px\">\n",
       "    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n",
       "    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n",
       "  </svg>\n",
       "      </button>\n",
       "      \n",
       "  <style>\n",
       "    .colab-df-container {\n",
       "      display:flex;\n",
       "      flex-wrap:wrap;\n",
       "      gap: 12px;\n",
       "    }\n",
       "\n",
       "    .colab-df-convert {\n",
       "      background-color: #E8F0FE;\n",
       "      border: none;\n",
       "      border-radius: 50%;\n",
       "      cursor: pointer;\n",
       "      display: none;\n",
       "      fill: #1967D2;\n",
       "      height: 32px;\n",
       "      padding: 0 0 0 0;\n",
       "      width: 32px;\n",
       "    }\n",
       "\n",
       "    .colab-df-convert:hover {\n",
       "      background-color: #E2EBFA;\n",
       "      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
       "      fill: #174EA6;\n",
       "    }\n",
       "\n",
       "    [theme=dark] .colab-df-convert {\n",
       "      background-color: #3B4455;\n",
       "      fill: #D2E3FC;\n",
       "    }\n",
       "\n",
       "    [theme=dark] .colab-df-convert:hover {\n",
       "      background-color: #434B5C;\n",
       "      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
       "      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
       "      fill: #FFFFFF;\n",
       "    }\n",
       "  </style>\n",
       "\n",
       "      <script>\n",
       "        const buttonEl =\n",
       "          document.querySelector('#df-f5279519-2963-4da6-9940-19533f0c65ca button.colab-df-convert');\n",
       "        buttonEl.style.display =\n",
       "          google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
       "\n",
       "        async function convertToInteractive(key) {\n",
       "          const element = document.querySelector('#df-f5279519-2963-4da6-9940-19533f0c65ca');\n",
       "          const dataTable =\n",
       "            await google.colab.kernel.invokeFunction('convertToInteractive',\n",
       "                                                     [key], {});\n",
       "          if (!dataTable) return;\n",
       "\n",
       "          const docLinkHtml = 'Like what you see? Visit the ' +\n",
       "            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n",
       "            + ' to learn more about interactive tables.';\n",
       "          element.innerHTML = '';\n",
       "          dataTable['output_type'] = 'display_data';\n",
       "          await google.colab.output.renderOutput(dataTable, element);\n",
       "          const docLink = document.createElement('div');\n",
       "          docLink.innerHTML = docLinkHtml;\n",
       "          element.appendChild(docLink);\n",
       "        }\n",
       "      </script>\n",
       "    </div>\n",
       "  </div>\n",
       "  "
      ],
      "text/plain": [
       "     No. of visits  Mean_purch  Sum_purch  Item_count  Total_quantity  \\\n",
       "0                1   20.438182     224.82          11             192   \n",
       "1                1   97.600000     683.20           7             148   \n",
       "2                1   17.634667     529.04          30             221   \n",
       "3                1   11.493333     310.32          27             502   \n",
       "4                1   15.354545     168.90          11             173   \n",
       "..             ...         ...        ...         ...             ...   \n",
       "611              1   15.994783     367.88          23             254   \n",
       "612              1   51.000000      51.00           1              20   \n",
       "613              1   15.568000      77.84           5              28   \n",
       "614              1    4.160000     208.00          50             142   \n",
       "615             61   15.400318  120599.89        1806           27639   \n",
       "\n",
       "     Avg_quant  CustomerID  \n",
       "0    17.454545           1  \n",
       "1    21.142857          11  \n",
       "2     7.366667          15  \n",
       "3    18.592593          17  \n",
       "4    15.727273          19  \n",
       "..         ...         ...  \n",
       "611  11.043478        4328  \n",
       "612  20.000000        4329  \n",
       "613   5.600000        4336  \n",
       "614   2.840000        4337  \n",
       "615   3.529434        4339  \n",
       "\n",
       "[616 rows x 7 columns]"
      ]
     },
     "execution_count": 227,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "dvt_dec2011= person_df(og_dec2011) #Our function gives such a dataframe\n",
    "#By which we can form clusters using KMeans\n",
    "dvt_dec2011"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {
    "colab": {
     "base_uri": "https://localhost:8080/"
    },
    "id": "3WvbxKd9bFPR",
    "outputId": "4ef6780b-efcb-4412-ff2f-fc75c26de44f"
   },
   "outputs": [
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "/usr/local/lib/python3.9/dist-packages/sklearn/cluster/_kmeans.py:870: FutureWarning: The default value of `n_init` will change from 10 to 'auto' in 1.4. Set the value of `n_init` explicitly to suppress the warning\n",
      "  warnings.warn(\n"
     ]
    },
    {
     "data": {
      "text/html": [
       "\n",
       "  <div id=\"df-0659572f-5343-40f7-9a3d-76511c5b8ef4\">\n",
       "    <div class=\"colab-df-container\">\n",
       "      <div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>No. of visits</th>\n",
       "      <th>Mean_purch</th>\n",
       "      <th>Sum_purch</th>\n",
       "      <th>Item_count</th>\n",
       "      <th>Total_quantity</th>\n",
       "      <th>Avg_quant</th>\n",
       "      <th>CustomerID</th>\n",
       "      <th>cluster_labels</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>1</td>\n",
       "      <td>20.438182</td>\n",
       "      <td>224.82</td>\n",
       "      <td>11</td>\n",
       "      <td>192</td>\n",
       "      <td>17.454545</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>1</td>\n",
       "      <td>97.600000</td>\n",
       "      <td>683.20</td>\n",
       "      <td>7</td>\n",
       "      <td>148</td>\n",
       "      <td>21.142857</td>\n",
       "      <td>11</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>1</td>\n",
       "      <td>17.634667</td>\n",
       "      <td>529.04</td>\n",
       "      <td>30</td>\n",
       "      <td>221</td>\n",
       "      <td>7.366667</td>\n",
       "      <td>15</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>1</td>\n",
       "      <td>11.493333</td>\n",
       "      <td>310.32</td>\n",
       "      <td>27</td>\n",
       "      <td>502</td>\n",
       "      <td>18.592593</td>\n",
       "      <td>17</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>1</td>\n",
       "      <td>15.354545</td>\n",
       "      <td>168.90</td>\n",
       "      <td>11</td>\n",
       "      <td>173</td>\n",
       "      <td>15.727273</td>\n",
       "      <td>19</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>...</th>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>611</th>\n",
       "      <td>1</td>\n",
       "      <td>15.994783</td>\n",
       "      <td>367.88</td>\n",
       "      <td>23</td>\n",
       "      <td>254</td>\n",
       "      <td>11.043478</td>\n",
       "      <td>4328</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>612</th>\n",
       "      <td>1</td>\n",
       "      <td>51.000000</td>\n",
       "      <td>51.00</td>\n",
       "      <td>1</td>\n",
       "      <td>20</td>\n",
       "      <td>20.000000</td>\n",
       "      <td>4329</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>613</th>\n",
       "      <td>1</td>\n",
       "      <td>15.568000</td>\n",
       "      <td>77.84</td>\n",
       "      <td>5</td>\n",
       "      <td>28</td>\n",
       "      <td>5.600000</td>\n",
       "      <td>4336</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>614</th>\n",
       "      <td>1</td>\n",
       "      <td>4.160000</td>\n",
       "      <td>208.00</td>\n",
       "      <td>50</td>\n",
       "      <td>142</td>\n",
       "      <td>2.840000</td>\n",
       "      <td>4337</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>615</th>\n",
       "      <td>61</td>\n",
       "      <td>15.400318</td>\n",
       "      <td>120599.89</td>\n",
       "      <td>1806</td>\n",
       "      <td>27639</td>\n",
       "      <td>3.529434</td>\n",
       "      <td>4339</td>\n",
       "      <td>2</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "<p>616 rows × 8 columns</p>\n",
       "</div>\n",
       "      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-0659572f-5343-40f7-9a3d-76511c5b8ef4')\"\n",
       "              title=\"Convert this dataframe to an interactive table.\"\n",
       "              style=\"display:none;\">\n",
       "        \n",
       "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
       "       width=\"24px\">\n",
       "    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n",
       "    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n",
       "  </svg>\n",
       "      </button>\n",
       "      \n",
       "  <style>\n",
       "    .colab-df-container {\n",
       "      display:flex;\n",
       "      flex-wrap:wrap;\n",
       "      gap: 12px;\n",
       "    }\n",
       "\n",
       "    .colab-df-convert {\n",
       "      background-color: #E8F0FE;\n",
       "      border: none;\n",
       "      border-radius: 50%;\n",
       "      cursor: pointer;\n",
       "      display: none;\n",
       "      fill: #1967D2;\n",
       "      height: 32px;\n",
       "      padding: 0 0 0 0;\n",
       "      width: 32px;\n",
       "    }\n",
       "\n",
       "    .colab-df-convert:hover {\n",
       "      background-color: #E2EBFA;\n",
       "      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
       "      fill: #174EA6;\n",
       "    }\n",
       "\n",
       "    [theme=dark] .colab-df-convert {\n",
       "      background-color: #3B4455;\n",
       "      fill: #D2E3FC;\n",
       "    }\n",
       "\n",
       "    [theme=dark] .colab-df-convert:hover {\n",
       "      background-color: #434B5C;\n",
       "      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
       "      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
       "      fill: #FFFFFF;\n",
       "    }\n",
       "  </style>\n",
       "\n",
       "      <script>\n",
       "        const buttonEl =\n",
       "          document.querySelector('#df-0659572f-5343-40f7-9a3d-76511c5b8ef4 button.colab-df-convert');\n",
       "        buttonEl.style.display =\n",
       "          google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
       "\n",
       "        async function convertToInteractive(key) {\n",
       "          const element = document.querySelector('#df-0659572f-5343-40f7-9a3d-76511c5b8ef4');\n",
       "          const dataTable =\n",
       "            await google.colab.kernel.invokeFunction('convertToInteractive',\n",
       "                                                     [key], {});\n",
       "          if (!dataTable) return;\n",
       "\n",
       "          const docLinkHtml = 'Like what you see? Visit the ' +\n",
       "            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n",
       "            + ' to learn more about interactive tables.';\n",
       "          element.innerHTML = '';\n",
       "          dataTable['output_type'] = 'display_data';\n",
       "          await google.colab.output.renderOutput(dataTable, element);\n",
       "          const docLink = document.createElement('div');\n",
       "          docLink.innerHTML = docLinkHtml;\n",
       "          element.appendChild(docLink);\n",
       "        }\n",
       "      </script>\n",
       "    </div>\n",
       "  </div>\n",
       "  "
      ],
      "text/plain": [
       "     No. of visits  Mean_purch  Sum_purch  Item_count  Total_quantity  \\\n",
       "0                1   20.438182     224.82          11             192   \n",
       "1                1   97.600000     683.20           7             148   \n",
       "2                1   17.634667     529.04          30             221   \n",
       "3                1   11.493333     310.32          27             502   \n",
       "4                1   15.354545     168.90          11             173   \n",
       "..             ...         ...        ...         ...             ...   \n",
       "611              1   15.994783     367.88          23             254   \n",
       "612              1   51.000000      51.00           1              20   \n",
       "613              1   15.568000      77.84           5              28   \n",
       "614              1    4.160000     208.00          50             142   \n",
       "615             61   15.400318  120599.89        1806           27639   \n",
       "\n",
       "     Avg_quant  CustomerID  cluster_labels  \n",
       "0    17.454545           1               0  \n",
       "1    21.142857          11               0  \n",
       "2     7.366667          15               0  \n",
       "3    18.592593          17               0  \n",
       "4    15.727273          19               0  \n",
       "..         ...         ...             ...  \n",
       "611  11.043478        4328               0  \n",
       "612  20.000000        4329               0  \n",
       "613   5.600000        4336               0  \n",
       "614   2.840000        4337               0  \n",
       "615   3.529434        4339               2  \n",
       "\n",
       "[616 rows x 8 columns]"
      ]
     },
     "execution_count": 228,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "df_dec2011 = df_cluster_labels(dvt_dec2011,3)\n",
    "df_dec2011\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {
    "colab": {
     "base_uri": "https://localhost:8080/"
    },
    "id": "uKeqHEZ3pf0q",
    "outputId": "b1e960e4-6a62-4b81-a248-c9100a7f9b9a"
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "The Silhouette Score is :- 0.9811245243992047\n"
     ]
    }
   ],
   "source": [
    "silhte_score_dec2011 = silhouette_score(dvt_dec2011, df_dec2011['cluster_labels'])\n",
    "print(\"The Silhouette Score is :- \"+str(silhte_score_dec2011))"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {
    "colab": {
     "base_uri": "https://localhost:8080/"
    },
    "id": "9QfYqs7qbTVR",
    "outputId": "b7029c26-2ab7-407f-c645-e878276454bb"
   },
   "outputs": [
    {
     "data": {
      "text/plain": [
       "0    614\n",
       "1      1\n",
       "2      1\n",
       "Name: cluster_labels, dtype: int64"
      ]
     },
     "execution_count": 230,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "df_dec2011['cluster_labels'].value_counts()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {
    "colab": {
     "base_uri": "https://localhost:8080/"
    },
    "id": "SPjJB7T9bJQD",
    "outputId": "c18431a2-371d-4e85-b11d-7de964d5b58e"
   },
   "outputs": [
    {
     "data": {
      "image/png": "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gwZpzZo16ty5syRpypQpevHFFzVnzhzFxMRo/PjxSkhI0KZNmxQQEFCh51va148//qigoKAKbQMAAHzL7XYrOjraK1+cTbb5BQOHw6EPPvhAgwYNOmnNoEGDdPDgQS1ZssQaa926tUaPHq3Ro0eXu83MmTP1xBNPKC8vT06nU5L02GOPacGCBfr+++8lSbfccosOHz6sjz76yNquT58+6t69u1599VUZYxQVFaWHH35YjzzyiKRff3MvPDxcs2fP1q233lqh5+h2uxUcHKyCggLCGgAAtYSv379rzQUGu3fv1sKFC5WcnFxmLj09XU2bNtVFF12kqVOnqri42JrLyspS3759raAmSQkJCcrJydGBAwesmvj4eK99JiQkKCsrS5KUm5urvLw8r5rg4GDFxsZaNeUpLCyU2+32WgAAACqj1lxgMGfOHDVu3LjMx6UPPfSQevTooSZNmmjFihUaN26cdu3apWnTpkmS8vLyFBMT47VNeHi4NRcaGqq8vDxr7MSavLw8q+7E7cqrKU9aWpomT55chWcLAADwq1oT1mbNmqXBgweX+X5YSkqK9XfXrl3ldDp13333KS0tTS6X62y36WXcuHFe/ZV+5g0AAFBRteJj0C+//FI5OTm65557TlsbGxur4uJibd++XZIUERGh3bt3e9WUrkdERJyy5sT5E7crr6Y8LpdLQUFBXgsAAEBl1Iqw9sYbb6hnz57q1q3baWuzs7Pl5+ensLAwSVJcXJyWLVumoqIiqyYjI0Pt27dXaGioVXPiRQulNXFxcZKkmJgYRUREeNW43W6tXLnSqgEAAKgJPv0Y9NChQ9q6dau1npubq+zsbDVp0kQtW7aU9Gsomj9/vp577rky22dlZWnlypW68sor1bhxY2VlZWnMmDG6/fbbrSB22223afLkyUpOTlZqaqo2bNigF154Qc8//7y1n1GjRunyyy/Xc889p8TERM2dO1erVq3S66+/LunXK1VHjx6tZ555Rm3btrVu3REVFXXKq1cBAADOmE/u7vZ/MjMzy73p3JAhQ6ya1157zQQGBpr8/Pwy269evdrExsaa4OBgExAQYC688ELz7LPPmmPHjnnVnXhT3BYtWpj09PQy+5o3b55p166dcTqdplOnTie9KW54eLhxuVymX79+Jicnp1LPt6CgwEgyBQUFldoOAAD4jq/fv21zn7W6wNf3aQEAAJXn6/fvWvGdNQAAgFMp9nhUcOyYij0eX7dS7WrNrTsAAAB+72e3W6+sWqn3N29SYUmxXP71dMOFHfVAr1i1OEc+xSKsAQCAWum/B/brxnnv6tDxQpX837e6CkuKNW/jen289T/655+TdH5oEx93eeb4GBQAANRKj2Z86hXUSpUYo4OFhUpd/KmPOqtehDUAAFDr/GffL1qTt7NMUCtVYoxW79qpLfv2neXOqh9hDQAA1Drf/7K3QnU5+ypWZ2eENQAAUOsE1qtfrXV2RlgDAAC1Tlx0SwXUO/V1koH16qnPedFnqaOaQ1gDAAC1TiOnU3d373nKmuSLeqmh03mWOqo5hDUAAFArjenzByV17ipJ8nc4rEWSkjp31ajYOF+2V234uamzyNc/VwEAwLloy759ev/7jdp7+LCaN2yoGy/spDZNmlbb/n39/s1NcQEAQK3WtmlTpV7S19dt1Bg+BgUAALAxwhoAAICNEdYAAABsjLAGAABgY4Q1AAAAGyOsAQAA2BhhDQAAwMYIawAAADZGWAMAALAxwhoAAICNEdYAAABsjLAGAABgY4Q1AAAAGyOsAQAA2BhhDQAAwMYIawAAADZGWAMAALAxwhoAAICNEdYAAABsjLAGAABgY4Q1AAAAGyOsAQAA2BhhDQAAwMYIawAAADZGWAMAALAxwhoAAICN+TSsLVu2TNdee62ioqLkcDi0YMECr/m77rpLDofDaxkwYIBXzf79+zV48GAFBQUpJCREycnJOnTokFfNunXrdNlllykgIEDR0dGaMmVKmV7mz5+vDh06KCAgQF26dNGiRYu85o0xmjBhgiIjIxUYGKj4+Hht2bKleg4EAADASfg0rB0+fFjdunXTjBkzTlozYMAA7dq1y1reffddr/nBgwdr48aNysjI0EcffaRly5bp3nvvtebdbrf69++vVq1aafXq1Zo6daomTZqk119/3apZsWKFkpKSlJycrLVr12rQoEEaNGiQNmzYYNVMmTJFL774ol599VWtXLlSDRs2VEJCgo4dO1aNRwQAAOB3jE1IMh988IHX2JAhQ8z1119/0m02bdpkJJlvv/3WGvv444+Nw+EwP//8szHGmFdeecWEhoaawsJCqyY1NdW0b9/eWr/55ptNYmKi175jY2PNfffdZ4wxxuPxmIiICDN16lRrPj8/37hcLvPuu+9W+DkWFBQYSaagoKDC2wAAAN/y9fu37b+ztnTpUoWFhal9+/a6//77tW/fPmsuKytLISEh6tWrlzUWHx8vPz8/rVy50qrp27evnE6nVZOQkKCcnBwdOHDAqomPj/d63ISEBGVlZUmScnNzlZeX51UTHBys2NhYqwYAAKAm1PN1A6cyYMAA3XDDDYqJidG2bdv0+OOPa+DAgcrKypK/v7/y8vIUFhbmtU29evXUpEkT5eXlSZLy8vIUExPjVRMeHm7NhYaGKi8vzxo7sebEfZy4XXk15SksLFRhYaG17na7K/P0AQAA7B3Wbr31VuvvLl26qGvXrrrgggu0dOlS9evXz4edVUxaWpomT57s6zYAAEAtZvuPQU90/vnnq1mzZtq6daskKSIiQnv27PGqKS4u1v79+xUREWHV7N6926umdP10NSfOn7hdeTXlGTdunAoKCqzlxx9/rNTzBQAAqFVh7aefftK+ffsUGRkpSYqLi1N+fr5Wr15t1Xz++efyeDyKjY21apYtW6aioiKrJiMjQ+3bt1doaKhVs2TJEq/HysjIUFxcnCQpJiZGERERXjVut1srV660asrjcrkUFBTktQAAAFSGT8PaoUOHlJ2drezsbEm/fpE/OztbO3bs0KFDhzR27Fh9/fXX2r59u5YsWaLrr79ebdq0UUJCgiTpwgsv1IABAzRs2DB98803Wr58uUaOHKlbb71VUVFRkqTbbrtNTqdTycnJ2rhxo9577z298MILSklJsfoYNWqUPvnkEz333HP6/vvvNWnSJK1atUojR46UJDkcDo0ePVrPPPOMPvzwQ61fv1533nmnoqKiNGjQoLN6zAAAQB3jk2tQ/09mZqaRVGYZMmSIOXLkiOnfv79p3ry5qV+/vmnVqpUZNmyYycvL89rHvn37TFJSkmnUqJEJCgoyQ4cONQcPHvSq+e6778yll15qXC6XadGihUlPTy/Ty7x580y7du2M0+k0nTp1MgsXLvSa93g8Zvz48SY8PNy4XC7Tr18/k5OTU6nn6+tLfwEAQOX5+v3bYYwxPsyKdYrb7VZwcLAKCgr4SBQAgFrC1+/fteo7awAAAHUNYQ0AAMDGCGsAAAA2RlgDAACwMcIaAACAjRHWAAAAbIywBgAAYGOENQAAABsjrAEAANgYYQ0AAMDGCGsAAAA2RlgDAACwMcIaAACAjRHWAAAAbIywBgAAYGOENQAAABsjrAEAANgYYQ0AAMDGCGsAAAA2RlgDAACwMcIaAACAjRHWAAAAbIywBgAAYGOENQAAABsjrAEAANgYYQ0AAMDGCGsAAAA2RlgDAACwMcIaAACAjRHWAAAAbIywBgAAYGOENQAAABsjrAEAANgYYQ0AAMDGCGsAAAA2RlgDAACwMcIaAACAjRHWAAAAbIywBgAAYGM+DWvLli3Ttddeq6ioKDkcDi1YsMCaKyoqUmpqqrp06aKGDRsqKipKd955p3bu3Om1j9atW8vhcHgt6enpXjXr1q3TZZddpoCAAEVHR2vKlCllepk/f746dOiggIAAdenSRYsWLfKaN8ZowoQJioyMVGBgoOLj47Vly5bqOxgAAADl8GlYO3z4sLp166YZM2aUmTty5IjWrFmj8ePHa82aNXr//feVk5Oj6667rkztU089pV27dlnLgw8+aM253W71799frVq10urVqzV16lRNmjRJr7/+ulWzYsUKJSUlKTk5WWvXrtWgQYM0aNAgbdiwwaqZMmWKXnzxRb366qtauXKlGjZsqISEBB07dqyajwoAAMAJjE1IMh988MEpa7755hsjyfzwww/WWKtWrczzzz9/0m1eeeUVExoaagoLC62x1NRU0759e2v95ptvNomJiV7bxcbGmvvuu88YY4zH4zERERFm6tSp1nx+fr5xuVzm3XffrcjTM8YYU1BQYCSZgoKCCm8DAAB8y9fv37XqO2sFBQVyOBwKCQnxGk9PT1fTpk110UUXaerUqSouLrbmsrKy1LdvXzmdTmssISFBOTk5OnDggFUTHx/vtc+EhARlZWVJknJzc5WXl+dVExwcrNjYWKumPIWFhXK73V4LAABAZdTzdQMVdezYMaWmpiopKUlBQUHW+EMPPaQePXqoSZMmWrFihcaNG6ddu3Zp2rRpkqS8vDzFxMR47Ss8PNyaCw0NVV5enjV2Yk1eXp5Vd+J25dWUJy0tTZMnT67iMwYAAKglYa2oqEg333yzjDGaOXOm11xKSor1d9euXeV0OnXfffcpLS1NLpfrbLfqZdy4cV79ud1uRUdH+7AjAABQ29j+Y9DSoPbDDz8oIyPD66xaeWJjY1VcXKzt27dLkiIiIrR7926vmtL1iIiIU9acOH/iduXVlMflcikoKMhrAQAAqAxbh7XSoLZlyxYtXrxYTZs2Pe022dnZ8vPzU1hYmCQpLi5Oy5YtU1FRkVWTkZGh9u3bKzQ01KpZsmSJ134yMjIUFxcnSYqJiVFERIRXjdvt1sqVK60aAACAmuDTj0EPHTqkrVu3Wuu5ubnKzs5WkyZNFBkZqZtuuklr1qzRRx99pJKSEuv7YU2aNJHT6VRWVpZWrlypK6+8Uo0bN1ZWVpbGjBmj22+/3Qpit912myZPnqzk5GSlpqZqw4YNeuGFF/T8889bjztq1Chdfvnleu6555SYmKi5c+dq1apV1u09HA6HRo8erWeeeUZt27ZVTEyMxo8fr6ioKA0aNOjsHbBymJJfpGMLZIp/kvyC5Qi4Ro76bX3aEwAAqEY+uQb1/2RmZhpJZZYhQ4aY3NzccuckmczMTGOMMatXrzaxsbEmODjYBAQEmAsvvNA8++yz5tixY16P891335lLL73UuFwu06JFC5Oenl6ml3nz5pl27doZp9NpOnXqZBYuXOg17/F4zPjx4014eLhxuVymX79+Jicnp1LPt7ov/fUcesOU7OpgSna1NyW7Lvy/v9uakgOjjcdTePodAACA0/L1rTscxhjjk5RYB7ndbgUHB6ugoOCMv79mjv5bpmDsSWb9pIA/yS8k7YweAwAAVO/7d1XY+jtrKJ8xHplDL56iwiMde1+mZNdZ6wkAANQMwlptVLxFKvnx9HXHFtd8LwAAoEYR1mojc7QCRX6SOVLjrQAAgJpFWKuN6rXU6f+nK5HqtTkb3QAAgBpEWKuFHH5NJNcASf4nqfCT/JpJrsvPZlsAAKAGENZqKUfQY78GsjKBzV+SnxzBf5XDUSt+TQwAAJwCYa2WcvhHyNH0fSnwZkkBpaOS63I5mr4nh+sPvmwPAABUE0691GIO/+ZyBE+WCXpc8hyQHI3k8Gvk67YAAEA1IqydAxwOl+R/8h+UBwAAtRcfgwIAANgYYQ0AAMDGCGsAAAA2RlgDAACwMcIaAACAjRHWAAAAbIywBgAAYGOENQAAABsjrAEAANgYYQ0AAMDGCGsAAAA2RlgDAACwMcIaAACAjRHWAAAAbIywBgAAYGOENQAAABsjrAEAANgYYQ0AAMDGCGsAAAA2RlgDAACwMcIaAACAjRHWAAAAbIywBgAAYGOENQAAABsjrAEAANgYYQ0AAMDGCGsAAAA2RlgDAACwMcIaAACAjRHWAAAAbKzKYS0/P1+fffaZ3n77bb311lteS0UtW7ZM1157raKiouRwOLRgwQKveWOMJkyYoMjISAUGBio+Pl5btmzxqtm/f78GDx6soKAghYSEKDk5WYcOHfKqWbdunS677DIFBAQoOjpaU6ZMKdPL/Pnz1aFDBwUEBKhLly5atGhRpXsBAACodqYKPvzwQ9O4cWPjcDhMcHCwCQkJsZbQ0NAK72fRokXmiSeeMO+//76RZD744AOv+fT0dBMcHGwWLFhgvvvuO3PdddeZmJgYc/ToUatmwIABplu3bubrr782X375pWnTpo1JSkqy5gsKCkx4eLgZPHiw2bBhg3n33XdNYGCgee2116ya5cuXG39/fzNlyhSzadMm8+STT5r69eub9evXV6qX0ykoKDCSTEFBQYW3AQAAvuXr9+8qhbW2bduaUaNGmcOHD1dfI78Lax6Px0RERJipU6daY/n5+cblcpl3333XGGPMpk2bjCTz7bffWjUff/yxcTgc5ueffzbGGPPKK6+Y0NBQU1hYaNWkpqaa9u3bW+s333yzSUxM9OonNjbW3HfffRXupSJ8/T82AACoPF+/f1fpY9Cff/5ZDz30kBo0aFBtZ/h+Lzc3V3l5eYqPj7fGgoODFRsbq6ysLElSVlaWQkJC1KtXL6smPj5efn5+WrlypVXTt29fOZ1OqyYhIUE5OTk6cOCAVXPi45TWlD5ORXopT2Fhodxut9cCAABQGVUKawkJCVq1alV19+IlLy9PkhQeHu41Hh4ebs3l5eUpLCzMa75evXpq0qSJV015+zjxMU5Wc+L86XopT1pamoKDg60lOjr6NM8aAADAW72KFn744YfW34mJiRo7dqw2bdqkLl26qH79+l611113XfV1WIuNGzdOKSkp1rrb7SawAQCASqlwWBs0aFCZsaeeeqrMmMPhUElJyRk1JUkRERGSpN27dysyMtIa3717t7p3727V7Nmzx2u74uJi7d+/39o+IiJCu3fv9qopXT9dzYnzp+ulPC6XSy6Xq0LPFwAAoDwV/hjU4/FUaKmOoCZJMTExioiI0JIlS6wxt9utlStXKi4uTpIUFxen/Px8rV692qr5/PPP5fF4FBsba9UsW7ZMRUVFVk1GRobat2+v0NBQq+bExymtKX2civQCAABQI3xyWcP/OXjwoFm7dq1Zu3atkWSmTZtm1q5da3744QdjzK+3ywgJCTH//ve/zbp168z1119f7q07LrroIrNy5Urz1VdfmbZt23rduiM/P9+Eh4ebO+64w2zYsMHMnTvXNGjQoMytO+rVq2f++te/ms2bN5uJEyeWe+uO0/VyOr6+mgQAAFSer9+/qxTWHnzwQfPCCy+UGX/ppZfMqFGjKryfzMxMI6nMMmTIEGPMr7fMGD9+vAkPDzcul8v069fP5OTkeO1j3759JikpyTRq1MgEBQWZoUOHmoMHD3rVfPfdd+bSSy81LpfLtGjRwqSnp5fpZd68eaZdu3bG6XSaTp06mYULF3rNV6SX0/H1/9gAAKDyfP3+7TDGmMqejWvRooU+/PBD9ezZ02t8zZo1uu666/TTTz+d4fm+c5Pb7VZwcLAKCgoUFBTk63YAAEAF+Pr9u0q37ti3b5+Cg4PLjAcFBemXX34546YAAADwqyqFtTZt2uiTTz4pM/7xxx/r/PPPP+OmAAAA8KsK37rjRCkpKRo5cqT27t2rq666SpK0ZMkSPffcc5o+fXp19gcAAFCnVSms3X333SosLNRf/vIXPf3005Kk1q1ba+bMmbrzzjurtUEAAIC6rNJhrbi4WO+8845uuOEG3X///dq7d68CAwPVqFGjmugPAACgTqv0d9bq1aun4cOH69ixY5Kk5s2bE9QAAABqSJUuMOjdu7fWrl1b3b0AAADgd6r0nbUHHnhADz/8sH766Sf17NlTDRs29Jrv2rVrtTQHAABQ11Xpprh+fmVPyDkcDhljqu2H3M9Fvr6pHgAAqDxfv39X6cxabm5udfcBAACAclQprLVq1aq6+wAAAEA5qhTW3nrrrVPOc681AACA6lGl76yFhoZ6rRcVFenIkSNyOp1q0KCB9u/fX20Nnkt8/Zk3AACoPF+/f1fp1h0HDhzwWg4dOqScnBxdeumlevfdd6u7RwAAgDqrSmGtPG3btlV6erpGjRpVXbsEAACo86otrEm//rrBzp07q3OXAAAAdVqVLjD48MMPvdaNMdq1a5defvllXXLJJdXSGAAAAKoY1gYNGuS17nA41Lx5c1111VV67rnnqqMvAAAAqIphzePxVHcfAAAAKMcZf2fNGKMq3P0DAAAAFVDlsPbGG2+oc+fOCggIUEBAgDp37qy///3v1dkbAABAnVelj0EnTJigadOm6cEHH1RcXJwkKSsrS2PGjNGOHTv01FNPVWuTAAAAdVWVfsGgefPmevHFF5WUlOQ1/u677+rBBx/UL7/8Um0Nnkt8fQdkAABQeb5+/67Sx6BFRUXq1atXmfGePXuquLj4jJsCAADAr6oU1u644w7NnDmzzPjrr7+uwYMHn3FTAAAA+FWVvrMm/XqBwWeffaY+ffpIklauXKkdO3bozjvvVEpKilU3bdq0M+8SAACgjqpSWNuwYYN69OghSdq2bZskqVmzZmrWrJk2bNhg1TkcjmpoEQAAoO6qUljLzMysUN1PP/0kj8cjP79q/QlSAACAOqNGU1THjh21ffv2mnwIAACAc1qNhjV+2QAAAODM8PkkAACAjRHWAAAAbIywBgAAYGM1Gta4dQcAAMCZ4QIDAAAAG6vyLxhUxKZNmxQVFVWTDwEAAHBOq1JYO3bsmF566SVlZmZqz5498ng8XvNr1qyRJEVHR595hwAAAHVYlcJacnKyPvvsM910003q3bs3300DAACoIVUKax999JEWLVqkSy65pLr7AQAAwAmqdIFBixYt1Lhx4+rupVytW7eWw+Eos4wYMUKSdMUVV5SZGz58uNc+duzYocTERDVo0EBhYWEaO3asiouLvWqWLl2qHj16yOVyqU2bNpo9e3aZXmbMmKHWrVsrICBAsbGx+uabb2rseQMAAEhVDGvPPfecUlNT9cMPP1R3P2V8++232rVrl7VkZGRIkv785z9bNcOGDfOqmTJlijVXUlKixMREHT9+XCtWrNCcOXM0e/ZsTZgwwarJzc1VYmKirrzySmVnZ2v06NG655579Omnn1o17733nlJSUjRx4kStWbNG3bp1U0JCgvbs2VPjxwAAANRdDlOF+2vs3btXN998s5YtW6YGDRqofv36XvP79++vtgZ/b/To0froo4+0ZcsWORwOXXHFFerevbumT59ebv3HH3+sa665Rjt37lR4eLgk6dVXX1Vqaqr27t0rp9Op1NRULVy4UBs2bLC2u/XWW5Wfn69PPvlEkhQbG6uLL75YL7/8siTJ4/EoOjpaDz74oB577LEK9e52uxUcHKyCggIFBQWdwVEAAABni6/fv6v0nbWkpCT9/PPPevbZZxUeHn7WLjA4fvy43n77baWkpHg95j/+8Q+9/fbbioiI0LXXXqvx48erQYMGkqSsrCx16dLFCmqSlJCQoPvvv18bN27URRddpKysLMXHx3s9VkJCgkaPHm097urVqzVu3Dhr3s/PT/Hx8crKyjppv4WFhSosLLTW3W73GT1/AABQ91QprK1YsUJZWVnq1q1bdfdzSgsWLFB+fr7uuusua+y2225Tq1atFBUVpXXr1ik1NVU5OTl6//33JUl5eXleQU2StZ6Xl3fKGrfbraNHj+rAgQMqKSkpt+b7778/ab9paWmaPHlylZ8vAABAlcJahw4ddPTo0eru5bTeeOMNDRw40OtGu/fee6/1d5cuXRQZGal+/fpp27ZtuuCCC856jycaN26cUlJSrHW328295wAAQKVU6QKD9PR0Pfzww1q6dKn27dsnt9vttdSEH374QYsXL9Y999xzyrrY2FhJ0tatWyVJERER2r17t1dN6XpERMQpa4KCghQYGKhmzZrJ39+/3JrSfZTH5XIpKCjIawEAAKiMKoW1AQMGKCsrS/369VNYWJhCQ0MVGhqqkJAQhYaGVnePkqQ333xTYWFhSkxMPGVddna2JCkyMlKSFBcXp/Xr13tdtZmRkaGgoCB17NjRqlmyZInXfjIyMhQXFydJcjqd6tmzp1eNx+PRkiVLrBoAAICaUKWPQTMzM6u7j1PyeDx68803NWTIENWr91vL27Zt0zvvvKOrr75aTZs21bp16zRmzBj17dtXXbt2lST1799fHTt21B133KEpU6YoLy9PTz75pEaMGCGXyyVJGj58uF5++WU9+uijuvvuu/X5559r3rx5WrhwofVYKSkpGjJkiHr16qXevXtr+vTpOnz4sIYOHXpWjwUAAKhjTC3w6aefGkkmJyfHa3zHjh2mb9++pkmTJsblcpk2bdqYsWPHmoKCAq+67du3m4EDB5rAwEDTrFkz8/DDD5uioiKvmszMTNO9e3fjdDrN+eefb958880yfbz00kumZcuWxul0mt69e5uvv/66Us+joKDASCrTHwAAsC9fv39X6T5ry5YtO+V83759q5Ycz3G+vk8LAACoPF+/f1fpY9ArrriizNiJ9z0rKSmpckMAAAD4TZUuMDhw4IDXsmfPHn3yySe6+OKL9dlnn1V3jwAAAHVWlc6sBQcHlxn74x//KKfTqZSUFK1evfqMGwMAAEAVz6ydTHh4uHJycqpzlwAAAHValc6srVu3zmvdGKNdu3YpPT1d3bt3r46+AAAAoCqGte7du8vhcOj3F5L26dNH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Z2ebTz75xDRv3rzc2zSMHTvWbN682cyYMaPc2zT48ng+/PDDZunSpSY3N9csX77cxMfHm2bNmpk9e/YYY369dUfLli3N559/blatWmXi4uJMXFzcOXccSpWUlJiWLVua1NRUr/Fz+TVx8OBBs3btWrN27VojyUybNs2sXbvWusIxPT3dhISEmH//+99m3bp15vrrry/31h0XXXSRWblypfnqq69M27ZtvW7RkJ+fb8LDw80dd9xhNmzYYObOnWsaNGhQ5rYE9erVM3/961/N5s2bzcSJE8u9LcHpeqmpY3H8+HFz3XXXmfPOO89kZ2d7/dtRegXfihUrzPPPP2+ys7PNtm3bzNtvv22aN29u7rzzznPqWBw8eNA88sgjJisry+Tm5prFixebHj16mLZt25pjx45Z+6gLr4tSBQUFpkGDBmbmzJlltq+NrwvC2jngpZdeMi1btjROp9P07t3bfP31175uqVIklbu8+eabxhhjduzYYfr27WuaNGliXC6XadOmjRk7dqzXPbWMMWb79u1m4MCBJjAw0DRr1sw8/PDDpqioyKsmMzPTdO/e3TidTnP++edbj3EiXx7PW265xURGRhqn02latGhhbrnlFrN161Zr/ujRo+aBBx4woaGhpkGDBuZPf/qT2bVrl9c+zoXjUOrTTz81kkxOTo7X+Ln8msjMzCz3v4chQ4YYY369HcD48eNNeHi4cblcpl+/fmWOz759+0xSUpJp1KiRCQoKMkOHDjUHDx70qvnuu+/MpZdealwul2nRooVJT08v08u8efNMu3btjNPpNJ06dTILFy70mq9ILzV1LHJzc0/6b0fpvfhWr15tYmNjTXBwsAkICDAXXnihefbZZ70CzLlwLI4cOWL69+9vmjdvburXr29atWplhg0bVub/oagLr4tSr732mgkMDDT5+flltq+NrwuHMcZU7lwcAAAAzha+swYAAGBjhDUAAAAbI6wBAADYGGENAADAxghrAAAANkZYAwAAsDHCGgAAgI0R1gDgHLJ9+3Y5HA7r57cA1H6ENQC1wl133SWHw6Hhw4eXmRsxYoQcDofuuuuus98YANQwwhqAWiM6Olpz587V0aNHrbFjx47pnXfeUcuWLX3Y2dlhjFFxcbGv2wBwlhHWANQaPXr0UHR0tN5//31r7P3331fLli110UUXWWMej0dpaWmKiYlRYGCgunXrpn/+85/WfElJiZKTk6359u3b64UXXvB6rLvuukuDBg3SX//6V0VGRqpp06YaMWKEioqKKtRr69at9fTTTyspKUkNGzZUixYtNGPGDGu+vI8r8/Pz5XA4tHTpUknS0qVL5XA49PHHH6tnz55yuVz66quv5PF4NGXKFLVp00Yul0stW7bUX/7yF6/H/+9//6srr7xSDRo0ULdu3ZSVlVWhvgHYD2ENQK1y9913680337TWZ82apaFDh3rVpKWl6a233tKrr76qjRs3asyYMbr99tv1xRdfSPo1zJ133nmaP3++Nm3apAkTJujxxx/XvHnzvPaTmZmpbdu2KTMzU3PmzNHs2bM1e/bsCvc6depUdevWTWvXrtVjjz2mUaNGKSMjo9LP+bHHHlN6ero2b96srl27aty4cUpPT9f48eO1adMmvfPOOwoPD/fa5oknntAjjzyi7OxstWvXTklJSZyVA2qrSv/0OwD4wJAhQ8z1119v9uzZY1wul9m+fbvZvn27CQgIMHv37jXXX3+9GTJkiDl27Jhp0KCBWbFihdf2ycnJJikp6aT7HzFihLnxxhu9Hq9Vq1amuLjYGvvzn/9sbrnllgr126pVKzNgwACvsVtuucUMHDjQGGNMbm6ukWTWrl1rzR84cMBIMpmZmcYYYzIzM40ks2DBAqvG7XYbl8tl/va3v5X7uKX7/fvf/26Nbdy40UgymzdvrlDvAOylnk+TIgBUUvPmzZWYmKjZs2fLGKPExEQ1a9bMmt+6dauOHDmiP/7xj17bHT9+3Ouj0hkzZmjWrFnasWOHjh49quPHj6t79+5e23Tq1En+/v7WemRkpNavX1/hXuPi4sqsT58+vcLbl+rVq5f19+bNm1VYWKh+/fqdcpuuXbtaf0dGRkqS9uzZow4dOlT68QH4FmENQK1z9913a+TIkZLk9T0wSTp06JAkaeHChWrRooXXnMvlkiTNnTtXjzzyiJ577jnFxcWpcePGmjp1qlauXOlVX79+fa91h8Mhj8dTLc/Bz+/Xb6EYY6yxk30frmHDhtbfgYGBFdr/ib07HA5JqrbeAZxdhDUAtc6AAQN0/PhxORwOJSQkeM117NhRLpdLO3bs0OWXX17u9suXL9cf/vAHPfDAA9bYtm3bqr3Pr7/+usz6hRdeKOnXM4SStGvXLuuMX0Xujda2bVsFBgZqyZIluueee6q3YQC2RFgDUOv4+/tr8+bN1t8naty4sR555BGNGTNGHo9Hl156qQoKCrR8+XIFBQVpyJAhatu2rd566y19+umniomJ0f/7f/9P3377rWJiYqq1z+XLl2vKlCkaNGiQMjIyNH/+fC1cuFDSr2fI+vTpo/T0dMXExGjPnj168sknT7vPgIAApaam6tFHH5XT6dQll1yivXv3auPGjUpOTq7W/gHYA2ENQK0UFBR00rmnn35azZs3V1pamv773/8qJCREPXr00OOPPy5Juu+++7R27VrdcsstcjgcSkpK0gMPPKCPP/64Wnt8+OGHtWrVKk2ePFlBQUGaNm2a15nAWbNmKTk5WT179lT79u01ZcoU9e/f/7T7HT9+vOrVq6cJEyZo586dioyMLPdmwQDODQ5z4hcmAADVonXr1ho9erRGjx7t61YA1HLcZw0AAMDGCGsAUElffvmlGjVqdNIFAKoTH4MCQCUdPXpUP//880nn27Rpcxa7AXCuI6wBAADYGB+DAgAA2BhhDQAAwMYIawAAADZGWAMAALAxwhoAAICNEdYAAABsjLAGAABgY4Q1AAAAG/v/BGoihI2p7fwAAAAASUVORK5CYII=",
      "text/plain": [
       "<Figure size 640x480 with 1 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "plt.scatter(df_dec2011['Mean_purch'], df_dec2011['Sum_purch'], c=df_dec2011['cluster_labels'], cmap='viridis')\n",
    "plt.title(\"For Dec 2011\")\n",
    "plt.xlabel('Mean_purch')\n",
    "plt.ylabel('Sum_purch')\n",
    "plt.show()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {
    "colab": {
     "background_save": true,
     "base_uri": "https://localhost:8080/"
    },
    "id": "PXoxXPF5bQGp",
    "outputId": "0603996a-a267-4775-b99f-3b16364214ce"
   },
   "outputs": [
    {
     "data": {
      "text/html": [
       "\n",
       "  <div id=\"df-c5c1a4b2-d95b-42f7-bf7a-519a9f2ebfe6\">\n",
       "    <div class=\"colab-df-container\">\n",
       "      <div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>No. of visits</th>\n",
       "      <th>Mean_purch</th>\n",
       "      <th>Sum_purch</th>\n",
       "      <th>Item_count</th>\n",
       "      <th>Total_quantity</th>\n",
       "      <th>Avg_quant</th>\n",
       "      <th>CustomerID</th>\n",
       "      <th>cluster_labels</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>1</td>\n",
       "      <td>20.438182</td>\n",
       "      <td>224.82</td>\n",
       "      <td>11</td>\n",
       "      <td>192</td>\n",
       "      <td>17.454545</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>1</td>\n",
       "      <td>97.600000</td>\n",
       "      <td>683.20</td>\n",
       "      <td>7</td>\n",
       "      <td>148</td>\n",
       "      <td>21.142857</td>\n",
       "      <td>11</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>1</td>\n",
       "      <td>17.634667</td>\n",
       "      <td>529.04</td>\n",
       "      <td>30</td>\n",
       "      <td>221</td>\n",
       "      <td>7.366667</td>\n",
       "      <td>15</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>1</td>\n",
       "      <td>11.493333</td>\n",
       "      <td>310.32</td>\n",
       "      <td>27</td>\n",
       "      <td>502</td>\n",
       "      <td>18.592593</td>\n",
       "      <td>17</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>1</td>\n",
       "      <td>15.354545</td>\n",
       "      <td>168.90</td>\n",
       "      <td>11</td>\n",
       "      <td>173</td>\n",
       "      <td>15.727273</td>\n",
       "      <td>19</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>...</th>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>610</th>\n",
       "      <td>1</td>\n",
       "      <td>16.259091</td>\n",
       "      <td>894.25</td>\n",
       "      <td>55</td>\n",
       "      <td>460</td>\n",
       "      <td>8.363636</td>\n",
       "      <td>4310</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>611</th>\n",
       "      <td>1</td>\n",
       "      <td>15.994783</td>\n",
       "      <td>367.88</td>\n",
       "      <td>23</td>\n",
       "      <td>254</td>\n",
       "      <td>11.043478</td>\n",
       "      <td>4328</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>612</th>\n",
       "      <td>1</td>\n",
       "      <td>51.000000</td>\n",
       "      <td>51.00</td>\n",
       "      <td>1</td>\n",
       "      <td>20</td>\n",
       "      <td>20.000000</td>\n",
       "      <td>4329</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>613</th>\n",
       "      <td>1</td>\n",
       "      <td>15.568000</td>\n",
       "      <td>77.84</td>\n",
       "      <td>5</td>\n",
       "      <td>28</td>\n",
       "      <td>5.600000</td>\n",
       "      <td>4336</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>614</th>\n",
       "      <td>1</td>\n",
       "      <td>4.160000</td>\n",
       "      <td>208.00</td>\n",
       "      <td>50</td>\n",
       "      <td>142</td>\n",
       "      <td>2.840000</td>\n",
       "      <td>4337</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "<p>614 rows × 8 columns</p>\n",
       "</div>\n",
       "      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-c5c1a4b2-d95b-42f7-bf7a-519a9f2ebfe6')\"\n",
       "              title=\"Convert this dataframe to an interactive table.\"\n",
       "              style=\"display:none;\">\n",
       "        \n",
       "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
       "       width=\"24px\">\n",
       "    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n",
       "    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n",
       "  </svg>\n",
       "      </button>\n",
       "      \n",
       "  <style>\n",
       "    .colab-df-container {\n",
       "      display:flex;\n",
       "      flex-wrap:wrap;\n",
       "      gap: 12px;\n",
       "    }\n",
       "\n",
       "    .colab-df-convert {\n",
       "      background-color: #E8F0FE;\n",
       "      border: none;\n",
       "      border-radius: 50%;\n",
       "      cursor: pointer;\n",
       "      display: none;\n",
       "      fill: #1967D2;\n",
       "      height: 32px;\n",
       "      padding: 0 0 0 0;\n",
       "      width: 32px;\n",
       "    }\n",
       "\n",
       "    .colab-df-convert:hover {\n",
       "      background-color: #E2EBFA;\n",
       "      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
       "      fill: #174EA6;\n",
       "    }\n",
       "\n",
       "    [theme=dark] .colab-df-convert {\n",
       "      background-color: #3B4455;\n",
       "      fill: #D2E3FC;\n",
       "    }\n",
       "\n",
       "    [theme=dark] .colab-df-convert:hover {\n",
       "      background-color: #434B5C;\n",
       "      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
       "      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
       "      fill: #FFFFFF;\n",
       "    }\n",
       "  </style>\n",
       "\n",
       "      <script>\n",
       "        const buttonEl =\n",
       "          document.querySelector('#df-c5c1a4b2-d95b-42f7-bf7a-519a9f2ebfe6 button.colab-df-convert');\n",
       "        buttonEl.style.display =\n",
       "          google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
       "\n",
       "        async function convertToInteractive(key) {\n",
       "          const element = document.querySelector('#df-c5c1a4b2-d95b-42f7-bf7a-519a9f2ebfe6');\n",
       "          const dataTable =\n",
       "            await google.colab.kernel.invokeFunction('convertToInteractive',\n",
       "                                                     [key], {});\n",
       "          if (!dataTable) return;\n",
       "\n",
       "          const docLinkHtml = 'Like what you see? Visit the ' +\n",
       "            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n",
       "            + ' to learn more about interactive tables.';\n",
       "          element.innerHTML = '';\n",
       "          dataTable['output_type'] = 'display_data';\n",
       "          await google.colab.output.renderOutput(dataTable, element);\n",
       "          const docLink = document.createElement('div');\n",
       "          docLink.innerHTML = docLinkHtml;\n",
       "          element.appendChild(docLink);\n",
       "        }\n",
       "      </script>\n",
       "    </div>\n",
       "  </div>\n",
       "  "
      ],
      "text/plain": [
       "     No. of visits  Mean_purch  Sum_purch  Item_count  Total_quantity  \\\n",
       "0                1   20.438182     224.82          11             192   \n",
       "1                1   97.600000     683.20           7             148   \n",
       "2                1   17.634667     529.04          30             221   \n",
       "3                1   11.493333     310.32          27             502   \n",
       "4                1   15.354545     168.90          11             173   \n",
       "..             ...         ...        ...         ...             ...   \n",
       "610              1   16.259091     894.25          55             460   \n",
       "611              1   15.994783     367.88          23             254   \n",
       "612              1   51.000000      51.00           1              20   \n",
       "613              1   15.568000      77.84           5              28   \n",
       "614              1    4.160000     208.00          50             142   \n",
       "\n",
       "     Avg_quant  CustomerID  cluster_labels  \n",
       "0    17.454545           1               0  \n",
       "1    21.142857          11               0  \n",
       "2     7.366667          15               0  \n",
       "3    18.592593          17               0  \n",
       "4    15.727273          19               0  \n",
       "..         ...         ...             ...  \n",
       "610   8.363636        4310               0  \n",
       "611  11.043478        4328               0  \n",
       "612  20.000000        4329               0  \n",
       "613   5.600000        4336               0  \n",
       "614   2.840000        4337               0  \n",
       "\n",
       "[614 rows x 8 columns]"
      ]
     },
     "execution_count": 232,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "#Thus Clusters 1 and 2 are outliers as they have very few datapoints(Customers)\n",
    "#So we remove them and then applyKMeans again\n",
    "#Thus\n",
    "#Then check for outliers and if required, repeat the process\n",
    "#Below is for outliers:-\n",
    "\n",
    "df_dec2011 = df_dec2011[df_dec2011['cluster_labels']!=1]\n",
    "df_dec2011 = df_dec2011[df_dec2011['cluster_labels']!=2]\n",
    "df_dec2011"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {
    "colab": {
     "background_save": true,
     "base_uri": "https://localhost:8080/"
    },
    "id": "93IgPAKXbagy",
    "outputId": "d5eea051-02a1-4b78-b995-154cbae82ba0"
   },
   "outputs": [
    {
     "data": {
      "text/plain": [
       "0    614\n",
       "Name: cluster_labels, dtype: int64"
      ]
     },
     "execution_count": 233,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "df_dec2011['cluster_labels'].value_counts()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {
    "colab": {
     "background_save": true,
     "base_uri": "https://localhost:8080/"
    },
    "id": "m6DH1NPFbd6S",
    "outputId": "aaa92592-99a6-4ac8-b71c-13e2a9d84931"
   },
   "outputs": [
    {
     "data": {
      "text/html": [
       "\n",
       "  <div id=\"df-9546f73c-9fbc-4e67-a353-dbd4c3afce3b\">\n",
       "    <div class=\"colab-df-container\">\n",
       "      <div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>No. of visits</th>\n",
       "      <th>Mean_purch</th>\n",
       "      <th>Sum_purch</th>\n",
       "      <th>Item_count</th>\n",
       "      <th>Total_quantity</th>\n",
       "      <th>Avg_quant</th>\n",
       "      <th>CustomerID</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>1</td>\n",
       "      <td>20.438182</td>\n",
       "      <td>224.82</td>\n",
       "      <td>11</td>\n",
       "      <td>192</td>\n",
       "      <td>17.454545</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>1</td>\n",
       "      <td>97.600000</td>\n",
       "      <td>683.20</td>\n",
       "      <td>7</td>\n",
       "      <td>148</td>\n",
       "      <td>21.142857</td>\n",
       "      <td>11</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>1</td>\n",
       "      <td>17.634667</td>\n",
       "      <td>529.04</td>\n",
       "      <td>30</td>\n",
       "      <td>221</td>\n",
       "      <td>7.366667</td>\n",
       "      <td>15</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>1</td>\n",
       "      <td>11.493333</td>\n",
       "      <td>310.32</td>\n",
       "      <td>27</td>\n",
       "      <td>502</td>\n",
       "      <td>18.592593</td>\n",
       "      <td>17</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>1</td>\n",
       "      <td>15.354545</td>\n",
       "      <td>168.90</td>\n",
       "      <td>11</td>\n",
       "      <td>173</td>\n",
       "      <td>15.727273</td>\n",
       "      <td>19</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>...</th>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>610</th>\n",
       "      <td>1</td>\n",
       "      <td>16.259091</td>\n",
       "      <td>894.25</td>\n",
       "      <td>55</td>\n",
       "      <td>460</td>\n",
       "      <td>8.363636</td>\n",
       "      <td>4310</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>611</th>\n",
       "      <td>1</td>\n",
       "      <td>15.994783</td>\n",
       "      <td>367.88</td>\n",
       "      <td>23</td>\n",
       "      <td>254</td>\n",
       "      <td>11.043478</td>\n",
       "      <td>4328</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>612</th>\n",
       "      <td>1</td>\n",
       "      <td>51.000000</td>\n",
       "      <td>51.00</td>\n",
       "      <td>1</td>\n",
       "      <td>20</td>\n",
       "      <td>20.000000</td>\n",
       "      <td>4329</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>613</th>\n",
       "      <td>1</td>\n",
       "      <td>15.568000</td>\n",
       "      <td>77.84</td>\n",
       "      <td>5</td>\n",
       "      <td>28</td>\n",
       "      <td>5.600000</td>\n",
       "      <td>4336</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>614</th>\n",
       "      <td>1</td>\n",
       "      <td>4.160000</td>\n",
       "      <td>208.00</td>\n",
       "      <td>50</td>\n",
       "      <td>142</td>\n",
       "      <td>2.840000</td>\n",
       "      <td>4337</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "<p>614 rows × 7 columns</p>\n",
       "</div>\n",
       "      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-9546f73c-9fbc-4e67-a353-dbd4c3afce3b')\"\n",
       "              title=\"Convert this dataframe to an interactive table.\"\n",
       "              style=\"display:none;\">\n",
       "        \n",
       "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
       "       width=\"24px\">\n",
       "    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n",
       "    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n",
       "  </svg>\n",
       "      </button>\n",
       "      \n",
       "  <style>\n",
       "    .colab-df-container {\n",
       "      display:flex;\n",
       "      flex-wrap:wrap;\n",
       "      gap: 12px;\n",
       "    }\n",
       "\n",
       "    .colab-df-convert {\n",
       "      background-color: #E8F0FE;\n",
       "      border: none;\n",
       "      border-radius: 50%;\n",
       "      cursor: pointer;\n",
       "      display: none;\n",
       "      fill: #1967D2;\n",
       "      height: 32px;\n",
       "      padding: 0 0 0 0;\n",
       "      width: 32px;\n",
       "    }\n",
       "\n",
       "    .colab-df-convert:hover {\n",
       "      background-color: #E2EBFA;\n",
       "      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
       "      fill: #174EA6;\n",
       "    }\n",
       "\n",
       "    [theme=dark] .colab-df-convert {\n",
       "      background-color: #3B4455;\n",
       "      fill: #D2E3FC;\n",
       "    }\n",
       "\n",
       "    [theme=dark] .colab-df-convert:hover {\n",
       "      background-color: #434B5C;\n",
       "      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
       "      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
       "      fill: #FFFFFF;\n",
       "    }\n",
       "  </style>\n",
       "\n",
       "      <script>\n",
       "        const buttonEl =\n",
       "          document.querySelector('#df-9546f73c-9fbc-4e67-a353-dbd4c3afce3b button.colab-df-convert');\n",
       "        buttonEl.style.display =\n",
       "          google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
       "\n",
       "        async function convertToInteractive(key) {\n",
       "          const element = document.querySelector('#df-9546f73c-9fbc-4e67-a353-dbd4c3afce3b');\n",
       "          const dataTable =\n",
       "            await google.colab.kernel.invokeFunction('convertToInteractive',\n",
       "                                                     [key], {});\n",
       "          if (!dataTable) return;\n",
       "\n",
       "          const docLinkHtml = 'Like what you see? Visit the ' +\n",
       "            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n",
       "            + ' to learn more about interactive tables.';\n",
       "          element.innerHTML = '';\n",
       "          dataTable['output_type'] = 'display_data';\n",
       "          await google.colab.output.renderOutput(dataTable, element);\n",
       "          const docLink = document.createElement('div');\n",
       "          docLink.innerHTML = docLinkHtml;\n",
       "          element.appendChild(docLink);\n",
       "        }\n",
       "      </script>\n",
       "    </div>\n",
       "  </div>\n",
       "  "
      ],
      "text/plain": [
       "     No. of visits  Mean_purch  Sum_purch  Item_count  Total_quantity  \\\n",
       "0                1   20.438182     224.82          11             192   \n",
       "1                1   97.600000     683.20           7             148   \n",
       "2                1   17.634667     529.04          30             221   \n",
       "3                1   11.493333     310.32          27             502   \n",
       "4                1   15.354545     168.90          11             173   \n",
       "..             ...         ...        ...         ...             ...   \n",
       "610              1   16.259091     894.25          55             460   \n",
       "611              1   15.994783     367.88          23             254   \n",
       "612              1   51.000000      51.00           1              20   \n",
       "613              1   15.568000      77.84           5              28   \n",
       "614              1    4.160000     208.00          50             142   \n",
       "\n",
       "     Avg_quant  CustomerID  \n",
       "0    17.454545           1  \n",
       "1    21.142857          11  \n",
       "2     7.366667          15  \n",
       "3    18.592593          17  \n",
       "4    15.727273          19  \n",
       "..         ...         ...  \n",
       "610   8.363636        4310  \n",
       "611  11.043478        4328  \n",
       "612  20.000000        4329  \n",
       "613   5.600000        4336  \n",
       "614   2.840000        4337  \n",
       "\n",
       "[614 rows x 7 columns]"
      ]
     },
     "execution_count": 234,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "#Thus the outliers are removed.\n",
    "#Now we again apply the clustering pipeline\n",
    "\n",
    "df_dec2011_person = df_dec2011.copy(deep=True)\n",
    "df_dec2011_person.drop(['cluster_labels'],axis=1,inplace=True)\n",
    "df_dec2011_person\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {
    "colab": {
     "background_save": true,
     "base_uri": "https://localhost:8080/"
    },
    "id": "GAzGnd_vbh1z",
    "outputId": "57013868-6010-4622-b420-3f824db7b49d"
   },
   "outputs": [
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "/usr/local/lib/python3.9/dist-packages/sklearn/cluster/_kmeans.py:870: FutureWarning: The default value of `n_init` will change from 10 to 'auto' in 1.4. Set the value of `n_init` explicitly to suppress the warning\n",
      "  warnings.warn(\n"
     ]
    },
    {
     "data": {
      "text/html": [
       "\n",
       "  <div id=\"df-b78be865-2422-4c01-a5c9-f95243a4969f\">\n",
       "    <div class=\"colab-df-container\">\n",
       "      <div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>No. of visits</th>\n",
       "      <th>Mean_purch</th>\n",
       "      <th>Sum_purch</th>\n",
       "      <th>Item_count</th>\n",
       "      <th>Total_quantity</th>\n",
       "      <th>Avg_quant</th>\n",
       "      <th>CustomerID</th>\n",
       "      <th>cluster_labels</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>1</td>\n",
       "      <td>20.438182</td>\n",
       "      <td>224.82</td>\n",
       "      <td>11</td>\n",
       "      <td>192</td>\n",
       "      <td>17.454545</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>1</td>\n",
       "      <td>97.600000</td>\n",
       "      <td>683.20</td>\n",
       "      <td>7</td>\n",
       "      <td>148</td>\n",
       "      <td>21.142857</td>\n",
       "      <td>11</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>1</td>\n",
       "      <td>17.634667</td>\n",
       "      <td>529.04</td>\n",
       "      <td>30</td>\n",
       "      <td>221</td>\n",
       "      <td>7.366667</td>\n",
       "      <td>15</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>1</td>\n",
       "      <td>11.493333</td>\n",
       "      <td>310.32</td>\n",
       "      <td>27</td>\n",
       "      <td>502</td>\n",
       "      <td>18.592593</td>\n",
       "      <td>17</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>1</td>\n",
       "      <td>15.354545</td>\n",
       "      <td>168.90</td>\n",
       "      <td>11</td>\n",
       "      <td>173</td>\n",
       "      <td>15.727273</td>\n",
       "      <td>19</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>...</th>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>610</th>\n",
       "      <td>1</td>\n",
       "      <td>16.259091</td>\n",
       "      <td>894.25</td>\n",
       "      <td>55</td>\n",
       "      <td>460</td>\n",
       "      <td>8.363636</td>\n",
       "      <td>4310</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>611</th>\n",
       "      <td>1</td>\n",
       "      <td>15.994783</td>\n",
       "      <td>367.88</td>\n",
       "      <td>23</td>\n",
       "      <td>254</td>\n",
       "      <td>11.043478</td>\n",
       "      <td>4328</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>612</th>\n",
       "      <td>1</td>\n",
       "      <td>51.000000</td>\n",
       "      <td>51.00</td>\n",
       "      <td>1</td>\n",
       "      <td>20</td>\n",
       "      <td>20.000000</td>\n",
       "      <td>4329</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>613</th>\n",
       "      <td>1</td>\n",
       "      <td>15.568000</td>\n",
       "      <td>77.84</td>\n",
       "      <td>5</td>\n",
       "      <td>28</td>\n",
       "      <td>5.600000</td>\n",
       "      <td>4336</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>614</th>\n",
       "      <td>1</td>\n",
       "      <td>4.160000</td>\n",
       "      <td>208.00</td>\n",
       "      <td>50</td>\n",
       "      <td>142</td>\n",
       "      <td>2.840000</td>\n",
       "      <td>4337</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "<p>614 rows × 8 columns</p>\n",
       "</div>\n",
       "      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-b78be865-2422-4c01-a5c9-f95243a4969f')\"\n",
       "              title=\"Convert this dataframe to an interactive table.\"\n",
       "              style=\"display:none;\">\n",
       "        \n",
       "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
       "       width=\"24px\">\n",
       "    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n",
       "    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n",
       "  </svg>\n",
       "      </button>\n",
       "      \n",
       "  <style>\n",
       "    .colab-df-container {\n",
       "      display:flex;\n",
       "      flex-wrap:wrap;\n",
       "      gap: 12px;\n",
       "    }\n",
       "\n",
       "    .colab-df-convert {\n",
       "      background-color: #E8F0FE;\n",
       "      border: none;\n",
       "      border-radius: 50%;\n",
       "      cursor: pointer;\n",
       "      display: none;\n",
       "      fill: #1967D2;\n",
       "      height: 32px;\n",
       "      padding: 0 0 0 0;\n",
       "      width: 32px;\n",
       "    }\n",
       "\n",
       "    .colab-df-convert:hover {\n",
       "      background-color: #E2EBFA;\n",
       "      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
       "      fill: #174EA6;\n",
       "    }\n",
       "\n",
       "    [theme=dark] .colab-df-convert {\n",
       "      background-color: #3B4455;\n",
       "      fill: #D2E3FC;\n",
       "    }\n",
       "\n",
       "    [theme=dark] .colab-df-convert:hover {\n",
       "      background-color: #434B5C;\n",
       "      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
       "      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
       "      fill: #FFFFFF;\n",
       "    }\n",
       "  </style>\n",
       "\n",
       "      <script>\n",
       "        const buttonEl =\n",
       "          document.querySelector('#df-b78be865-2422-4c01-a5c9-f95243a4969f button.colab-df-convert');\n",
       "        buttonEl.style.display =\n",
       "          google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
       "\n",
       "        async function convertToInteractive(key) {\n",
       "          const element = document.querySelector('#df-b78be865-2422-4c01-a5c9-f95243a4969f');\n",
       "          const dataTable =\n",
       "            await google.colab.kernel.invokeFunction('convertToInteractive',\n",
       "                                                     [key], {});\n",
       "          if (!dataTable) return;\n",
       "\n",
       "          const docLinkHtml = 'Like what you see? Visit the ' +\n",
       "            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n",
       "            + ' to learn more about interactive tables.';\n",
       "          element.innerHTML = '';\n",
       "          dataTable['output_type'] = 'display_data';\n",
       "          await google.colab.output.renderOutput(dataTable, element);\n",
       "          const docLink = document.createElement('div');\n",
       "          docLink.innerHTML = docLinkHtml;\n",
       "          element.appendChild(docLink);\n",
       "        }\n",
       "      </script>\n",
       "    </div>\n",
       "  </div>\n",
       "  "
      ],
      "text/plain": [
       "     No. of visits  Mean_purch  Sum_purch  Item_count  Total_quantity  \\\n",
       "0                1   20.438182     224.82          11             192   \n",
       "1                1   97.600000     683.20           7             148   \n",
       "2                1   17.634667     529.04          30             221   \n",
       "3                1   11.493333     310.32          27             502   \n",
       "4                1   15.354545     168.90          11             173   \n",
       "..             ...         ...        ...         ...             ...   \n",
       "610              1   16.259091     894.25          55             460   \n",
       "611              1   15.994783     367.88          23             254   \n",
       "612              1   51.000000      51.00           1              20   \n",
       "613              1   15.568000      77.84           5              28   \n",
       "614              1    4.160000     208.00          50             142   \n",
       "\n",
       "     Avg_quant  CustomerID  cluster_labels  \n",
       "0    17.454545           1               1  \n",
       "1    21.142857          11               1  \n",
       "2     7.366667          15               1  \n",
       "3    18.592593          17               1  \n",
       "4    15.727273          19               1  \n",
       "..         ...         ...             ...  \n",
       "610   8.363636        4310               0  \n",
       "611  11.043478        4328               0  \n",
       "612  20.000000        4329               0  \n",
       "613   5.600000        4336               0  \n",
       "614   2.840000        4337               0  \n",
       "\n",
       "[614 rows x 8 columns]"
      ]
     },
     "execution_count": 235,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "df_dec2011_new = df_cluster_labels(df_dec2011_person,3)\n",
    "df_dec2011_new"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {
    "colab": {
     "background_save": true,
     "base_uri": "https://localhost:8080/"
    },
    "id": "4xIQABt0pqDX",
    "outputId": "1e9be690-f41b-468e-c79b-b4e5dcac3fd2"
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "The Silhouette Score is :- 0.5562745719383377\n"
     ]
    }
   ],
   "source": [
    "silhte_score_dec2011_new = silhouette_score(df_dec2011_person, df_dec2011_new['cluster_labels'])\n",
    "print(\"The Silhouette Score is :- \"+str(silhte_score_dec2011_new))\n",
    "#Indicates that silhouette score is realistic for dataset without outliers"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {
    "colab": {
     "background_save": true,
     "base_uri": "https://localhost:8080/"
    },
    "id": "wilBX3IjblrI",
    "outputId": "bd63f7cd-e708-4ffb-a40b-a6a46ec82602"
   },
   "outputs": [
    {
     "data": {
      "text/plain": [
       "1    320\n",
       "0    286\n",
       "2      8\n",
       "Name: cluster_labels, dtype: int64"
      ]
     },
     "execution_count": 237,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "df_dec2011_new['cluster_labels'].value_counts()\n",
    "#These are comparatively good clusters"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {
    "colab": {
     "background_save": true,
     "base_uri": "https://localhost:8080/"
    },
    "id": "VcSIKGqYbql4",
    "outputId": "127cf697-8248-4fe1-fde7-fdfee55c3e43"
   },
   "outputs": [
    {
     "data": {
      "image/png": "",
      "text/plain": [
       "<Figure size 640x480 with 1 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "plt.scatter(df_dec2011_new['Mean_purch'], df_dec2011_new['Sum_purch'], c=df_dec2011_new['cluster_labels'], cmap='viridis')\n",
    "plt.title(\"For Dec 2011 (After removing outliers)\")\n",
    "plt.xlabel('Mean_purch')\n",
    "plt.ylabel('Sum_purch')\n",
    "plt.show()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {
    "colab": {
     "background_save": true
    },
    "id": "C1nG2ELXbv2m"
   },
   "outputs": [],
   "source": [
    "dec2011 = descrip_dict(og_dec2011,df_dec2011_new)\n",
    "dec2011 = processlis(dec2011)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {
    "colab": {
     "background_save": true,
     "base_uri": "https://localhost:8080/"
    },
    "id": "N2q2cXjHbzTW",
    "outputId": "ef226b10-bfad-4790-faea-d250f0655395"
   },
   "outputs": [
    {
     "data": {
      "text/plain": [
       "[     CustomerID                                        Description\n",
       " 0             1  [CLASSIC CHROME BICYCLE BELL , BICYCLE PUNCTUR...\n",
       " 1            11  [EDWARDIAN PARASOL RED, EDWARDIAN PARASOL NATU...\n",
       " 2            15  [SET OF 4 KNICK KNACK TINS LONDON , SET OF 4 K...\n",
       " 3            17  [BLUE POLKADOT WRAP, PINK POLKADOT WRAP , WRAP...\n",
       " 4            19  [SET OF 6 3D KIT CARDS FOR KIDS, SLEEPING CAT ...\n",
       " ..          ...                                                ...\n",
       " 315        2163  [HEART WOODEN CHRISTMAS DECORATION, IVORY WICK...\n",
       " 316        2168  [CERAMIC STRAWBERRY DESIGN MUG, RED HEART SHAP...\n",
       " 317        2177  [SWEETHEART WIRE MAGAZINE RACK, EDWARDIAN PARA...\n",
       " 318        2183  [MIRRORED WALL ART SNOWFLAKES, MIRRORED WALL A...\n",
       " 319        2212  [12 COLOURED PARTY BALLOONS, 6 ROCKET BALLOONS...\n",
       " \n",
       " [320 rows x 2 columns],\n",
       "      CustomerID                                        Description\n",
       " 0          2201  [3 DRAWER ANTIQUE WHITE WOOD CABINET, CREAM SW...\n",
       " 1          2223  [IVORY DINER WALL CLOCK, BLUE DINER WALL CLOCK...\n",
       " 2          2227  [RED DINER WALL CLOCK, BULL DOG BOTTLE TOP WAL...\n",
       " 3          2235  [ROTATING SILVER ANGELS T-LIGHT HLDR, VINTAGE ...\n",
       " 4          2242  [VINTAGE HEADS AND TAILS CARD GAME , HOLIDAY F...\n",
       " ..          ...                                                ...\n",
       " 281        4310  [WOODLAND SMALL RED FELT HEART, WOODLAND SMALL...\n",
       " 282        4328  [6 RIBBONS ELEGANT CHRISTMAS , 6 RIBBONS SHIMM...\n",
       " 283        4329                           [ART LIGHTS,FUNK MONKEY]\n",
       " 284        4336  [REGENCY CAKESTAND 3 TIER, ROSES REGENCY TEACU...\n",
       " 285        4337  [FELTCRAFT HAIRBAND RED AND BLUE, PACK OF 12 D...\n",
       " \n",
       " [286 rows x 2 columns]]"
      ]
     },
     "execution_count": 240,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "dec2011"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {
    "colab": {
     "background_save": true,
     "base_uri": "https://localhost:8080/"
    },
    "id": "_zl51rq-QEqz",
    "outputId": "770153f3-3aaa-4913-8986-034561f4fc59"
   },
   "outputs": [
    {
     "data": {
      "image/png": "",
      "text/plain": [
       "<Figure size 640x480 with 1 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "data": {
      "image/png": "",
      "text/plain": [
       "<Figure size 500x500 with 1 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "(614, 4)\n",
      "(1, 4)\n",
      "(1, 4)\n"
     ]
    },
    {
     "data": {
      "image/png": "",
      "text/plain": [
       "<Figure size 640x480 with 1 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "data": {
      "image/png": "",
      "text/plain": [
       "<Figure size 500x500 with 1 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "(339, 5)\n",
      "(249, 5)\n",
      "(8, 5)\n",
      "(18, 5)\n"
     ]
    },
    {
     "data": {
      "text/plain": [
       "[     CustomerID                                        Description\n",
       " 0             1  [CLASSIC CHROME BICYCLE BELL , BICYCLE PUNCTUR...\n",
       " 1            11  [EDWARDIAN PARASOL RED, EDWARDIAN PARASOL NATU...\n",
       " 2            15  [SET OF 4 KNICK KNACK TINS LONDON , SET OF 4 K...\n",
       " 3            17  [BLUE POLKADOT WRAP, PINK POLKADOT WRAP , WRAP...\n",
       " 4            19  [SET OF 6 3D KIT CARDS FOR KIDS, SLEEPING CAT ...\n",
       " ..          ...                                                ...\n",
       " 334        2457  [GARDENERS KNEELING PAD KEEP CALM , BOX OF VIN...\n",
       " 335        2459  [BUNNY WOODEN PAINTED WITH BIRD , EASTER DECOR...\n",
       " 336        2462  [REGENCY CAKESTAND 3 TIER, ALARM CLOCK BAKELIK...\n",
       " 337        2519  [JIGSAW RABBIT AND BIRDHOUSE, JIGSAW TREE WITH...\n",
       " 338        2668  [SET OF 4 NAPKIN CHARMS LEAVES   , REX CASH+CA...\n",
       " \n",
       " [339 rows x 2 columns],\n",
       "      CustomerID                                        Description\n",
       " 0          2467  [MINI LIGHTS WOODLAND MUSHROOMS, DARK BIRD HOU...\n",
       " 1          2504  [FLORAL FOLK STATIONERY SET, JUMBO BAG PAISLEY...\n",
       " 2          2536  [SPOTTY BUNTING, REGENCY TEA PLATE ROSES , REG...\n",
       " 3          2543  [BLACK TEA TOWEL CLASSIC DESIGN, ASSORTED BOTT...\n",
       " 4          2558  [IVORY WICKER HEART LARGE, LARGE ROUND WICKER ...\n",
       " ..          ...                                                ...\n",
       " 244        4305  [RED SPOT CERAMIC DRAWER KNOB, GREEN DRAWER KN...\n",
       " 245        4310  [WOODLAND SMALL RED FELT HEART, WOODLAND SMALL...\n",
       " 246        4328  [6 RIBBONS ELEGANT CHRISTMAS , 6 RIBBONS SHIMM...\n",
       " 247        4329                           [ART LIGHTS,FUNK MONKEY]\n",
       " 248        4336  [REGENCY CAKESTAND 3 TIER, ROSES REGENCY TEACU...\n",
       " \n",
       " [249 rows x 2 columns]]"
      ]
     },
     "execution_count": 241,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "\n",
    "pca = PCA(n_components = 3)\n",
    "pca.fit(X = dvt_dec2011)\n",
    "new_dvt = pca.transform(dvt_dec2011)\n",
    "\n",
    "new_dvt = pd.DataFrame(data = new_dvt,columns = ['X0','X1','X2'])\n",
    "model = AgglomerativeClustering(distance_threshold=0, n_clusters=None, linkage='ward').fit(new_dvt)\n",
    "\n",
    "plot_dendrogram(model, truncate_mode=\"level\", p=4)\n",
    "\n",
    "dict_dec2011 =  Agglocls(new_dvt,3)\n",
    "\n",
    "final_dvt_dec2011 = dict_dec2011[0]\n",
    "pca_dec2011 = PCA(n_components = 3)\n",
    "pca_dec2011.fit(X = final_dvt_dec2011)\n",
    "final_dvt_dec2011 = pca_dec2011.transform(final_dvt_dec2011)\n",
    "final_dvt_dec2011 = pd.DataFrame(data = final_dvt_dec2011,columns = ['X0','X1','X2'])\n",
    "AggloDendo(final_dvt_dec2011)\n",
    "\n",
    "dict_dec2011_final =  AggloPca(final_dvt_dec2011,4,dvt_dec2011,'X1','X0')\n",
    "\n",
    "dec2011_agg = descrip_dict(og_dec2011,final_dvt_dec2011)\n",
    "dec2011_agg = processlis(dec2011_agg)\n",
    "dec2011_agg\n",
    "\n",
    "\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {
    "colab": {
     "background_save": true
    },
    "id": "K3PeLBoAyLv3"
   },
   "outputs": [],
   "source": [
    "Cluster_dict['dec2011'] = (len(dec2011),len(dec2011_agg))\n",
    "dicti_2011dec = {}\n",
    "klis = []\n",
    "for i in range(Cluster_dict['dec2011'][0]):\n",
    "  temp = apriori_rules(dec2011[i],0.075)\n",
    "  klis.append(temp)\n",
    "alis = []\n",
    "for i in range(Cluster_dict['dec2011'][1]):\n",
    "  temp = apriori_rules(dec2011_agg[i],0.075)\n",
    "  alis.append(temp)\n",
    "#apriori_rules(1_agg[0],0.075)\n",
    "dicti_2011dec['K-means'] = klis\n",
    "dicti_2011dec['Agglo'] = alis\n",
    "\n",
    "Rules_dict['dec2011'] = dicti_2011dec"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {
    "id": "gp7_do6Gb4yK"
   },
   "source": [
    "# CLUSTERING ON THE BASIS OF DATAFRAMES SPLIT BY TIME-SLOTS\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {
    "colab": {
     "background_save": true,
     "base_uri": "https://localhost:8080/"
    },
    "id": "HCZDJu-Kcj2Z",
    "outputId": "8b5dd3ca-1dde-4992-c117-39e0c3f0eff9"
   },
   "outputs": [
    {
     "data": {
      "text/plain": [
       "['04:00-07:59', '08:00-11:59', '12:00-15:59', '16:00-19:59']"
      ]
     },
     "execution_count": 243,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "time"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {
    "colab": {
     "background_save": true
    },
    "id": "YgCYtwnLiUpT"
   },
   "outputs": [],
   "source": [
    "def get_n_outlier_labels(dkf,n):\n",
    "\n",
    "  #Returns a list of size n whose elements are the labels of outliers\n",
    "  \n",
    "  k = list(dkf['cluster_labels'].unique())\n",
    "  values = list(dkf['cluster_labels'])\n",
    "  l=[]\n",
    "  for i in k:\n",
    "    l.append(values.count(i))\n",
    "\n",
    "  l = np.array(l)\n",
    "  k = np.array(k)\n",
    "  sorted_idx = np.argsort(l)\n",
    "  sorted_l = l[sorted_idx]\n",
    "  sorted_k = k[sorted_idx]\n",
    "  op = list(sorted_k[:n])\n",
    "  return(op) \n",
    "\n",
    "#We are finding only 1 outlier as after observation\n",
    "#We find only 1"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {
    "colab": {
     "background_save": true
    },
    "id": "bdmm2fH9wA4A"
   },
   "outputs": [],
   "source": [
    "def get_1_outliers(dkf):\n",
    "\n",
    "  k = list(dkf['cluster_labels'].unique())\n",
    "  values = list(dkf['cluster_labels'])\n",
    "  l=[]\n",
    "\n",
    "  for i in k:\n",
    "    l.append(values.count(i))\n",
    "\n",
    "  a = k[l.index(min(l))]\n",
    " \n",
    "  return(a) "
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {
    "id": "hJF4T1PUb1f0"
   },
   "source": [
    "## For Time: 4:00 - 07:59"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {
    "colab": {
     "background_save": true,
     "base_uri": "https://localhost:8080/",
     "height": 424
    },
    "id": "GzcdSslob37a",
    "outputId": "1830c7ad-0740-4f19-bae0-7368ebdb0717"
   },
   "outputs": [
    {
     "data": {
      "text/html": [
       "\n",
       "  <div id=\"df-7ebb8cee-2cfe-4156-88ff-3e191c0aef02\">\n",
       "    <div class=\"colab-df-container\">\n",
       "      <div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>InvoiceNo</th>\n",
       "      <th>StockCode</th>\n",
       "      <th>Description</th>\n",
       "      <th>Quantity</th>\n",
       "      <th>UnitPrice</th>\n",
       "      <th>CustomerID</th>\n",
       "      <th>Country</th>\n",
       "      <th>year-month_intervals</th>\n",
       "      <th>Total Price</th>\n",
       "      <th>Money_bins</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>536365</td>\n",
       "      <td>85123A</td>\n",
       "      <td>WHITE HANGING HEART T-LIGHT HOLDER</td>\n",
       "      <td>6</td>\n",
       "      <td>2.55</td>\n",
       "      <td>4017</td>\n",
       "      <td>United Kingdom</td>\n",
       "      <td>0</td>\n",
       "      <td>15.30</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>536365</td>\n",
       "      <td>71053</td>\n",
       "      <td>WHITE METAL LANTERN</td>\n",
       "      <td>6</td>\n",
       "      <td>3.39</td>\n",
       "      <td>4017</td>\n",
       "      <td>United Kingdom</td>\n",
       "      <td>0</td>\n",
       "      <td>20.34</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>536365</td>\n",
       "      <td>84406B</td>\n",
       "      <td>CREAM CUPID HEARTS COAT HANGER</td>\n",
       "      <td>8</td>\n",
       "      <td>2.75</td>\n",
       "      <td>4017</td>\n",
       "      <td>United Kingdom</td>\n",
       "      <td>0</td>\n",
       "      <td>22.00</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>536365</td>\n",
       "      <td>84029G</td>\n",
       "      <td>KNITTED UNION FLAG HOT WATER BOTTLE</td>\n",
       "      <td>6</td>\n",
       "      <td>3.39</td>\n",
       "      <td>4017</td>\n",
       "      <td>United Kingdom</td>\n",
       "      <td>0</td>\n",
       "      <td>20.34</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>536365</td>\n",
       "      <td>84029E</td>\n",
       "      <td>RED WOOLLY HOTTIE WHITE HEART.</td>\n",
       "      <td>6</td>\n",
       "      <td>3.39</td>\n",
       "      <td>4017</td>\n",
       "      <td>United Kingdom</td>\n",
       "      <td>0</td>\n",
       "      <td>20.34</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>...</th>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>540384</th>\n",
       "      <td>581478</td>\n",
       "      <td>22791</td>\n",
       "      <td>T-LIGHT GLASS FLUTED ANTIQUE</td>\n",
       "      <td>12</td>\n",
       "      <td>1.25</td>\n",
       "      <td>3663</td>\n",
       "      <td>United Kingdom</td>\n",
       "      <td>12</td>\n",
       "      <td>15.00</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>540385</th>\n",
       "      <td>581478</td>\n",
       "      <td>21326</td>\n",
       "      <td>AGED GLASS SILVER T-LIGHT HOLDER</td>\n",
       "      <td>12</td>\n",
       "      <td>0.65</td>\n",
       "      <td>3663</td>\n",
       "      <td>United Kingdom</td>\n",
       "      <td>12</td>\n",
       "      <td>7.80</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>540386</th>\n",
       "      <td>581478</td>\n",
       "      <td>22170</td>\n",
       "      <td>PICTURE FRAME WOOD TRIPLE PORTRAIT</td>\n",
       "      <td>8</td>\n",
       "      <td>6.75</td>\n",
       "      <td>3663</td>\n",
       "      <td>United Kingdom</td>\n",
       "      <td>12</td>\n",
       "      <td>54.00</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>540387</th>\n",
       "      <td>581478</td>\n",
       "      <td>23082</td>\n",
       "      <td>SET 6 PAPER TABLE LANTERN HEARTS</td>\n",
       "      <td>6</td>\n",
       "      <td>3.75</td>\n",
       "      <td>3663</td>\n",
       "      <td>United Kingdom</td>\n",
       "      <td>12</td>\n",
       "      <td>22.50</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>540388</th>\n",
       "      <td>581478</td>\n",
       "      <td>22909</td>\n",
       "      <td>SET OF 20 VINTAGE CHRISTMAS NAPKINS</td>\n",
       "      <td>24</td>\n",
       "      <td>0.85</td>\n",
       "      <td>3663</td>\n",
       "      <td>United Kingdom</td>\n",
       "      <td>12</td>\n",
       "      <td>20.40</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "<p>9185 rows × 10 columns</p>\n",
       "</div>\n",
       "      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-7ebb8cee-2cfe-4156-88ff-3e191c0aef02')\"\n",
       "              title=\"Convert this dataframe to an interactive table.\"\n",
       "              style=\"display:none;\">\n",
       "        \n",
       "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
       "       width=\"24px\">\n",
       "    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n",
       "    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n",
       "  </svg>\n",
       "      </button>\n",
       "      \n",
       "  <style>\n",
       "    .colab-df-container {\n",
       "      display:flex;\n",
       "      flex-wrap:wrap;\n",
       "      gap: 12px;\n",
       "    }\n",
       "\n",
       "    .colab-df-convert {\n",
       "      background-color: #E8F0FE;\n",
       "      border: none;\n",
       "      border-radius: 50%;\n",
       "      cursor: pointer;\n",
       "      display: none;\n",
       "      fill: #1967D2;\n",
       "      height: 32px;\n",
       "      padding: 0 0 0 0;\n",
       "      width: 32px;\n",
       "    }\n",
       "\n",
       "    .colab-df-convert:hover {\n",
       "      background-color: #E2EBFA;\n",
       "      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
       "      fill: #174EA6;\n",
       "    }\n",
       "\n",
       "    [theme=dark] .colab-df-convert {\n",
       "      background-color: #3B4455;\n",
       "      fill: #D2E3FC;\n",
       "    }\n",
       "\n",
       "    [theme=dark] .colab-df-convert:hover {\n",
       "      background-color: #434B5C;\n",
       "      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
       "      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
       "      fill: #FFFFFF;\n",
       "    }\n",
       "  </style>\n",
       "\n",
       "      <script>\n",
       "        const buttonEl =\n",
       "          document.querySelector('#df-7ebb8cee-2cfe-4156-88ff-3e191c0aef02 button.colab-df-convert');\n",
       "        buttonEl.style.display =\n",
       "          google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
       "\n",
       "        async function convertToInteractive(key) {\n",
       "          const element = document.querySelector('#df-7ebb8cee-2cfe-4156-88ff-3e191c0aef02');\n",
       "          const dataTable =\n",
       "            await google.colab.kernel.invokeFunction('convertToInteractive',\n",
       "                                                     [key], {});\n",
       "          if (!dataTable) return;\n",
       "\n",
       "          const docLinkHtml = 'Like what you see? Visit the ' +\n",
       "            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n",
       "            + ' to learn more about interactive tables.';\n",
       "          element.innerHTML = '';\n",
       "          dataTable['output_type'] = 'display_data';\n",
       "          await google.colab.output.renderOutput(dataTable, element);\n",
       "          const docLink = document.createElement('div');\n",
       "          docLink.innerHTML = docLinkHtml;\n",
       "          element.appendChild(docLink);\n",
       "        }\n",
       "      </script>\n",
       "    </div>\n",
       "  </div>\n",
       "  "
      ],
      "text/plain": [
       "       InvoiceNo StockCode                          Description  Quantity  \\\n",
       "0         536365    85123A   WHITE HANGING HEART T-LIGHT HOLDER         6   \n",
       "1         536365     71053                  WHITE METAL LANTERN         6   \n",
       "2         536365    84406B       CREAM CUPID HEARTS COAT HANGER         8   \n",
       "3         536365    84029G  KNITTED UNION FLAG HOT WATER BOTTLE         6   \n",
       "4         536365    84029E       RED WOOLLY HOTTIE WHITE HEART.         6   \n",
       "...          ...       ...                                  ...       ...   \n",
       "540384    581478     22791         T-LIGHT GLASS FLUTED ANTIQUE        12   \n",
       "540385    581478     21326     AGED GLASS SILVER T-LIGHT HOLDER        12   \n",
       "540386    581478     22170   PICTURE FRAME WOOD TRIPLE PORTRAIT         8   \n",
       "540387    581478     23082    SET 6 PAPER TABLE LANTERN HEARTS          6   \n",
       "540388    581478     22909  SET OF 20 VINTAGE CHRISTMAS NAPKINS        24   \n",
       "\n",
       "        UnitPrice  CustomerID         Country  year-month_intervals  \\\n",
       "0            2.55        4017  United Kingdom                     0   \n",
       "1            3.39        4017  United Kingdom                     0   \n",
       "2            2.75        4017  United Kingdom                     0   \n",
       "3            3.39        4017  United Kingdom                     0   \n",
       "4            3.39        4017  United Kingdom                     0   \n",
       "...           ...         ...             ...                   ...   \n",
       "540384       1.25        3663  United Kingdom                    12   \n",
       "540385       0.65        3663  United Kingdom                    12   \n",
       "540386       6.75        3663  United Kingdom                    12   \n",
       "540387       3.75        3663  United Kingdom                    12   \n",
       "540388       0.85        3663  United Kingdom                    12   \n",
       "\n",
       "        Total Price  Money_bins  \n",
       "0             15.30           0  \n",
       "1             20.34           0  \n",
       "2             22.00           0  \n",
       "3             20.34           0  \n",
       "4             20.34           0  \n",
       "...             ...         ...  \n",
       "540384        15.00           0  \n",
       "540385         7.80           0  \n",
       "540386        54.00           0  \n",
       "540387        22.50           0  \n",
       "540388        20.40           0  \n",
       "\n",
       "[9185 rows x 10 columns]"
      ]
     },
     "execution_count": 246,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "og_04_08 = df_list_time_intervals[0]\n",
    "og_04_08"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {
    "colab": {
     "background_save": true,
     "base_uri": "https://localhost:8080/",
     "height": 424
    },
    "id": "5JwYuU_Cdpc_",
    "outputId": "81946b16-9344-4f02-b451-3feb66862763"
   },
   "outputs": [
    {
     "data": {
      "text/html": [
       "\n",
       "  <div id=\"df-1b832fce-7cf7-4fc6-a6e1-3ccf4a2f08c6\">\n",
       "    <div class=\"colab-df-container\">\n",
       "      <div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>No. of visits</th>\n",
       "      <th>Mean_purch</th>\n",
       "      <th>Sum_purch</th>\n",
       "      <th>Item_count</th>\n",
       "      <th>Total_quantity</th>\n",
       "      <th>Avg_quant</th>\n",
       "      <th>CustomerID</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>1</td>\n",
       "      <td>26.586818</td>\n",
       "      <td>584.91</td>\n",
       "      <td>22</td>\n",
       "      <td>277</td>\n",
       "      <td>12.590909</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>1</td>\n",
       "      <td>29.175000</td>\n",
       "      <td>58.35</td>\n",
       "      <td>2</td>\n",
       "      <td>5</td>\n",
       "      <td>2.500000</td>\n",
       "      <td>9</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>2</td>\n",
       "      <td>22.826000</td>\n",
       "      <td>456.52</td>\n",
       "      <td>17</td>\n",
       "      <td>111</td>\n",
       "      <td>5.550000</td>\n",
       "      <td>31</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>1</td>\n",
       "      <td>22.506154</td>\n",
       "      <td>292.58</td>\n",
       "      <td>13</td>\n",
       "      <td>64</td>\n",
       "      <td>4.923077</td>\n",
       "      <td>32</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>1</td>\n",
       "      <td>148.566667</td>\n",
       "      <td>891.40</td>\n",
       "      <td>6</td>\n",
       "      <td>637</td>\n",
       "      <td>106.166667</td>\n",
       "      <td>38</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>...</th>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>442</th>\n",
       "      <td>1</td>\n",
       "      <td>20.523137</td>\n",
       "      <td>1046.68</td>\n",
       "      <td>51</td>\n",
       "      <td>872</td>\n",
       "      <td>17.098039</td>\n",
       "      <td>4303</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>443</th>\n",
       "      <td>1</td>\n",
       "      <td>18.083333</td>\n",
       "      <td>108.50</td>\n",
       "      <td>6</td>\n",
       "      <td>64</td>\n",
       "      <td>10.666667</td>\n",
       "      <td>4304</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>444</th>\n",
       "      <td>1</td>\n",
       "      <td>36.520000</td>\n",
       "      <td>109.56</td>\n",
       "      <td>3</td>\n",
       "      <td>36</td>\n",
       "      <td>12.000000</td>\n",
       "      <td>4308</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>445</th>\n",
       "      <td>1</td>\n",
       "      <td>21.440000</td>\n",
       "      <td>214.40</td>\n",
       "      <td>10</td>\n",
       "      <td>92</td>\n",
       "      <td>9.200000</td>\n",
       "      <td>4318</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>446</th>\n",
       "      <td>13</td>\n",
       "      <td>15.376228</td>\n",
       "      <td>1752.89</td>\n",
       "      <td>105</td>\n",
       "      <td>872</td>\n",
       "      <td>7.649123</td>\n",
       "      <td>4339</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "<p>447 rows × 7 columns</p>\n",
       "</div>\n",
       "      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-1b832fce-7cf7-4fc6-a6e1-3ccf4a2f08c6')\"\n",
       "              title=\"Convert this dataframe to an interactive table.\"\n",
       "              style=\"display:none;\">\n",
       "        \n",
       "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
       "       width=\"24px\">\n",
       "    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n",
       "    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n",
       "  </svg>\n",
       "      </button>\n",
       "      \n",
       "  <style>\n",
       "    .colab-df-container {\n",
       "      display:flex;\n",
       "      flex-wrap:wrap;\n",
       "      gap: 12px;\n",
       "    }\n",
       "\n",
       "    .colab-df-convert {\n",
       "      background-color: #E8F0FE;\n",
       "      border: none;\n",
       "      border-radius: 50%;\n",
       "      cursor: pointer;\n",
       "      display: none;\n",
       "      fill: #1967D2;\n",
       "      height: 32px;\n",
       "      padding: 0 0 0 0;\n",
       "      width: 32px;\n",
       "    }\n",
       "\n",
       "    .colab-df-convert:hover {\n",
       "      background-color: #E2EBFA;\n",
       "      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
       "      fill: #174EA6;\n",
       "    }\n",
       "\n",
       "    [theme=dark] .colab-df-convert {\n",
       "      background-color: #3B4455;\n",
       "      fill: #D2E3FC;\n",
       "    }\n",
       "\n",
       "    [theme=dark] .colab-df-convert:hover {\n",
       "      background-color: #434B5C;\n",
       "      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
       "      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
       "      fill: #FFFFFF;\n",
       "    }\n",
       "  </style>\n",
       "\n",
       "      <script>\n",
       "        const buttonEl =\n",
       "          document.querySelector('#df-1b832fce-7cf7-4fc6-a6e1-3ccf4a2f08c6 button.colab-df-convert');\n",
       "        buttonEl.style.display =\n",
       "          google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
       "\n",
       "        async function convertToInteractive(key) {\n",
       "          const element = document.querySelector('#df-1b832fce-7cf7-4fc6-a6e1-3ccf4a2f08c6');\n",
       "          const dataTable =\n",
       "            await google.colab.kernel.invokeFunction('convertToInteractive',\n",
       "                                                     [key], {});\n",
       "          if (!dataTable) return;\n",
       "\n",
       "          const docLinkHtml = 'Like what you see? Visit the ' +\n",
       "            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n",
       "            + ' to learn more about interactive tables.';\n",
       "          element.innerHTML = '';\n",
       "          dataTable['output_type'] = 'display_data';\n",
       "          await google.colab.output.renderOutput(dataTable, element);\n",
       "          const docLink = document.createElement('div');\n",
       "          docLink.innerHTML = docLinkHtml;\n",
       "          element.appendChild(docLink);\n",
       "        }\n",
       "      </script>\n",
       "    </div>\n",
       "  </div>\n",
       "  "
      ],
      "text/plain": [
       "     No. of visits  Mean_purch  Sum_purch  Item_count  Total_quantity  \\\n",
       "0                1   26.586818     584.91          22             277   \n",
       "1                1   29.175000      58.35           2               5   \n",
       "2                2   22.826000     456.52          17             111   \n",
       "3                1   22.506154     292.58          13              64   \n",
       "4                1  148.566667     891.40           6             637   \n",
       "..             ...         ...        ...         ...             ...   \n",
       "442              1   20.523137    1046.68          51             872   \n",
       "443              1   18.083333     108.50           6              64   \n",
       "444              1   36.520000     109.56           3              36   \n",
       "445              1   21.440000     214.40          10              92   \n",
       "446             13   15.376228    1752.89         105             872   \n",
       "\n",
       "      Avg_quant  CustomerID  \n",
       "0     12.590909           1  \n",
       "1      2.500000           9  \n",
       "2      5.550000          31  \n",
       "3      4.923077          32  \n",
       "4    106.166667          38  \n",
       "..          ...         ...  \n",
       "442   17.098039        4303  \n",
       "443   10.666667        4304  \n",
       "444   12.000000        4308  \n",
       "445    9.200000        4318  \n",
       "446    7.649123        4339  \n",
       "\n",
       "[447 rows x 7 columns]"
      ]
     },
     "execution_count": 247,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "dvt_04_08 = person_df(og_04_08 )        #Our function gives such a dataframe by which we can form clusters using KMeans\n",
    "dvt_04_08 "
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {
    "colab": {
     "background_save": true,
     "base_uri": "https://localhost:8080/",
     "height": 478
    },
    "id": "L3cc_geid5Pb",
    "outputId": "7de190b6-18ae-45b4-9b56-9d9e48023908"
   },
   "outputs": [
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "/usr/local/lib/python3.9/dist-packages/sklearn/cluster/_kmeans.py:870: FutureWarning: The default value of `n_init` will change from 10 to 'auto' in 1.4. Set the value of `n_init` explicitly to suppress the warning\n",
      "  warnings.warn(\n"
     ]
    },
    {
     "data": {
      "text/html": [
       "\n",
       "  <div id=\"df-0dfa1d3d-2eaf-4bf3-95cc-75c7a7ca2fbf\">\n",
       "    <div class=\"colab-df-container\">\n",
       "      <div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>No. of visits</th>\n",
       "      <th>Mean_purch</th>\n",
       "      <th>Sum_purch</th>\n",
       "      <th>Item_count</th>\n",
       "      <th>Total_quantity</th>\n",
       "      <th>Avg_quant</th>\n",
       "      <th>CustomerID</th>\n",
       "      <th>cluster_labels</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>1</td>\n",
       "      <td>26.586818</td>\n",
       "      <td>584.91</td>\n",
       "      <td>22</td>\n",
       "      <td>277</td>\n",
       "      <td>12.590909</td>\n",
       "      <td>1</td>\n",
       "      <td>2</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>1</td>\n",
       "      <td>29.175000</td>\n",
       "      <td>58.35</td>\n",
       "      <td>2</td>\n",
       "      <td>5</td>\n",
       "      <td>2.500000</td>\n",
       "      <td>9</td>\n",
       "      <td>2</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>2</td>\n",
       "      <td>22.826000</td>\n",
       "      <td>456.52</td>\n",
       "      <td>17</td>\n",
       "      <td>111</td>\n",
       "      <td>5.550000</td>\n",
       "      <td>31</td>\n",
       "      <td>2</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>1</td>\n",
       "      <td>22.506154</td>\n",
       "      <td>292.58</td>\n",
       "      <td>13</td>\n",
       "      <td>64</td>\n",
       "      <td>4.923077</td>\n",
       "      <td>32</td>\n",
       "      <td>2</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>1</td>\n",
       "      <td>148.566667</td>\n",
       "      <td>891.40</td>\n",
       "      <td>6</td>\n",
       "      <td>637</td>\n",
       "      <td>106.166667</td>\n",
       "      <td>38</td>\n",
       "      <td>2</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>...</th>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>442</th>\n",
       "      <td>1</td>\n",
       "      <td>20.523137</td>\n",
       "      <td>1046.68</td>\n",
       "      <td>51</td>\n",
       "      <td>872</td>\n",
       "      <td>17.098039</td>\n",
       "      <td>4303</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>443</th>\n",
       "      <td>1</td>\n",
       "      <td>18.083333</td>\n",
       "      <td>108.50</td>\n",
       "      <td>6</td>\n",
       "      <td>64</td>\n",
       "      <td>10.666667</td>\n",
       "      <td>4304</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>444</th>\n",
       "      <td>1</td>\n",
       "      <td>36.520000</td>\n",
       "      <td>109.56</td>\n",
       "      <td>3</td>\n",
       "      <td>36</td>\n",
       "      <td>12.000000</td>\n",
       "      <td>4308</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>445</th>\n",
       "      <td>1</td>\n",
       "      <td>21.440000</td>\n",
       "      <td>214.40</td>\n",
       "      <td>10</td>\n",
       "      <td>92</td>\n",
       "      <td>9.200000</td>\n",
       "      <td>4318</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>446</th>\n",
       "      <td>13</td>\n",
       "      <td>15.376228</td>\n",
       "      <td>1752.89</td>\n",
       "      <td>105</td>\n",
       "      <td>872</td>\n",
       "      <td>7.649123</td>\n",
       "      <td>4339</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "<p>447 rows × 8 columns</p>\n",
       "</div>\n",
       "      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-0dfa1d3d-2eaf-4bf3-95cc-75c7a7ca2fbf')\"\n",
       "              title=\"Convert this dataframe to an interactive table.\"\n",
       "              style=\"display:none;\">\n",
       "        \n",
       "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
       "       width=\"24px\">\n",
       "    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n",
       "    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n",
       "  </svg>\n",
       "      </button>\n",
       "      \n",
       "  <style>\n",
       "    .colab-df-container {\n",
       "      display:flex;\n",
       "      flex-wrap:wrap;\n",
       "      gap: 12px;\n",
       "    }\n",
       "\n",
       "    .colab-df-convert {\n",
       "      background-color: #E8F0FE;\n",
       "      border: none;\n",
       "      border-radius: 50%;\n",
       "      cursor: pointer;\n",
       "      display: none;\n",
       "      fill: #1967D2;\n",
       "      height: 32px;\n",
       "      padding: 0 0 0 0;\n",
       "      width: 32px;\n",
       "    }\n",
       "\n",
       "    .colab-df-convert:hover {\n",
       "      background-color: #E2EBFA;\n",
       "      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
       "      fill: #174EA6;\n",
       "    }\n",
       "\n",
       "    [theme=dark] .colab-df-convert {\n",
       "      background-color: #3B4455;\n",
       "      fill: #D2E3FC;\n",
       "    }\n",
       "\n",
       "    [theme=dark] .colab-df-convert:hover {\n",
       "      background-color: #434B5C;\n",
       "      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
       "      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
       "      fill: #FFFFFF;\n",
       "    }\n",
       "  </style>\n",
       "\n",
       "      <script>\n",
       "        const buttonEl =\n",
       "          document.querySelector('#df-0dfa1d3d-2eaf-4bf3-95cc-75c7a7ca2fbf button.colab-df-convert');\n",
       "        buttonEl.style.display =\n",
       "          google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
       "\n",
       "        async function convertToInteractive(key) {\n",
       "          const element = document.querySelector('#df-0dfa1d3d-2eaf-4bf3-95cc-75c7a7ca2fbf');\n",
       "          const dataTable =\n",
       "            await google.colab.kernel.invokeFunction('convertToInteractive',\n",
       "                                                     [key], {});\n",
       "          if (!dataTable) return;\n",
       "\n",
       "          const docLinkHtml = 'Like what you see? Visit the ' +\n",
       "            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n",
       "            + ' to learn more about interactive tables.';\n",
       "          element.innerHTML = '';\n",
       "          dataTable['output_type'] = 'display_data';\n",
       "          await google.colab.output.renderOutput(dataTable, element);\n",
       "          const docLink = document.createElement('div');\n",
       "          docLink.innerHTML = docLinkHtml;\n",
       "          element.appendChild(docLink);\n",
       "        }\n",
       "      </script>\n",
       "    </div>\n",
       "  </div>\n",
       "  "
      ],
      "text/plain": [
       "     No. of visits  Mean_purch  Sum_purch  Item_count  Total_quantity  \\\n",
       "0                1   26.586818     584.91          22             277   \n",
       "1                1   29.175000      58.35           2               5   \n",
       "2                2   22.826000     456.52          17             111   \n",
       "3                1   22.506154     292.58          13              64   \n",
       "4                1  148.566667     891.40           6             637   \n",
       "..             ...         ...        ...         ...             ...   \n",
       "442              1   20.523137    1046.68          51             872   \n",
       "443              1   18.083333     108.50           6              64   \n",
       "444              1   36.520000     109.56           3              36   \n",
       "445              1   21.440000     214.40          10              92   \n",
       "446             13   15.376228    1752.89         105             872   \n",
       "\n",
       "      Avg_quant  CustomerID  cluster_labels  \n",
       "0     12.590909           1               2  \n",
       "1      2.500000           9               2  \n",
       "2      5.550000          31               2  \n",
       "3      4.923077          32               2  \n",
       "4    106.166667          38               2  \n",
       "..          ...         ...             ...  \n",
       "442   17.098039        4303               0  \n",
       "443   10.666667        4304               0  \n",
       "444   12.000000        4308               0  \n",
       "445    9.200000        4318               0  \n",
       "446    7.649123        4339               0  \n",
       "\n",
       "[447 rows x 8 columns]"
      ]
     },
     "execution_count": 248,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "df_04_08 = df_cluster_labels(dvt_04_08,3)\n",
    "df_04_08"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {
    "colab": {
     "background_save": true,
     "base_uri": "https://localhost:8080/"
    },
    "id": "hW0ArrOVp1D1",
    "outputId": "6e252a1f-1901-4b9b-df5e-a14a6b08cbdc"
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "The Silhouette Score is :- 0.5277500783997451\n"
     ]
    }
   ],
   "source": [
    "silhte_score_04_08 = silhouette_score(dvt_04_08, df_04_08['cluster_labels'])\n",
    "print(\"The Silhouette Score is :- \"+str(silhte_score_04_08))"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {
    "colab": {
     "background_save": true,
     "base_uri": "https://localhost:8080/"
    },
    "id": "ksRQYKr7eANd",
    "outputId": "17d9e67f-1f94-4a25-ec26-f8dd85511d80"
   },
   "outputs": [
    {
     "data": {
      "text/plain": [
       "2    234\n",
       "0    207\n",
       "1      6\n",
       "Name: cluster_labels, dtype: int64"
      ]
     },
     "execution_count": 250,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "df_04_08['cluster_labels'].value_counts()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {
    "colab": {
     "background_save": true,
     "base_uri": "https://localhost:8080/",
     "height": 472
    },
    "id": "Zcc5ibMEeEwA",
    "outputId": "c89de016-fa4d-4fbd-9b12-809232cdeaa7"
   },
   "outputs": [
    {
     "data": {
      "image/png": "",
      "text/plain": [
       "<Figure size 640x480 with 1 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "plt.scatter(df_04_08['Mean_purch'], df_04_08['Sum_purch'], c=df_04_08['cluster_labels'], cmap='viridis')\n",
    "plt.title(\"For Time: 4:00-8:00\")\n",
    "plt.xlabel('Mean_purch')\n",
    "plt.ylabel('Sum_purch')\n",
    "plt.show()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {
    "colab": {
     "background_save": true,
     "base_uri": "https://localhost:8080/"
    },
    "id": "4I4LHIm-sIjo",
    "outputId": "7705a6fe-5760-4fbf-ecca-5dd7439e5974"
   },
   "outputs": [
    {
     "data": {
      "text/plain": [
       "1"
      ]
     },
     "execution_count": 252,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "#We apply this function ONLY if we find outliers\n",
    "outlier_1_08_12 = get_1_outliers(df_04_08)\n",
    "outlier_1_08_12"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {
    "colab": {
     "background_save": true,
     "base_uri": "https://localhost:8080/",
     "height": 424
    },
    "id": "Yo_WmoteeRaz",
    "outputId": "3b9aafc0-c667-4cb9-b99c-ab4eeda7cd32"
   },
   "outputs": [
    {
     "data": {
      "text/html": [
       "\n",
       "  <div id=\"df-30070f63-7024-4a6c-9237-c6a2f9f35b31\">\n",
       "    <div class=\"colab-df-container\">\n",
       "      <div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>No. of visits</th>\n",
       "      <th>Mean_purch</th>\n",
       "      <th>Sum_purch</th>\n",
       "      <th>Item_count</th>\n",
       "      <th>Total_quantity</th>\n",
       "      <th>Avg_quant</th>\n",
       "      <th>CustomerID</th>\n",
       "      <th>cluster_labels</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>1</td>\n",
       "      <td>26.586818</td>\n",
       "      <td>584.91</td>\n",
       "      <td>22</td>\n",
       "      <td>277</td>\n",
       "      <td>12.590909</td>\n",
       "      <td>1</td>\n",
       "      <td>2</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>1</td>\n",
       "      <td>29.175000</td>\n",
       "      <td>58.35</td>\n",
       "      <td>2</td>\n",
       "      <td>5</td>\n",
       "      <td>2.500000</td>\n",
       "      <td>9</td>\n",
       "      <td>2</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>2</td>\n",
       "      <td>22.826000</td>\n",
       "      <td>456.52</td>\n",
       "      <td>17</td>\n",
       "      <td>111</td>\n",
       "      <td>5.550000</td>\n",
       "      <td>31</td>\n",
       "      <td>2</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>1</td>\n",
       "      <td>22.506154</td>\n",
       "      <td>292.58</td>\n",
       "      <td>13</td>\n",
       "      <td>64</td>\n",
       "      <td>4.923077</td>\n",
       "      <td>32</td>\n",
       "      <td>2</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>1</td>\n",
       "      <td>148.566667</td>\n",
       "      <td>891.40</td>\n",
       "      <td>6</td>\n",
       "      <td>637</td>\n",
       "      <td>106.166667</td>\n",
       "      <td>38</td>\n",
       "      <td>2</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>...</th>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>442</th>\n",
       "      <td>1</td>\n",
       "      <td>20.523137</td>\n",
       "      <td>1046.68</td>\n",
       "      <td>51</td>\n",
       "      <td>872</td>\n",
       "      <td>17.098039</td>\n",
       "      <td>4303</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>443</th>\n",
       "      <td>1</td>\n",
       "      <td>18.083333</td>\n",
       "      <td>108.50</td>\n",
       "      <td>6</td>\n",
       "      <td>64</td>\n",
       "      <td>10.666667</td>\n",
       "      <td>4304</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>444</th>\n",
       "      <td>1</td>\n",
       "      <td>36.520000</td>\n",
       "      <td>109.56</td>\n",
       "      <td>3</td>\n",
       "      <td>36</td>\n",
       "      <td>12.000000</td>\n",
       "      <td>4308</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>445</th>\n",
       "      <td>1</td>\n",
       "      <td>21.440000</td>\n",
       "      <td>214.40</td>\n",
       "      <td>10</td>\n",
       "      <td>92</td>\n",
       "      <td>9.200000</td>\n",
       "      <td>4318</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>446</th>\n",
       "      <td>13</td>\n",
       "      <td>15.376228</td>\n",
       "      <td>1752.89</td>\n",
       "      <td>105</td>\n",
       "      <td>872</td>\n",
       "      <td>7.649123</td>\n",
       "      <td>4339</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "<p>441 rows × 8 columns</p>\n",
       "</div>\n",
       "      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-30070f63-7024-4a6c-9237-c6a2f9f35b31')\"\n",
       "              title=\"Convert this dataframe to an interactive table.\"\n",
       "              style=\"display:none;\">\n",
       "        \n",
       "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
       "       width=\"24px\">\n",
       "    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n",
       "    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n",
       "  </svg>\n",
       "      </button>\n",
       "      \n",
       "  <style>\n",
       "    .colab-df-container {\n",
       "      display:flex;\n",
       "      flex-wrap:wrap;\n",
       "      gap: 12px;\n",
       "    }\n",
       "\n",
       "    .colab-df-convert {\n",
       "      background-color: #E8F0FE;\n",
       "      border: none;\n",
       "      border-radius: 50%;\n",
       "      cursor: pointer;\n",
       "      display: none;\n",
       "      fill: #1967D2;\n",
       "      height: 32px;\n",
       "      padding: 0 0 0 0;\n",
       "      width: 32px;\n",
       "    }\n",
       "\n",
       "    .colab-df-convert:hover {\n",
       "      background-color: #E2EBFA;\n",
       "      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
       "      fill: #174EA6;\n",
       "    }\n",
       "\n",
       "    [theme=dark] .colab-df-convert {\n",
       "      background-color: #3B4455;\n",
       "      fill: #D2E3FC;\n",
       "    }\n",
       "\n",
       "    [theme=dark] .colab-df-convert:hover {\n",
       "      background-color: #434B5C;\n",
       "      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
       "      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
       "      fill: #FFFFFF;\n",
       "    }\n",
       "  </style>\n",
       "\n",
       "      <script>\n",
       "        const buttonEl =\n",
       "          document.querySelector('#df-30070f63-7024-4a6c-9237-c6a2f9f35b31 button.colab-df-convert');\n",
       "        buttonEl.style.display =\n",
       "          google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
       "\n",
       "        async function convertToInteractive(key) {\n",
       "          const element = document.querySelector('#df-30070f63-7024-4a6c-9237-c6a2f9f35b31');\n",
       "          const dataTable =\n",
       "            await google.colab.kernel.invokeFunction('convertToInteractive',\n",
       "                                                     [key], {});\n",
       "          if (!dataTable) return;\n",
       "\n",
       "          const docLinkHtml = 'Like what you see? Visit the ' +\n",
       "            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n",
       "            + ' to learn more about interactive tables.';\n",
       "          element.innerHTML = '';\n",
       "          dataTable['output_type'] = 'display_data';\n",
       "          await google.colab.output.renderOutput(dataTable, element);\n",
       "          const docLink = document.createElement('div');\n",
       "          docLink.innerHTML = docLinkHtml;\n",
       "          element.appendChild(docLink);\n",
       "        }\n",
       "      </script>\n",
       "    </div>\n",
       "  </div>\n",
       "  "
      ],
      "text/plain": [
       "     No. of visits  Mean_purch  Sum_purch  Item_count  Total_quantity  \\\n",
       "0                1   26.586818     584.91          22             277   \n",
       "1                1   29.175000      58.35           2               5   \n",
       "2                2   22.826000     456.52          17             111   \n",
       "3                1   22.506154     292.58          13              64   \n",
       "4                1  148.566667     891.40           6             637   \n",
       "..             ...         ...        ...         ...             ...   \n",
       "442              1   20.523137    1046.68          51             872   \n",
       "443              1   18.083333     108.50           6              64   \n",
       "444              1   36.520000     109.56           3              36   \n",
       "445              1   21.440000     214.40          10              92   \n",
       "446             13   15.376228    1752.89         105             872   \n",
       "\n",
       "      Avg_quant  CustomerID  cluster_labels  \n",
       "0     12.590909           1               2  \n",
       "1      2.500000           9               2  \n",
       "2      5.550000          31               2  \n",
       "3      4.923077          32               2  \n",
       "4    106.166667          38               2  \n",
       "..          ...         ...             ...  \n",
       "442   17.098039        4303               0  \n",
       "443   10.666667        4304               0  \n",
       "444   12.000000        4308               0  \n",
       "445    9.200000        4318               0  \n",
       "446    7.649123        4339               0  \n",
       "\n",
       "[441 rows x 8 columns]"
      ]
     },
     "execution_count": 253,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "#Thus Clusters 1 and 2 are outliers as they have very few datapoints(Customers)\n",
    "#So we remove them and then applyKMeans again\n",
    "#Thus\n",
    "#Then check for outliers and if required, repeat the process\n",
    "#Below is for outliers:-\n",
    "\n",
    "df_04_08 = df_04_08[df_04_08['cluster_labels']!=outlier_1_08_12]\n",
    "df_04_08"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {
    "colab": {
     "background_save": true,
     "base_uri": "https://localhost:8080/"
    },
    "id": "2gWGMcxDecE-",
    "outputId": "fdbd609d-dd0a-41b8-fb85-da7a0a403ae0"
   },
   "outputs": [
    {
     "data": {
      "text/plain": [
       "2    234\n",
       "0    207\n",
       "Name: cluster_labels, dtype: int64"
      ]
     },
     "execution_count": 254,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "df_04_08['cluster_labels'].value_counts()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {
    "colab": {
     "background_save": true,
     "base_uri": "https://localhost:8080/",
     "height": 424
    },
    "id": "VHthbl-4ehM7",
    "outputId": "f17b7a91-8991-466c-9b97-5610eae29dd6"
   },
   "outputs": [
    {
     "data": {
      "text/html": [
       "\n",
       "  <div id=\"df-7ec04d13-9195-4fe8-8deb-7d45ec0488ad\">\n",
       "    <div class=\"colab-df-container\">\n",
       "      <div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>No. of visits</th>\n",
       "      <th>Mean_purch</th>\n",
       "      <th>Sum_purch</th>\n",
       "      <th>Item_count</th>\n",
       "      <th>Total_quantity</th>\n",
       "      <th>Avg_quant</th>\n",
       "      <th>CustomerID</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>1</td>\n",
       "      <td>26.586818</td>\n",
       "      <td>584.91</td>\n",
       "      <td>22</td>\n",
       "      <td>277</td>\n",
       "      <td>12.590909</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>1</td>\n",
       "      <td>29.175000</td>\n",
       "      <td>58.35</td>\n",
       "      <td>2</td>\n",
       "      <td>5</td>\n",
       "      <td>2.500000</td>\n",
       "      <td>9</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>2</td>\n",
       "      <td>22.826000</td>\n",
       "      <td>456.52</td>\n",
       "      <td>17</td>\n",
       "      <td>111</td>\n",
       "      <td>5.550000</td>\n",
       "      <td>31</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>1</td>\n",
       "      <td>22.506154</td>\n",
       "      <td>292.58</td>\n",
       "      <td>13</td>\n",
       "      <td>64</td>\n",
       "      <td>4.923077</td>\n",
       "      <td>32</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>1</td>\n",
       "      <td>148.566667</td>\n",
       "      <td>891.40</td>\n",
       "      <td>6</td>\n",
       "      <td>637</td>\n",
       "      <td>106.166667</td>\n",
       "      <td>38</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>...</th>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>442</th>\n",
       "      <td>1</td>\n",
       "      <td>20.523137</td>\n",
       "      <td>1046.68</td>\n",
       "      <td>51</td>\n",
       "      <td>872</td>\n",
       "      <td>17.098039</td>\n",
       "      <td>4303</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>443</th>\n",
       "      <td>1</td>\n",
       "      <td>18.083333</td>\n",
       "      <td>108.50</td>\n",
       "      <td>6</td>\n",
       "      <td>64</td>\n",
       "      <td>10.666667</td>\n",
       "      <td>4304</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>444</th>\n",
       "      <td>1</td>\n",
       "      <td>36.520000</td>\n",
       "      <td>109.56</td>\n",
       "      <td>3</td>\n",
       "      <td>36</td>\n",
       "      <td>12.000000</td>\n",
       "      <td>4308</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>445</th>\n",
       "      <td>1</td>\n",
       "      <td>21.440000</td>\n",
       "      <td>214.40</td>\n",
       "      <td>10</td>\n",
       "      <td>92</td>\n",
       "      <td>9.200000</td>\n",
       "      <td>4318</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>446</th>\n",
       "      <td>13</td>\n",
       "      <td>15.376228</td>\n",
       "      <td>1752.89</td>\n",
       "      <td>105</td>\n",
       "      <td>872</td>\n",
       "      <td>7.649123</td>\n",
       "      <td>4339</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "<p>441 rows × 7 columns</p>\n",
       "</div>\n",
       "      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-7ec04d13-9195-4fe8-8deb-7d45ec0488ad')\"\n",
       "              title=\"Convert this dataframe to an interactive table.\"\n",
       "              style=\"display:none;\">\n",
       "        \n",
       "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
       "       width=\"24px\">\n",
       "    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n",
       "    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n",
       "  </svg>\n",
       "      </button>\n",
       "      \n",
       "  <style>\n",
       "    .colab-df-container {\n",
       "      display:flex;\n",
       "      flex-wrap:wrap;\n",
       "      gap: 12px;\n",
       "    }\n",
       "\n",
       "    .colab-df-convert {\n",
       "      background-color: #E8F0FE;\n",
       "      border: none;\n",
       "      border-radius: 50%;\n",
       "      cursor: pointer;\n",
       "      display: none;\n",
       "      fill: #1967D2;\n",
       "      height: 32px;\n",
       "      padding: 0 0 0 0;\n",
       "      width: 32px;\n",
       "    }\n",
       "\n",
       "    .colab-df-convert:hover {\n",
       "      background-color: #E2EBFA;\n",
       "      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
       "      fill: #174EA6;\n",
       "    }\n",
       "\n",
       "    [theme=dark] .colab-df-convert {\n",
       "      background-color: #3B4455;\n",
       "      fill: #D2E3FC;\n",
       "    }\n",
       "\n",
       "    [theme=dark] .colab-df-convert:hover {\n",
       "      background-color: #434B5C;\n",
       "      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
       "      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
       "      fill: #FFFFFF;\n",
       "    }\n",
       "  </style>\n",
       "\n",
       "      <script>\n",
       "        const buttonEl =\n",
       "          document.querySelector('#df-7ec04d13-9195-4fe8-8deb-7d45ec0488ad button.colab-df-convert');\n",
       "        buttonEl.style.display =\n",
       "          google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
       "\n",
       "        async function convertToInteractive(key) {\n",
       "          const element = document.querySelector('#df-7ec04d13-9195-4fe8-8deb-7d45ec0488ad');\n",
       "          const dataTable =\n",
       "            await google.colab.kernel.invokeFunction('convertToInteractive',\n",
       "                                                     [key], {});\n",
       "          if (!dataTable) return;\n",
       "\n",
       "          const docLinkHtml = 'Like what you see? Visit the ' +\n",
       "            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n",
       "            + ' to learn more about interactive tables.';\n",
       "          element.innerHTML = '';\n",
       "          dataTable['output_type'] = 'display_data';\n",
       "          await google.colab.output.renderOutput(dataTable, element);\n",
       "          const docLink = document.createElement('div');\n",
       "          docLink.innerHTML = docLinkHtml;\n",
       "          element.appendChild(docLink);\n",
       "        }\n",
       "      </script>\n",
       "    </div>\n",
       "  </div>\n",
       "  "
      ],
      "text/plain": [
       "     No. of visits  Mean_purch  Sum_purch  Item_count  Total_quantity  \\\n",
       "0                1   26.586818     584.91          22             277   \n",
       "1                1   29.175000      58.35           2               5   \n",
       "2                2   22.826000     456.52          17             111   \n",
       "3                1   22.506154     292.58          13              64   \n",
       "4                1  148.566667     891.40           6             637   \n",
       "..             ...         ...        ...         ...             ...   \n",
       "442              1   20.523137    1046.68          51             872   \n",
       "443              1   18.083333     108.50           6              64   \n",
       "444              1   36.520000     109.56           3              36   \n",
       "445              1   21.440000     214.40          10              92   \n",
       "446             13   15.376228    1752.89         105             872   \n",
       "\n",
       "      Avg_quant  CustomerID  \n",
       "0     12.590909           1  \n",
       "1      2.500000           9  \n",
       "2      5.550000          31  \n",
       "3      4.923077          32  \n",
       "4    106.166667          38  \n",
       "..          ...         ...  \n",
       "442   17.098039        4303  \n",
       "443   10.666667        4304  \n",
       "444   12.000000        4308  \n",
       "445    9.200000        4318  \n",
       "446    7.649123        4339  \n",
       "\n",
       "[441 rows x 7 columns]"
      ]
     },
     "execution_count": 255,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "#Thus the outliers are removed.\n",
    "#Now we again apply the clustering pipeline\n",
    "\n",
    "df_04_08_person = df_04_08.copy(deep=True)\n",
    "df_04_08_person.drop(['cluster_labels'],axis=1,inplace=True)\n",
    "df_04_08_person\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {
    "colab": {
     "background_save": true,
     "base_uri": "https://localhost:8080/",
     "height": 478
    },
    "id": "do-jNIw5elk0",
    "outputId": "dde42180-aec6-41af-fd4e-9834f346b51e"
   },
   "outputs": [
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "/usr/local/lib/python3.9/dist-packages/sklearn/cluster/_kmeans.py:870: FutureWarning: The default value of `n_init` will change from 10 to 'auto' in 1.4. Set the value of `n_init` explicitly to suppress the warning\n",
      "  warnings.warn(\n"
     ]
    },
    {
     "data": {
      "text/html": [
       "\n",
       "  <div id=\"df-1dfca151-99eb-4397-835e-3d7aaf414f7e\">\n",
       "    <div class=\"colab-df-container\">\n",
       "      <div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>No. of visits</th>\n",
       "      <th>Mean_purch</th>\n",
       "      <th>Sum_purch</th>\n",
       "      <th>Item_count</th>\n",
       "      <th>Total_quantity</th>\n",
       "      <th>Avg_quant</th>\n",
       "      <th>CustomerID</th>\n",
       "      <th>cluster_labels</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>1</td>\n",
       "      <td>26.586818</td>\n",
       "      <td>584.91</td>\n",
       "      <td>22</td>\n",
       "      <td>277</td>\n",
       "      <td>12.590909</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>1</td>\n",
       "      <td>29.175000</td>\n",
       "      <td>58.35</td>\n",
       "      <td>2</td>\n",
       "      <td>5</td>\n",
       "      <td>2.500000</td>\n",
       "      <td>9</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>2</td>\n",
       "      <td>22.826000</td>\n",
       "      <td>456.52</td>\n",
       "      <td>17</td>\n",
       "      <td>111</td>\n",
       "      <td>5.550000</td>\n",
       "      <td>31</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>1</td>\n",
       "      <td>22.506154</td>\n",
       "      <td>292.58</td>\n",
       "      <td>13</td>\n",
       "      <td>64</td>\n",
       "      <td>4.923077</td>\n",
       "      <td>32</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>1</td>\n",
       "      <td>148.566667</td>\n",
       "      <td>891.40</td>\n",
       "      <td>6</td>\n",
       "      <td>637</td>\n",
       "      <td>106.166667</td>\n",
       "      <td>38</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>...</th>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>442</th>\n",
       "      <td>1</td>\n",
       "      <td>20.523137</td>\n",
       "      <td>1046.68</td>\n",
       "      <td>51</td>\n",
       "      <td>872</td>\n",
       "      <td>17.098039</td>\n",
       "      <td>4303</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>443</th>\n",
       "      <td>1</td>\n",
       "      <td>18.083333</td>\n",
       "      <td>108.50</td>\n",
       "      <td>6</td>\n",
       "      <td>64</td>\n",
       "      <td>10.666667</td>\n",
       "      <td>4304</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>444</th>\n",
       "      <td>1</td>\n",
       "      <td>36.520000</td>\n",
       "      <td>109.56</td>\n",
       "      <td>3</td>\n",
       "      <td>36</td>\n",
       "      <td>12.000000</td>\n",
       "      <td>4308</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>445</th>\n",
       "      <td>1</td>\n",
       "      <td>21.440000</td>\n",
       "      <td>214.40</td>\n",
       "      <td>10</td>\n",
       "      <td>92</td>\n",
       "      <td>9.200000</td>\n",
       "      <td>4318</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>446</th>\n",
       "      <td>13</td>\n",
       "      <td>15.376228</td>\n",
       "      <td>1752.89</td>\n",
       "      <td>105</td>\n",
       "      <td>872</td>\n",
       "      <td>7.649123</td>\n",
       "      <td>4339</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "<p>441 rows × 8 columns</p>\n",
       "</div>\n",
       "      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-1dfca151-99eb-4397-835e-3d7aaf414f7e')\"\n",
       "              title=\"Convert this dataframe to an interactive table.\"\n",
       "              style=\"display:none;\">\n",
       "        \n",
       "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
       "       width=\"24px\">\n",
       "    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n",
       "    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n",
       "  </svg>\n",
       "      </button>\n",
       "      \n",
       "  <style>\n",
       "    .colab-df-container {\n",
       "      display:flex;\n",
       "      flex-wrap:wrap;\n",
       "      gap: 12px;\n",
       "    }\n",
       "\n",
       "    .colab-df-convert {\n",
       "      background-color: #E8F0FE;\n",
       "      border: none;\n",
       "      border-radius: 50%;\n",
       "      cursor: pointer;\n",
       "      display: none;\n",
       "      fill: #1967D2;\n",
       "      height: 32px;\n",
       "      padding: 0 0 0 0;\n",
       "      width: 32px;\n",
       "    }\n",
       "\n",
       "    .colab-df-convert:hover {\n",
       "      background-color: #E2EBFA;\n",
       "      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
       "      fill: #174EA6;\n",
       "    }\n",
       "\n",
       "    [theme=dark] .colab-df-convert {\n",
       "      background-color: #3B4455;\n",
       "      fill: #D2E3FC;\n",
       "    }\n",
       "\n",
       "    [theme=dark] .colab-df-convert:hover {\n",
       "      background-color: #434B5C;\n",
       "      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
       "      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
       "      fill: #FFFFFF;\n",
       "    }\n",
       "  </style>\n",
       "\n",
       "      <script>\n",
       "        const buttonEl =\n",
       "          document.querySelector('#df-1dfca151-99eb-4397-835e-3d7aaf414f7e button.colab-df-convert');\n",
       "        buttonEl.style.display =\n",
       "          google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
       "\n",
       "        async function convertToInteractive(key) {\n",
       "          const element = document.querySelector('#df-1dfca151-99eb-4397-835e-3d7aaf414f7e');\n",
       "          const dataTable =\n",
       "            await google.colab.kernel.invokeFunction('convertToInteractive',\n",
       "                                                     [key], {});\n",
       "          if (!dataTable) return;\n",
       "\n",
       "          const docLinkHtml = 'Like what you see? Visit the ' +\n",
       "            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n",
       "            + ' to learn more about interactive tables.';\n",
       "          element.innerHTML = '';\n",
       "          dataTable['output_type'] = 'display_data';\n",
       "          await google.colab.output.renderOutput(dataTable, element);\n",
       "          const docLink = document.createElement('div');\n",
       "          docLink.innerHTML = docLinkHtml;\n",
       "          element.appendChild(docLink);\n",
       "        }\n",
       "      </script>\n",
       "    </div>\n",
       "  </div>\n",
       "  "
      ],
      "text/plain": [
       "     No. of visits  Mean_purch  Sum_purch  Item_count  Total_quantity  \\\n",
       "0                1   26.586818     584.91          22             277   \n",
       "1                1   29.175000      58.35           2               5   \n",
       "2                2   22.826000     456.52          17             111   \n",
       "3                1   22.506154     292.58          13              64   \n",
       "4                1  148.566667     891.40           6             637   \n",
       "..             ...         ...        ...         ...             ...   \n",
       "442              1   20.523137    1046.68          51             872   \n",
       "443              1   18.083333     108.50           6              64   \n",
       "444              1   36.520000     109.56           3              36   \n",
       "445              1   21.440000     214.40          10              92   \n",
       "446             13   15.376228    1752.89         105             872   \n",
       "\n",
       "      Avg_quant  CustomerID  cluster_labels  \n",
       "0     12.590909           1               0  \n",
       "1      2.500000           9               0  \n",
       "2      5.550000          31               0  \n",
       "3      4.923077          32               0  \n",
       "4    106.166667          38               0  \n",
       "..          ...         ...             ...  \n",
       "442   17.098039        4303               1  \n",
       "443   10.666667        4304               1  \n",
       "444   12.000000        4308               1  \n",
       "445    9.200000        4318               1  \n",
       "446    7.649123        4339               1  \n",
       "\n",
       "[441 rows x 8 columns]"
      ]
     },
     "execution_count": 256,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "df_04_08_new = df_cluster_labels(df_04_08_person,3)\n",
    "df_04_08_new\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {
    "colab": {
     "background_save": true,
     "base_uri": "https://localhost:8080/"
    },
    "id": "LuAh2_a6p9D7",
    "outputId": "a5ed3b50-4e41-44fe-c80d-5fb479521470"
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "The Silhouette Score is :- 0.5495940150285014\n"
     ]
    }
   ],
   "source": [
    "silhte_score_04_08_new = silhouette_score(df_04_08_person, df_04_08_new['cluster_labels'])\n",
    "print(\"The Silhouette Score is :- \"+str(silhte_score_04_08_new))"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {
    "colab": {
     "background_save": true,
     "base_uri": "https://localhost:8080/"
    },
    "id": "zRMzP6oEerRw",
    "outputId": "bb568c09-8810-4a25-ffa1-5cc8461522fd"
   },
   "outputs": [
    {
     "data": {
      "text/plain": [
       "0    242\n",
       "1    191\n",
       "2      8\n",
       "Name: cluster_labels, dtype: int64"
      ]
     },
     "execution_count": 258,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "df_04_08_new['cluster_labels'].value_counts()\n",
    "#These are comparatively good clusters"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {
    "colab": {
     "background_save": true,
     "base_uri": "https://localhost:8080/",
     "height": 472
    },
    "id": "9DdezriIevXL",
    "outputId": "86a3abc1-d464-4580-a8ce-3c08ab9fd6be"
   },
   "outputs": [
    {
     "data": {
      "image/png": "",
      "text/plain": [
       "<Figure size 640x480 with 1 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "plt.scatter(df_04_08_new['Mean_purch'], df_04_08_new['Sum_purch'], c=df_04_08_new['cluster_labels'], cmap='viridis')\n",
    "plt.title(\"For Time: 4:00-8:00 (After removing outliers)\")\n",
    "plt.xlabel('Mean_purch')\n",
    "plt.ylabel('Sum_purch')\n",
    "plt.show()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {
    "colab": {
     "background_save": true
    },
    "id": "qKrkxLqwe55p"
   },
   "outputs": [],
   "source": [
    "t_04_08 = descrip_dict(og_04_08,df_04_08_new)\n",
    "t_04_08 = processlis(t_04_08)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {
    "colab": {
     "background_save": true,
     "base_uri": "https://localhost:8080/"
    },
    "id": "lUtDmwfKfBq6",
    "outputId": "03df73e2-3289-443f-cefa-2b3e0e404326"
   },
   "outputs": [
    {
     "data": {
      "text/plain": [
       "[     CustomerID                                        Description\n",
       " 0             1  [SET OF 60 VINTAGE LEAF CAKE CASES , SET 40 HE...\n",
       " 1             9  [REGENCY CAKESTAND 3 TIER, RED RETROSPOT CAKE ...\n",
       " 2            31  [RETROSPOT PARTY BAG + STICKER SET, ORGANISER ...\n",
       " 3            32  [TRADITIONAL WOODEN CATCH CUP GAME , RABBIT NI...\n",
       " 4            38  [SET OF 3 REGENCY CAKE TINS, SET OF 12 MINI LO...\n",
       " ..          ...                                                ...\n",
       " 237        2084  [ROSES REGENCY TEACUP AND SAUCER , CITRONELLA ...\n",
       " 238        2086  [DOORMAT FANCY FONT HOME SWEET HOME, DOORMAT K...\n",
       " 239        2087  [RED METAL BOX TOP SECRET, SET 6 PAPER TABLE L...\n",
       " 240        2093  [MIRRORED WALL ART SNOWFLAKES, RED CHARLIE+LOL...\n",
       " 241        2096                   [PINK REGENCY TEACUP AND SAUCER]\n",
       " \n",
       " [242 rows x 2 columns],\n",
       "      CustomerID                                        Description\n",
       " 0          2105  [JUMBO BAG STRAWBERRY, JUMBO BAG RED RETROSPOT...\n",
       " 1          2109  [LUNCH BAG SUKI  DESIGN , CHARLOTTE BAG SUKI D...\n",
       " 2          2118  [VICTORIAN GLASS HANGING T-LIGHT, CLASSICAL RO...\n",
       " 3          2124  [RED SPOT CERAMIC DRAWER KNOB, RED STRIPE CERA...\n",
       " 4          2150  [SAVE THE PLANET COTTON TOTE BAG, HEADS AND TA...\n",
       " ..          ...                                                ...\n",
       " 186        4303  [CARD BILLBOARD FONT, GIN & TONIC DIET GREETIN...\n",
       " 187        4304  [ANTIQUE SILVER T-LIGHT GLASS, T-LIGHT HOLDER ...\n",
       " 188        4308  [POTTERING IN THE SHED METAL SIGN, PLEASE ONE ...\n",
       " 189        4318  [VINTAGE  2 METER FOLDING RULER, LUNCH BAG APP...\n",
       " 190        4339  [ANTIQUE GLASS PEDESTAL BOWL, REGENCY CAKESTAN...\n",
       " \n",
       " [191 rows x 2 columns]]"
      ]
     },
     "execution_count": 261,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "t_04_08"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {
    "colab": {
     "background_save": true,
     "base_uri": "https://localhost:8080/",
     "height": 1000
    },
    "id": "2vQVv5ccRFzn",
    "outputId": "26919b5f-f758-46a4-ec17-0f99725f2bad"
   },
   "outputs": [
    {
     "data": {
      "image/png": "",
      "text/plain": [
       "<Figure size 640x480 with 1 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "data": {
      "image/png": "",
      "text/plain": [
       "<Figure size 500x500 with 1 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "(239, 4)\n",
      "(4, 4)\n",
      "(204, 4)\n"
     ]
    },
    {
     "data": {
      "image/png": "",
      "text/plain": [
       "<Figure size 640x480 with 1 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "data": {
      "image/png": "",
      "text/plain": [
       "<Figure size 500x500 with 1 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "(10, 5)\n",
      "(140, 5)\n",
      "(89, 5)\n"
     ]
    },
    {
     "data": {
      "text/plain": [
       "[     CustomerID                                        Description\n",
       " 0           559  [WOODEN BOX OF DOMINOES, RED  HARMONICA IN BOX...\n",
       " 1           609  [WHITE TALL PORCELAIN T-LIGHT HOLDER, TWO DOOR...\n",
       " 2           651  [JAM MAKING SET WITH JARS, SET OF 2 TEA TOWELS...\n",
       " 3           671  [16 PIECE CUTLERY SET PANTRY DESIGN, SMALL PAR...\n",
       " 4           712  [SET 6 PAPER TABLE LANTERN STARS , GARDENERS K...\n",
       " ..          ...                                                ...\n",
       " 135        1904  [ZINC METAL HEART DECORATION, HANGING METAL HE...\n",
       " 136        1984  [DOORMAT ENGLISH ROSE , SPACEBOY LUNCH BOX , G...\n",
       " 137        1997  [RED RETROSPOT CAKE STAND, RETROSPOT LARGE MIL...\n",
       " 138        2019  [I CAN ONLY PLEASE ONE PERSON MUG, HOMEMADE JA...\n",
       " 139        2024  [VINTAGE CHRISTMAS TABLECLOTH, VINTAGE CHRISTM...\n",
       " \n",
       " [140 rows x 2 columns]]"
      ]
     },
     "execution_count": 262,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "\n",
    "pca = PCA(n_components = 3)\n",
    "pca.fit(X = dvt_04_08 )\n",
    "new_dvt = pca.transform(dvt_04_08 )\n",
    "\n",
    "new_dvt = pd.DataFrame(data = new_dvt,columns = ['X0','X1','X2'])\n",
    "model = AgglomerativeClustering(distance_threshold=0, n_clusters=None, linkage='ward').fit(new_dvt)\n",
    "\n",
    "plot_dendrogram(model, truncate_mode=\"level\", p=4)\n",
    "\n",
    "dict_04_08 =  Agglocls(new_dvt,3)\n",
    "\n",
    "final_dvt_04_08 = dict_04_08[0]\n",
    "pca_04_08 = PCA(n_components = 3)\n",
    "pca_04_08.fit(X = final_dvt_04_08)\n",
    "final_dvt_04_08 = pca_04_08.transform(final_dvt_04_08)\n",
    "final_dvt_04_08 = pd.DataFrame(data = final_dvt_04_08,columns = ['X0','X1','X2'])\n",
    "AggloDendo(final_dvt_04_08)\n",
    "\n",
    "dict_04_08_final =  AggloPca(final_dvt_04_08,3,dvt_04_08,'X1','X0')\n",
    "\n",
    "t_04_08_agg = descrip_dict(og_04_08,final_dvt_04_08)\n",
    "t_04_08_agg = processlis(t_04_08_agg)\n",
    "t_04_08_agg\n",
    "\n",
    "\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {
    "colab": {
     "background_save": true
    },
    "id": "VJ5VGoIwRF25"
   },
   "outputs": [],
   "source": [
    "Cluster_dict['t_04_08'] = (len(t_04_08),len(t_04_08_agg))\n",
    "dicti_t_04_08 = {}\n",
    "klis = []\n",
    "\n",
    "for i in range(Cluster_dict['t_04_08'][0]):\n",
    "  temp = apriori_rules(t_04_08[i],0.075)\n",
    "  klis.append(temp)\n",
    "alis = []\n",
    "\n",
    "for i in range(Cluster_dict['t_04_08'][1]):\n",
    "  temp = apriori_rules(t_04_08_agg[i],0.075)\n",
    "  alis.append(temp)\n",
    "\n",
    "dicti_t_04_08['K-means'] = klis\n",
    "dicti_t_04_08['Agglo'] = alis\n",
    "\n",
    "Rules_dict['t_04_08'] = dicti_t_04_08"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {
    "id": "_gjcZMXCfHu4"
   },
   "source": [
    "## For Time: 8:00 - 12:00"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {
    "colab": {
     "background_save": true,
     "base_uri": "https://localhost:8080/",
     "height": 424
    },
    "id": "TFcF-TF6fHap",
    "outputId": "e4fdb1f3-ff33-4dd4-d2cf-33c256f191ce"
   },
   "outputs": [
    {
     "data": {
      "text/html": [
       "\n",
       "  <div id=\"df-645d460d-b0a5-4f8f-8c26-865e6c4851e9\">\n",
       "    <div class=\"colab-df-container\">\n",
       "      <div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>InvoiceNo</th>\n",
       "      <th>StockCode</th>\n",
       "      <th>Description</th>\n",
       "      <th>Quantity</th>\n",
       "      <th>UnitPrice</th>\n",
       "      <th>CustomerID</th>\n",
       "      <th>Country</th>\n",
       "      <th>year-month_intervals</th>\n",
       "      <th>Total Price</th>\n",
       "      <th>Money_bins</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>46</th>\n",
       "      <td>536371</td>\n",
       "      <td>22086</td>\n",
       "      <td>PAPER CHAIN KIT 50'S CHRISTMAS</td>\n",
       "      <td>80</td>\n",
       "      <td>2.55</td>\n",
       "      <td>1039</td>\n",
       "      <td>United Kingdom</td>\n",
       "      <td>0</td>\n",
       "      <td>204.00</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>47</th>\n",
       "      <td>536372</td>\n",
       "      <td>22632</td>\n",
       "      <td>HAND WARMER RED POLKA DOT</td>\n",
       "      <td>6</td>\n",
       "      <td>1.85</td>\n",
       "      <td>4017</td>\n",
       "      <td>United Kingdom</td>\n",
       "      <td>0</td>\n",
       "      <td>11.10</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>48</th>\n",
       "      <td>536372</td>\n",
       "      <td>22633</td>\n",
       "      <td>HAND WARMER UNION JACK</td>\n",
       "      <td>6</td>\n",
       "      <td>1.85</td>\n",
       "      <td>4017</td>\n",
       "      <td>United Kingdom</td>\n",
       "      <td>0</td>\n",
       "      <td>11.10</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>49</th>\n",
       "      <td>536373</td>\n",
       "      <td>85123A</td>\n",
       "      <td>WHITE HANGING HEART T-LIGHT HOLDER</td>\n",
       "      <td>6</td>\n",
       "      <td>2.55</td>\n",
       "      <td>4017</td>\n",
       "      <td>United Kingdom</td>\n",
       "      <td>0</td>\n",
       "      <td>15.30</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>50</th>\n",
       "      <td>536373</td>\n",
       "      <td>71053</td>\n",
       "      <td>WHITE METAL LANTERN</td>\n",
       "      <td>6</td>\n",
       "      <td>3.39</td>\n",
       "      <td>4017</td>\n",
       "      <td>United Kingdom</td>\n",
       "      <td>0</td>\n",
       "      <td>20.34</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>...</th>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>541904</th>\n",
       "      <td>581587</td>\n",
       "      <td>22613</td>\n",
       "      <td>PACK OF 20 SPACEBOY NAPKINS</td>\n",
       "      <td>12</td>\n",
       "      <td>0.85</td>\n",
       "      <td>271</td>\n",
       "      <td>France</td>\n",
       "      <td>12</td>\n",
       "      <td>10.20</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>541905</th>\n",
       "      <td>581587</td>\n",
       "      <td>22899</td>\n",
       "      <td>CHILDREN'S APRON DOLLY GIRL</td>\n",
       "      <td>6</td>\n",
       "      <td>2.10</td>\n",
       "      <td>271</td>\n",
       "      <td>France</td>\n",
       "      <td>12</td>\n",
       "      <td>12.60</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>541906</th>\n",
       "      <td>581587</td>\n",
       "      <td>23254</td>\n",
       "      <td>CHILDRENS CUTLERY DOLLY GIRL</td>\n",
       "      <td>4</td>\n",
       "      <td>4.15</td>\n",
       "      <td>271</td>\n",
       "      <td>France</td>\n",
       "      <td>12</td>\n",
       "      <td>16.60</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>541907</th>\n",
       "      <td>581587</td>\n",
       "      <td>23255</td>\n",
       "      <td>CHILDRENS CUTLERY CIRCUS PARADE</td>\n",
       "      <td>4</td>\n",
       "      <td>4.15</td>\n",
       "      <td>271</td>\n",
       "      <td>France</td>\n",
       "      <td>12</td>\n",
       "      <td>16.60</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>541908</th>\n",
       "      <td>581587</td>\n",
       "      <td>22138</td>\n",
       "      <td>BAKING SET 9 PIECE RETROSPOT</td>\n",
       "      <td>3</td>\n",
       "      <td>4.95</td>\n",
       "      <td>271</td>\n",
       "      <td>France</td>\n",
       "      <td>12</td>\n",
       "      <td>14.85</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "<p>215190 rows × 10 columns</p>\n",
       "</div>\n",
       "      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-645d460d-b0a5-4f8f-8c26-865e6c4851e9')\"\n",
       "              title=\"Convert this dataframe to an interactive table.\"\n",
       "              style=\"display:none;\">\n",
       "        \n",
       "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
       "       width=\"24px\">\n",
       "    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n",
       "    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n",
       "  </svg>\n",
       "      </button>\n",
       "      \n",
       "  <style>\n",
       "    .colab-df-container {\n",
       "      display:flex;\n",
       "      flex-wrap:wrap;\n",
       "      gap: 12px;\n",
       "    }\n",
       "\n",
       "    .colab-df-convert {\n",
       "      background-color: #E8F0FE;\n",
       "      border: none;\n",
       "      border-radius: 50%;\n",
       "      cursor: pointer;\n",
       "      display: none;\n",
       "      fill: #1967D2;\n",
       "      height: 32px;\n",
       "      padding: 0 0 0 0;\n",
       "      width: 32px;\n",
       "    }\n",
       "\n",
       "    .colab-df-convert:hover {\n",
       "      background-color: #E2EBFA;\n",
       "      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
       "      fill: #174EA6;\n",
       "    }\n",
       "\n",
       "    [theme=dark] .colab-df-convert {\n",
       "      background-color: #3B4455;\n",
       "      fill: #D2E3FC;\n",
       "    }\n",
       "\n",
       "    [theme=dark] .colab-df-convert:hover {\n",
       "      background-color: #434B5C;\n",
       "      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
       "      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
       "      fill: #FFFFFF;\n",
       "    }\n",
       "  </style>\n",
       "\n",
       "      <script>\n",
       "        const buttonEl =\n",
       "          document.querySelector('#df-645d460d-b0a5-4f8f-8c26-865e6c4851e9 button.colab-df-convert');\n",
       "        buttonEl.style.display =\n",
       "          google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
       "\n",
       "        async function convertToInteractive(key) {\n",
       "          const element = document.querySelector('#df-645d460d-b0a5-4f8f-8c26-865e6c4851e9');\n",
       "          const dataTable =\n",
       "            await google.colab.kernel.invokeFunction('convertToInteractive',\n",
       "                                                     [key], {});\n",
       "          if (!dataTable) return;\n",
       "\n",
       "          const docLinkHtml = 'Like what you see? Visit the ' +\n",
       "            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n",
       "            + ' to learn more about interactive tables.';\n",
       "          element.innerHTML = '';\n",
       "          dataTable['output_type'] = 'display_data';\n",
       "          await google.colab.output.renderOutput(dataTable, element);\n",
       "          const docLink = document.createElement('div');\n",
       "          docLink.innerHTML = docLinkHtml;\n",
       "          element.appendChild(docLink);\n",
       "        }\n",
       "      </script>\n",
       "    </div>\n",
       "  </div>\n",
       "  "
      ],
      "text/plain": [
       "       InvoiceNo StockCode                         Description  Quantity  \\\n",
       "46        536371     22086     PAPER CHAIN KIT 50'S CHRISTMAS         80   \n",
       "47        536372     22632           HAND WARMER RED POLKA DOT         6   \n",
       "48        536372     22633              HAND WARMER UNION JACK         6   \n",
       "49        536373    85123A  WHITE HANGING HEART T-LIGHT HOLDER         6   \n",
       "50        536373     71053                 WHITE METAL LANTERN         6   \n",
       "...          ...       ...                                 ...       ...   \n",
       "541904    581587     22613         PACK OF 20 SPACEBOY NAPKINS        12   \n",
       "541905    581587     22899        CHILDREN'S APRON DOLLY GIRL          6   \n",
       "541906    581587     23254       CHILDRENS CUTLERY DOLLY GIRL          4   \n",
       "541907    581587     23255     CHILDRENS CUTLERY CIRCUS PARADE         4   \n",
       "541908    581587     22138       BAKING SET 9 PIECE RETROSPOT          3   \n",
       "\n",
       "        UnitPrice  CustomerID         Country  year-month_intervals  \\\n",
       "46           2.55        1039  United Kingdom                     0   \n",
       "47           1.85        4017  United Kingdom                     0   \n",
       "48           1.85        4017  United Kingdom                     0   \n",
       "49           2.55        4017  United Kingdom                     0   \n",
       "50           3.39        4017  United Kingdom                     0   \n",
       "...           ...         ...             ...                   ...   \n",
       "541904       0.85         271          France                    12   \n",
       "541905       2.10         271          France                    12   \n",
       "541906       4.15         271          France                    12   \n",
       "541907       4.15         271          France                    12   \n",
       "541908       4.95         271          France                    12   \n",
       "\n",
       "        Total Price  Money_bins  \n",
       "46           204.00           0  \n",
       "47            11.10           0  \n",
       "48            11.10           0  \n",
       "49            15.30           0  \n",
       "50            20.34           0  \n",
       "...             ...         ...  \n",
       "541904        10.20           0  \n",
       "541905        12.60           0  \n",
       "541906        16.60           0  \n",
       "541907        16.60           0  \n",
       "541908        14.85           0  \n",
       "\n",
       "[215190 rows x 10 columns]"
      ]
     },
     "execution_count": 264,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "og_08_12 = df_list_time_intervals[1]\n",
    "og_08_12"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {
    "colab": {
     "background_save": true,
     "base_uri": "https://localhost:8080/",
     "height": 424
    },
    "id": "yP5OlAibfaHA",
    "outputId": "05d2e388-3cb0-45d6-e087-828f75c55490"
   },
   "outputs": [
    {
     "data": {
      "text/html": [
       "\n",
       "  <div id=\"df-c14bab28-dfd8-4643-9260-2748d669c20e\">\n",
       "    <div class=\"colab-df-container\">\n",
       "      <div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>No. of visits</th>\n",
       "      <th>Mean_purch</th>\n",
       "      <th>Sum_purch</th>\n",
       "      <th>Item_count</th>\n",
       "      <th>Total_quantity</th>\n",
       "      <th>Avg_quant</th>\n",
       "      <th>CustomerID</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>1</td>\n",
       "      <td>77183.600000</td>\n",
       "      <td>77183.60</td>\n",
       "      <td>1</td>\n",
       "      <td>74215</td>\n",
       "      <td>74215.000000</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>2</td>\n",
       "      <td>27.191127</td>\n",
       "      <td>1930.57</td>\n",
       "      <td>60</td>\n",
       "      <td>1159</td>\n",
       "      <td>16.323944</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>2</td>\n",
       "      <td>54.040000</td>\n",
       "      <td>594.44</td>\n",
       "      <td>10</td>\n",
       "      <td>870</td>\n",
       "      <td>79.090909</td>\n",
       "      <td>2</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>1</td>\n",
       "      <td>24.076027</td>\n",
       "      <td>1757.55</td>\n",
       "      <td>73</td>\n",
       "      <td>631</td>\n",
       "      <td>8.643836</td>\n",
       "      <td>3</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>1</td>\n",
       "      <td>19.766667</td>\n",
       "      <td>296.50</td>\n",
       "      <td>15</td>\n",
       "      <td>98</td>\n",
       "      <td>6.533333</td>\n",
       "      <td>5</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>...</th>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3021</th>\n",
       "      <td>1</td>\n",
       "      <td>11.545714</td>\n",
       "      <td>80.82</td>\n",
       "      <td>7</td>\n",
       "      <td>54</td>\n",
       "      <td>7.714286</td>\n",
       "      <td>4335</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3022</th>\n",
       "      <td>1</td>\n",
       "      <td>15.568000</td>\n",
       "      <td>77.84</td>\n",
       "      <td>5</td>\n",
       "      <td>28</td>\n",
       "      <td>5.600000</td>\n",
       "      <td>4336</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3023</th>\n",
       "      <td>6</td>\n",
       "      <td>3.532794</td>\n",
       "      <td>872.60</td>\n",
       "      <td>123</td>\n",
       "      <td>544</td>\n",
       "      <td>2.202429</td>\n",
       "      <td>4337</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3024</th>\n",
       "      <td>3</td>\n",
       "      <td>26.246857</td>\n",
       "      <td>1837.28</td>\n",
       "      <td>59</td>\n",
       "      <td>1586</td>\n",
       "      <td>22.657143</td>\n",
       "      <td>4338</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3025</th>\n",
       "      <td>738</td>\n",
       "      <td>15.674095</td>\n",
       "      <td>534282.87</td>\n",
       "      <td>3018</td>\n",
       "      <td>141032</td>\n",
       "      <td>4.137413</td>\n",
       "      <td>4339</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "<p>3026 rows × 7 columns</p>\n",
       "</div>\n",
       "      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-c14bab28-dfd8-4643-9260-2748d669c20e')\"\n",
       "              title=\"Convert this dataframe to an interactive table.\"\n",
       "              style=\"display:none;\">\n",
       "        \n",
       "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
       "       width=\"24px\">\n",
       "    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n",
       "    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n",
       "  </svg>\n",
       "      </button>\n",
       "      \n",
       "  <style>\n",
       "    .colab-df-container {\n",
       "      display:flex;\n",
       "      flex-wrap:wrap;\n",
       "      gap: 12px;\n",
       "    }\n",
       "\n",
       "    .colab-df-convert {\n",
       "      background-color: #E8F0FE;\n",
       "      border: none;\n",
       "      border-radius: 50%;\n",
       "      cursor: pointer;\n",
       "      display: none;\n",
       "      fill: #1967D2;\n",
       "      height: 32px;\n",
       "      padding: 0 0 0 0;\n",
       "      width: 32px;\n",
       "    }\n",
       "\n",
       "    .colab-df-convert:hover {\n",
       "      background-color: #E2EBFA;\n",
       "      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
       "      fill: #174EA6;\n",
       "    }\n",
       "\n",
       "    [theme=dark] .colab-df-convert {\n",
       "      background-color: #3B4455;\n",
       "      fill: #D2E3FC;\n",
       "    }\n",
       "\n",
       "    [theme=dark] .colab-df-convert:hover {\n",
       "      background-color: #434B5C;\n",
       "      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
       "      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
       "      fill: #FFFFFF;\n",
       "    }\n",
       "  </style>\n",
       "\n",
       "      <script>\n",
       "        const buttonEl =\n",
       "          document.querySelector('#df-c14bab28-dfd8-4643-9260-2748d669c20e button.colab-df-convert');\n",
       "        buttonEl.style.display =\n",
       "          google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
       "\n",
       "        async function convertToInteractive(key) {\n",
       "          const element = document.querySelector('#df-c14bab28-dfd8-4643-9260-2748d669c20e');\n",
       "          const dataTable =\n",
       "            await google.colab.kernel.invokeFunction('convertToInteractive',\n",
       "                                                     [key], {});\n",
       "          if (!dataTable) return;\n",
       "\n",
       "          const docLinkHtml = 'Like what you see? Visit the ' +\n",
       "            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n",
       "            + ' to learn more about interactive tables.';\n",
       "          element.innerHTML = '';\n",
       "          dataTable['output_type'] = 'display_data';\n",
       "          await google.colab.output.renderOutput(dataTable, element);\n",
       "          const docLink = document.createElement('div');\n",
       "          docLink.innerHTML = docLinkHtml;\n",
       "          element.appendChild(docLink);\n",
       "        }\n",
       "      </script>\n",
       "    </div>\n",
       "  </div>\n",
       "  "
      ],
      "text/plain": [
       "      No. of visits    Mean_purch  Sum_purch  Item_count  Total_quantity  \\\n",
       "0                 1  77183.600000   77183.60           1           74215   \n",
       "1                 2     27.191127    1930.57          60            1159   \n",
       "2                 2     54.040000     594.44          10             870   \n",
       "3                 1     24.076027    1757.55          73             631   \n",
       "4                 1     19.766667     296.50          15              98   \n",
       "...             ...           ...        ...         ...             ...   \n",
       "3021              1     11.545714      80.82           7              54   \n",
       "3022              1     15.568000      77.84           5              28   \n",
       "3023              6      3.532794     872.60         123             544   \n",
       "3024              3     26.246857    1837.28          59            1586   \n",
       "3025            738     15.674095  534282.87        3018          141032   \n",
       "\n",
       "         Avg_quant  CustomerID  \n",
       "0     74215.000000           0  \n",
       "1        16.323944           1  \n",
       "2        79.090909           2  \n",
       "3         8.643836           3  \n",
       "4         6.533333           5  \n",
       "...            ...         ...  \n",
       "3021      7.714286        4335  \n",
       "3022      5.600000        4336  \n",
       "3023      2.202429        4337  \n",
       "3024     22.657143        4338  \n",
       "3025      4.137413        4339  \n",
       "\n",
       "[3026 rows x 7 columns]"
      ]
     },
     "execution_count": 265,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "dvt_08_12= person_df(og_08_12)                  #Our function gives such a dataframe by which we can form clusters using KMeans\n",
    "dvt_08_12"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {
    "colab": {
     "background_save": true,
     "base_uri": "https://localhost:8080/",
     "height": 478
    },
    "id": "gA2XiL3Efeq7",
    "outputId": "3094b35c-ca7b-44ba-858d-28a0b2a6be5a"
   },
   "outputs": [
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "/usr/local/lib/python3.9/dist-packages/sklearn/cluster/_kmeans.py:870: FutureWarning: The default value of `n_init` will change from 10 to 'auto' in 1.4. Set the value of `n_init` explicitly to suppress the warning\n",
      "  warnings.warn(\n"
     ]
    },
    {
     "data": {
      "text/html": [
       "\n",
       "  <div id=\"df-775df89a-1fba-42d3-8c33-3714e0ea687e\">\n",
       "    <div class=\"colab-df-container\">\n",
       "      <div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>No. of visits</th>\n",
       "      <th>Mean_purch</th>\n",
       "      <th>Sum_purch</th>\n",
       "      <th>Item_count</th>\n",
       "      <th>Total_quantity</th>\n",
       "      <th>Avg_quant</th>\n",
       "      <th>CustomerID</th>\n",
       "      <th>cluster_labels</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>1</td>\n",
       "      <td>77183.600000</td>\n",
       "      <td>77183.60</td>\n",
       "      <td>1</td>\n",
       "      <td>74215</td>\n",
       "      <td>74215.000000</td>\n",
       "      <td>0</td>\n",
       "      <td>2</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>2</td>\n",
       "      <td>27.191127</td>\n",
       "      <td>1930.57</td>\n",
       "      <td>60</td>\n",
       "      <td>1159</td>\n",
       "      <td>16.323944</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>2</td>\n",
       "      <td>54.040000</td>\n",
       "      <td>594.44</td>\n",
       "      <td>10</td>\n",
       "      <td>870</td>\n",
       "      <td>79.090909</td>\n",
       "      <td>2</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>1</td>\n",
       "      <td>24.076027</td>\n",
       "      <td>1757.55</td>\n",
       "      <td>73</td>\n",
       "      <td>631</td>\n",
       "      <td>8.643836</td>\n",
       "      <td>3</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>1</td>\n",
       "      <td>19.766667</td>\n",
       "      <td>296.50</td>\n",
       "      <td>15</td>\n",
       "      <td>98</td>\n",
       "      <td>6.533333</td>\n",
       "      <td>5</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>...</th>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3021</th>\n",
       "      <td>1</td>\n",
       "      <td>11.545714</td>\n",
       "      <td>80.82</td>\n",
       "      <td>7</td>\n",
       "      <td>54</td>\n",
       "      <td>7.714286</td>\n",
       "      <td>4335</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3022</th>\n",
       "      <td>1</td>\n",
       "      <td>15.568000</td>\n",
       "      <td>77.84</td>\n",
       "      <td>5</td>\n",
       "      <td>28</td>\n",
       "      <td>5.600000</td>\n",
       "      <td>4336</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3023</th>\n",
       "      <td>6</td>\n",
       "      <td>3.532794</td>\n",
       "      <td>872.60</td>\n",
       "      <td>123</td>\n",
       "      <td>544</td>\n",
       "      <td>2.202429</td>\n",
       "      <td>4337</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3024</th>\n",
       "      <td>3</td>\n",
       "      <td>26.246857</td>\n",
       "      <td>1837.28</td>\n",
       "      <td>59</td>\n",
       "      <td>1586</td>\n",
       "      <td>22.657143</td>\n",
       "      <td>4338</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3025</th>\n",
       "      <td>738</td>\n",
       "      <td>15.674095</td>\n",
       "      <td>534282.87</td>\n",
       "      <td>3018</td>\n",
       "      <td>141032</td>\n",
       "      <td>4.137413</td>\n",
       "      <td>4339</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "<p>3026 rows × 8 columns</p>\n",
       "</div>\n",
       "      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-775df89a-1fba-42d3-8c33-3714e0ea687e')\"\n",
       "              title=\"Convert this dataframe to an interactive table.\"\n",
       "              style=\"display:none;\">\n",
       "        \n",
       "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
       "       width=\"24px\">\n",
       "    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n",
       "    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n",
       "  </svg>\n",
       "      </button>\n",
       "      \n",
       "  <style>\n",
       "    .colab-df-container {\n",
       "      display:flex;\n",
       "      flex-wrap:wrap;\n",
       "      gap: 12px;\n",
       "    }\n",
       "\n",
       "    .colab-df-convert {\n",
       "      background-color: #E8F0FE;\n",
       "      border: none;\n",
       "      border-radius: 50%;\n",
       "      cursor: pointer;\n",
       "      display: none;\n",
       "      fill: #1967D2;\n",
       "      height: 32px;\n",
       "      padding: 0 0 0 0;\n",
       "      width: 32px;\n",
       "    }\n",
       "\n",
       "    .colab-df-convert:hover {\n",
       "      background-color: #E2EBFA;\n",
       "      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
       "      fill: #174EA6;\n",
       "    }\n",
       "\n",
       "    [theme=dark] .colab-df-convert {\n",
       "      background-color: #3B4455;\n",
       "      fill: #D2E3FC;\n",
       "    }\n",
       "\n",
       "    [theme=dark] .colab-df-convert:hover {\n",
       "      background-color: #434B5C;\n",
       "      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
       "      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
       "      fill: #FFFFFF;\n",
       "    }\n",
       "  </style>\n",
       "\n",
       "      <script>\n",
       "        const buttonEl =\n",
       "          document.querySelector('#df-775df89a-1fba-42d3-8c33-3714e0ea687e button.colab-df-convert');\n",
       "        buttonEl.style.display =\n",
       "          google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
       "\n",
       "        async function convertToInteractive(key) {\n",
       "          const element = document.querySelector('#df-775df89a-1fba-42d3-8c33-3714e0ea687e');\n",
       "          const dataTable =\n",
       "            await google.colab.kernel.invokeFunction('convertToInteractive',\n",
       "                                                     [key], {});\n",
       "          if (!dataTable) return;\n",
       "\n",
       "          const docLinkHtml = 'Like what you see? Visit the ' +\n",
       "            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n",
       "            + ' to learn more about interactive tables.';\n",
       "          element.innerHTML = '';\n",
       "          dataTable['output_type'] = 'display_data';\n",
       "          await google.colab.output.renderOutput(dataTable, element);\n",
       "          const docLink = document.createElement('div');\n",
       "          docLink.innerHTML = docLinkHtml;\n",
       "          element.appendChild(docLink);\n",
       "        }\n",
       "      </script>\n",
       "    </div>\n",
       "  </div>\n",
       "  "
      ],
      "text/plain": [
       "      No. of visits    Mean_purch  Sum_purch  Item_count  Total_quantity  \\\n",
       "0                 1  77183.600000   77183.60           1           74215   \n",
       "1                 2     27.191127    1930.57          60            1159   \n",
       "2                 2     54.040000     594.44          10             870   \n",
       "3                 1     24.076027    1757.55          73             631   \n",
       "4                 1     19.766667     296.50          15              98   \n",
       "...             ...           ...        ...         ...             ...   \n",
       "3021              1     11.545714      80.82           7              54   \n",
       "3022              1     15.568000      77.84           5              28   \n",
       "3023              6      3.532794     872.60         123             544   \n",
       "3024              3     26.246857    1837.28          59            1586   \n",
       "3025            738     15.674095  534282.87        3018          141032   \n",
       "\n",
       "         Avg_quant  CustomerID  cluster_labels  \n",
       "0     74215.000000           0               2  \n",
       "1        16.323944           1               0  \n",
       "2        79.090909           2               0  \n",
       "3         8.643836           3               0  \n",
       "4         6.533333           5               0  \n",
       "...            ...         ...             ...  \n",
       "3021      7.714286        4335               0  \n",
       "3022      5.600000        4336               0  \n",
       "3023      2.202429        4337               0  \n",
       "3024     22.657143        4338               0  \n",
       "3025      4.137413        4339               1  \n",
       "\n",
       "[3026 rows x 8 columns]"
      ]
     },
     "execution_count": 266,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "df_08_12 = df_cluster_labels(dvt_08_12,3)\n",
    "df_08_12"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {
    "colab": {
     "background_save": true,
     "base_uri": "https://localhost:8080/"
    },
    "id": "vlTT94_Tqk4N",
    "outputId": "8efc70b1-3821-433e-80fc-b955667ba6d3"
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "The Silhouette Score is :- 0.9702524284242895\n"
     ]
    }
   ],
   "source": [
    "silhte_score_08_12 = silhouette_score(dvt_08_12, df_08_12['cluster_labels'])\n",
    "print(\"The Silhouette Score is :- \"+str(silhte_score_08_12))"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {
    "colab": {
     "background_save": true,
     "base_uri": "https://localhost:8080/"
    },
    "id": "uQs22MmTfkzX",
    "outputId": "c9072c94-640b-4fe6-e4ab-70589fa282cd"
   },
   "outputs": [
    {
     "data": {
      "text/plain": [
       "0    3013\n",
       "2      12\n",
       "1       1\n",
       "Name: cluster_labels, dtype: int64"
      ]
     },
     "execution_count": 268,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "df_08_12['cluster_labels'].value_counts()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {
    "colab": {
     "background_save": true,
     "base_uri": "https://localhost:8080/",
     "height": 472
    },
    "id": "xtUw0-61fpVv",
    "outputId": "34152cc3-1d3e-4928-e1a0-50b89bf9644c"
   },
   "outputs": [
    {
     "data": {
      "image/png": "",
      "text/plain": [
       "<Figure size 640x480 with 1 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "plt.scatter(df_08_12['Mean_purch'], df_08_12['Sum_purch'], c=df_08_12['cluster_labels'], cmap='viridis')\n",
    "plt.title(\"For Time: 8:00 - 12:00\")\n",
    "plt.xlabel('Mean_purch')\n",
    "plt.ylabel('Sum_purch')\n",
    "plt.show()\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {
    "colab": {
     "background_save": true,
     "base_uri": "https://localhost:8080/"
    },
    "id": "thIFxDfeiwaM",
    "outputId": "a34a1192-71e2-4fa4-8dd7-2393791270de"
   },
   "outputs": [
    {
     "data": {
      "text/plain": [
       "[1, 2]"
      ]
     },
     "execution_count": 270,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "# #We apply this function ONLY if we find outliers\n",
    "\n",
    "outliers_08_12  = get_n_outlier_labels(df_08_12,2)\n",
    "outliers_08_12"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {
    "colab": {
     "background_save": true,
     "base_uri": "https://localhost:8080/",
     "height": 424
    },
    "id": "PmVbaBc7f0ux",
    "outputId": "5692008b-46de-48bc-94c4-67301e14714b"
   },
   "outputs": [
    {
     "data": {
      "text/html": [
       "\n",
       "  <div id=\"df-f6fcd2b7-3036-4c38-baee-9b41ebf365fe\">\n",
       "    <div class=\"colab-df-container\">\n",
       "      <div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>No. of visits</th>\n",
       "      <th>Mean_purch</th>\n",
       "      <th>Sum_purch</th>\n",
       "      <th>Item_count</th>\n",
       "      <th>Total_quantity</th>\n",
       "      <th>Avg_quant</th>\n",
       "      <th>CustomerID</th>\n",
       "      <th>cluster_labels</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>2</td>\n",
       "      <td>27.191127</td>\n",
       "      <td>1930.57</td>\n",
       "      <td>60</td>\n",
       "      <td>1159</td>\n",
       "      <td>16.323944</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>2</td>\n",
       "      <td>54.040000</td>\n",
       "      <td>594.44</td>\n",
       "      <td>10</td>\n",
       "      <td>870</td>\n",
       "      <td>79.090909</td>\n",
       "      <td>2</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>1</td>\n",
       "      <td>24.076027</td>\n",
       "      <td>1757.55</td>\n",
       "      <td>73</td>\n",
       "      <td>631</td>\n",
       "      <td>8.643836</td>\n",
       "      <td>3</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>1</td>\n",
       "      <td>19.766667</td>\n",
       "      <td>296.50</td>\n",
       "      <td>15</td>\n",
       "      <td>98</td>\n",
       "      <td>6.533333</td>\n",
       "      <td>5</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>5</th>\n",
       "      <td>2</td>\n",
       "      <td>48.299649</td>\n",
       "      <td>2753.08</td>\n",
       "      <td>53</td>\n",
       "      <td>1586</td>\n",
       "      <td>27.824561</td>\n",
       "      <td>9</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>...</th>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3020</th>\n",
       "      <td>1</td>\n",
       "      <td>18.060000</td>\n",
       "      <td>180.60</td>\n",
       "      <td>10</td>\n",
       "      <td>45</td>\n",
       "      <td>4.500000</td>\n",
       "      <td>4334</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3021</th>\n",
       "      <td>1</td>\n",
       "      <td>11.545714</td>\n",
       "      <td>80.82</td>\n",
       "      <td>7</td>\n",
       "      <td>54</td>\n",
       "      <td>7.714286</td>\n",
       "      <td>4335</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3022</th>\n",
       "      <td>1</td>\n",
       "      <td>15.568000</td>\n",
       "      <td>77.84</td>\n",
       "      <td>5</td>\n",
       "      <td>28</td>\n",
       "      <td>5.600000</td>\n",
       "      <td>4336</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3023</th>\n",
       "      <td>6</td>\n",
       "      <td>3.532794</td>\n",
       "      <td>872.60</td>\n",
       "      <td>123</td>\n",
       "      <td>544</td>\n",
       "      <td>2.202429</td>\n",
       "      <td>4337</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3024</th>\n",
       "      <td>3</td>\n",
       "      <td>26.246857</td>\n",
       "      <td>1837.28</td>\n",
       "      <td>59</td>\n",
       "      <td>1586</td>\n",
       "      <td>22.657143</td>\n",
       "      <td>4338</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "<p>3013 rows × 8 columns</p>\n",
       "</div>\n",
       "      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-f6fcd2b7-3036-4c38-baee-9b41ebf365fe')\"\n",
       "              title=\"Convert this dataframe to an interactive table.\"\n",
       "              style=\"display:none;\">\n",
       "        \n",
       "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
       "       width=\"24px\">\n",
       "    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n",
       "    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n",
       "  </svg>\n",
       "      </button>\n",
       "      \n",
       "  <style>\n",
       "    .colab-df-container {\n",
       "      display:flex;\n",
       "      flex-wrap:wrap;\n",
       "      gap: 12px;\n",
       "    }\n",
       "\n",
       "    .colab-df-convert {\n",
       "      background-color: #E8F0FE;\n",
       "      border: none;\n",
       "      border-radius: 50%;\n",
       "      cursor: pointer;\n",
       "      display: none;\n",
       "      fill: #1967D2;\n",
       "      height: 32px;\n",
       "      padding: 0 0 0 0;\n",
       "      width: 32px;\n",
       "    }\n",
       "\n",
       "    .colab-df-convert:hover {\n",
       "      background-color: #E2EBFA;\n",
       "      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
       "      fill: #174EA6;\n",
       "    }\n",
       "\n",
       "    [theme=dark] .colab-df-convert {\n",
       "      background-color: #3B4455;\n",
       "      fill: #D2E3FC;\n",
       "    }\n",
       "\n",
       "    [theme=dark] .colab-df-convert:hover {\n",
       "      background-color: #434B5C;\n",
       "      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
       "      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
       "      fill: #FFFFFF;\n",
       "    }\n",
       "  </style>\n",
       "\n",
       "      <script>\n",
       "        const buttonEl =\n",
       "          document.querySelector('#df-f6fcd2b7-3036-4c38-baee-9b41ebf365fe button.colab-df-convert');\n",
       "        buttonEl.style.display =\n",
       "          google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
       "\n",
       "        async function convertToInteractive(key) {\n",
       "          const element = document.querySelector('#df-f6fcd2b7-3036-4c38-baee-9b41ebf365fe');\n",
       "          const dataTable =\n",
       "            await google.colab.kernel.invokeFunction('convertToInteractive',\n",
       "                                                     [key], {});\n",
       "          if (!dataTable) return;\n",
       "\n",
       "          const docLinkHtml = 'Like what you see? Visit the ' +\n",
       "            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n",
       "            + ' to learn more about interactive tables.';\n",
       "          element.innerHTML = '';\n",
       "          dataTable['output_type'] = 'display_data';\n",
       "          await google.colab.output.renderOutput(dataTable, element);\n",
       "          const docLink = document.createElement('div');\n",
       "          docLink.innerHTML = docLinkHtml;\n",
       "          element.appendChild(docLink);\n",
       "        }\n",
       "      </script>\n",
       "    </div>\n",
       "  </div>\n",
       "  "
      ],
      "text/plain": [
       "      No. of visits  Mean_purch  Sum_purch  Item_count  Total_quantity  \\\n",
       "1                 2   27.191127    1930.57          60            1159   \n",
       "2                 2   54.040000     594.44          10             870   \n",
       "3                 1   24.076027    1757.55          73             631   \n",
       "4                 1   19.766667     296.50          15              98   \n",
       "5                 2   48.299649    2753.08          53            1586   \n",
       "...             ...         ...        ...         ...             ...   \n",
       "3020              1   18.060000     180.60          10              45   \n",
       "3021              1   11.545714      80.82           7              54   \n",
       "3022              1   15.568000      77.84           5              28   \n",
       "3023              6    3.532794     872.60         123             544   \n",
       "3024              3   26.246857    1837.28          59            1586   \n",
       "\n",
       "      Avg_quant  CustomerID  cluster_labels  \n",
       "1     16.323944           1               0  \n",
       "2     79.090909           2               0  \n",
       "3      8.643836           3               0  \n",
       "4      6.533333           5               0  \n",
       "5     27.824561           9               0  \n",
       "...         ...         ...             ...  \n",
       "3020   4.500000        4334               0  \n",
       "3021   7.714286        4335               0  \n",
       "3022   5.600000        4336               0  \n",
       "3023   2.202429        4337               0  \n",
       "3024  22.657143        4338               0  \n",
       "\n",
       "[3013 rows x 8 columns]"
      ]
     },
     "execution_count": 271,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "#Thus Clusters 1 and 2 are outliers as they have very few datapoints(Customers)\n",
    "#So we remove them and then applyKMeans again\n",
    "#Thus\n",
    "#Then check for outliers and if required, repeat the process\n",
    "#Below is for outliers:-\n",
    "\n",
    "df_08_12 = df_08_12[df_08_12['cluster_labels']!=outliers_08_12[0]]\n",
    "df_08_12 = df_08_12[df_08_12['cluster_labels']!=outliers_08_12[1]]\n",
    "df_08_12\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {
    "colab": {
     "background_save": true,
     "base_uri": "https://localhost:8080/"
    },
    "id": "MLwaaldbf6vg",
    "outputId": "b7e4c170-5ddd-49b0-ce9d-64c1f622d493"
   },
   "outputs": [
    {
     "data": {
      "text/plain": [
       "0    3013\n",
       "Name: cluster_labels, dtype: int64"
      ]
     },
     "execution_count": 272,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "df_08_12['cluster_labels'].value_counts()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {
    "colab": {
     "background_save": true,
     "base_uri": "https://localhost:8080/",
     "height": 478
    },
    "id": "ptyDlPXkrYyj",
    "outputId": "4c9539d3-f4f1-405b-d675-008032ff2318"
   },
   "outputs": [
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "/usr/local/lib/python3.9/dist-packages/sklearn/cluster/_kmeans.py:870: FutureWarning: The default value of `n_init` will change from 10 to 'auto' in 1.4. Set the value of `n_init` explicitly to suppress the warning\n",
      "  warnings.warn(\n"
     ]
    },
    {
     "data": {
      "text/html": [
       "\n",
       "  <div id=\"df-baff9ced-f3ce-4ffd-bd22-5c8af0e1bc90\">\n",
       "    <div class=\"colab-df-container\">\n",
       "      <div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>No. of visits</th>\n",
       "      <th>Mean_purch</th>\n",
       "      <th>Sum_purch</th>\n",
       "      <th>Item_count</th>\n",
       "      <th>Total_quantity</th>\n",
       "      <th>Avg_quant</th>\n",
       "      <th>CustomerID</th>\n",
       "      <th>cluster_labels</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>2</td>\n",
       "      <td>27.191127</td>\n",
       "      <td>1930.57</td>\n",
       "      <td>60</td>\n",
       "      <td>1159</td>\n",
       "      <td>16.323944</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>2</td>\n",
       "      <td>54.040000</td>\n",
       "      <td>594.44</td>\n",
       "      <td>10</td>\n",
       "      <td>870</td>\n",
       "      <td>79.090909</td>\n",
       "      <td>2</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>1</td>\n",
       "      <td>24.076027</td>\n",
       "      <td>1757.55</td>\n",
       "      <td>73</td>\n",
       "      <td>631</td>\n",
       "      <td>8.643836</td>\n",
       "      <td>3</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>1</td>\n",
       "      <td>19.766667</td>\n",
       "      <td>296.50</td>\n",
       "      <td>15</td>\n",
       "      <td>98</td>\n",
       "      <td>6.533333</td>\n",
       "      <td>5</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>5</th>\n",
       "      <td>2</td>\n",
       "      <td>48.299649</td>\n",
       "      <td>2753.08</td>\n",
       "      <td>53</td>\n",
       "      <td>1586</td>\n",
       "      <td>27.824561</td>\n",
       "      <td>9</td>\n",
       "      <td>2</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>...</th>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3020</th>\n",
       "      <td>1</td>\n",
       "      <td>18.060000</td>\n",
       "      <td>180.60</td>\n",
       "      <td>10</td>\n",
       "      <td>45</td>\n",
       "      <td>4.500000</td>\n",
       "      <td>4334</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3021</th>\n",
       "      <td>1</td>\n",
       "      <td>11.545714</td>\n",
       "      <td>80.82</td>\n",
       "      <td>7</td>\n",
       "      <td>54</td>\n",
       "      <td>7.714286</td>\n",
       "      <td>4335</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3022</th>\n",
       "      <td>1</td>\n",
       "      <td>15.568000</td>\n",
       "      <td>77.84</td>\n",
       "      <td>5</td>\n",
       "      <td>28</td>\n",
       "      <td>5.600000</td>\n",
       "      <td>4336</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3023</th>\n",
       "      <td>6</td>\n",
       "      <td>3.532794</td>\n",
       "      <td>872.60</td>\n",
       "      <td>123</td>\n",
       "      <td>544</td>\n",
       "      <td>2.202429</td>\n",
       "      <td>4337</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3024</th>\n",
       "      <td>3</td>\n",
       "      <td>26.246857</td>\n",
       "      <td>1837.28</td>\n",
       "      <td>59</td>\n",
       "      <td>1586</td>\n",
       "      <td>22.657143</td>\n",
       "      <td>4338</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "<p>3013 rows × 8 columns</p>\n",
       "</div>\n",
       "      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-baff9ced-f3ce-4ffd-bd22-5c8af0e1bc90')\"\n",
       "              title=\"Convert this dataframe to an interactive table.\"\n",
       "              style=\"display:none;\">\n",
       "        \n",
       "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
       "       width=\"24px\">\n",
       "    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n",
       "    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n",
       "  </svg>\n",
       "      </button>\n",
       "      \n",
       "  <style>\n",
       "    .colab-df-container {\n",
       "      display:flex;\n",
       "      flex-wrap:wrap;\n",
       "      gap: 12px;\n",
       "    }\n",
       "\n",
       "    .colab-df-convert {\n",
       "      background-color: #E8F0FE;\n",
       "      border: none;\n",
       "      border-radius: 50%;\n",
       "      cursor: pointer;\n",
       "      display: none;\n",
       "      fill: #1967D2;\n",
       "      height: 32px;\n",
       "      padding: 0 0 0 0;\n",
       "      width: 32px;\n",
       "    }\n",
       "\n",
       "    .colab-df-convert:hover {\n",
       "      background-color: #E2EBFA;\n",
       "      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
       "      fill: #174EA6;\n",
       "    }\n",
       "\n",
       "    [theme=dark] .colab-df-convert {\n",
       "      background-color: #3B4455;\n",
       "      fill: #D2E3FC;\n",
       "    }\n",
       "\n",
       "    [theme=dark] .colab-df-convert:hover {\n",
       "      background-color: #434B5C;\n",
       "      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
       "      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
       "      fill: #FFFFFF;\n",
       "    }\n",
       "  </style>\n",
       "\n",
       "      <script>\n",
       "        const buttonEl =\n",
       "          document.querySelector('#df-baff9ced-f3ce-4ffd-bd22-5c8af0e1bc90 button.colab-df-convert');\n",
       "        buttonEl.style.display =\n",
       "          google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
       "\n",
       "        async function convertToInteractive(key) {\n",
       "          const element = document.querySelector('#df-baff9ced-f3ce-4ffd-bd22-5c8af0e1bc90');\n",
       "          const dataTable =\n",
       "            await google.colab.kernel.invokeFunction('convertToInteractive',\n",
       "                                                     [key], {});\n",
       "          if (!dataTable) return;\n",
       "\n",
       "          const docLinkHtml = 'Like what you see? Visit the ' +\n",
       "            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n",
       "            + ' to learn more about interactive tables.';\n",
       "          element.innerHTML = '';\n",
       "          dataTable['output_type'] = 'display_data';\n",
       "          await google.colab.output.renderOutput(dataTable, element);\n",
       "          const docLink = document.createElement('div');\n",
       "          docLink.innerHTML = docLinkHtml;\n",
       "          element.appendChild(docLink);\n",
       "        }\n",
       "      </script>\n",
       "    </div>\n",
       "  </div>\n",
       "  "
      ],
      "text/plain": [
       "      No. of visits  Mean_purch  Sum_purch  Item_count  Total_quantity  \\\n",
       "1                 2   27.191127    1930.57          60            1159   \n",
       "2                 2   54.040000     594.44          10             870   \n",
       "3                 1   24.076027    1757.55          73             631   \n",
       "4                 1   19.766667     296.50          15              98   \n",
       "5                 2   48.299649    2753.08          53            1586   \n",
       "...             ...         ...        ...         ...             ...   \n",
       "3020              1   18.060000     180.60          10              45   \n",
       "3021              1   11.545714      80.82           7              54   \n",
       "3022              1   15.568000      77.84           5              28   \n",
       "3023              6    3.532794     872.60         123             544   \n",
       "3024              3   26.246857    1837.28          59            1586   \n",
       "\n",
       "      Avg_quant  CustomerID  cluster_labels  \n",
       "1     16.323944           1               0  \n",
       "2     79.090909           2               0  \n",
       "3      8.643836           3               0  \n",
       "4      6.533333           5               0  \n",
       "5     27.824561           9               2  \n",
       "...         ...         ...             ...  \n",
       "3020   4.500000        4334               0  \n",
       "3021   7.714286        4335               0  \n",
       "3022   5.600000        4336               0  \n",
       "3023   2.202429        4337               0  \n",
       "3024  22.657143        4338               0  \n",
       "\n",
       "[3013 rows x 8 columns]"
      ]
     },
     "execution_count": 273,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "#Thus the outliers are removed.\n",
    "#Now we again apply the clustering pipeline\n",
    "\n",
    "df_08_12_person = df_08_12.copy(deep=True)\n",
    "df_08_12_person.drop(['cluster_labels'],axis=1,inplace=True)\n",
    "\n",
    "df_08_12_new = df_cluster_labels(df_08_12_person,3)\n",
    "df_08_12_new"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {
    "colab": {
     "background_save": true,
     "base_uri": "https://localhost:8080/"
    },
    "id": "wRPFhNxRq8f0",
    "outputId": "961eaa6e-e2d3-40c7-d5d2-e5eeac450d8a"
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "The Silhouette Score is :- 0.6168069024017672\n"
     ]
    }
   ],
   "source": [
    "silhte_score_08_12_new = silhouette_score(df_08_12_person, df_08_12_new['cluster_labels'])\n",
    "print(\"The Silhouette Score is :- \"+str(silhte_score_08_12_new))\n",
    "#Indicates that silhouette score is realistic for dataset without outliers"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {
    "colab": {
     "background_save": true,
     "base_uri": "https://localhost:8080/"
    },
    "id": "ODD6U1QyriTc",
    "outputId": "5cb2a932-d71e-420a-d713-0d1f8d7a5c01"
   },
   "outputs": [
    {
     "data": {
      "text/plain": [
       "0    2733\n",
       "2     257\n",
       "1      23\n",
       "Name: cluster_labels, dtype: int64"
      ]
     },
     "execution_count": 275,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "df_08_12_new['cluster_labels'].value_counts()\n",
    "#These are comparatively good clusters"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {
    "colab": {
     "background_save": true,
     "base_uri": "https://localhost:8080/",
     "height": 472
    },
    "id": "bdqShYw8rotA",
    "outputId": "d930c3ab-e0d5-486f-bdbc-9f037660e25d"
   },
   "outputs": [
    {
     "data": {
      "image/png": "",
      "text/plain": [
       "<Figure size 640x480 with 1 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "plt.scatter(df_dec2010_new['Mean_purch'], df_dec2010_new['Sum_purch'], c=df_dec2010_new['cluster_labels'], cmap='viridis')\n",
    "plt.title(\"For Time: 8:00-12:00 (After removing outliers)\")\n",
    "plt.xlabel('Mean_purch')\n",
    "plt.ylabel('Sum_purch')\n",
    "plt.show()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {
    "colab": {
     "background_save": true,
     "base_uri": "https://localhost:8080/"
    },
    "id": "_Xj_rFVMrx_C",
    "outputId": "17c329c0-f58e-4d0a-9127-da7464d2ef80"
   },
   "outputs": [
    {
     "data": {
      "text/plain": [
       "[      CustomerID                                        Description\n",
       " 0              1  [AIRLINE BAG VINTAGE JET SET WHITE, AIRLINE BA...\n",
       " 1              2  [PACK OF 12 RED RETROSPOT TISSUES , PACK OF 12...\n",
       " 2              3  [PARISIENNE CURIO CABINET, SWEETHEART WALL TID...\n",
       " 3              5  [WOODEN HAPPY BIRTHDAY GARLAND, PINK DOUGHNUT ...\n",
       " 4             11  [FAIRY CAKE DESIGN UMBRELLA, CERAMIC STRAWBERR...\n",
       " ...          ...                                                ...\n",
       " 2728        4334  [WOOD BLACK BOARD ANT WHITE FINISH, RETROSPOT ...\n",
       " 2729        4335  [ROBOT BIRTHDAY CARD, CARD CIRCUS PARADE, PENN...\n",
       " 2730        4336  [REGENCY CAKESTAND 3 TIER, ROSES REGENCY TEACU...\n",
       " 2731        4337  [CREAM FELT EASTER EGG BASKET, BLUE FELT EASTE...\n",
       " 2732        4338  [SMALL PURPLE BABUSHKA NOTEBOOK , SMALL RED BA...\n",
       " \n",
       " [2733 rows x 2 columns],\n",
       "      CustomerID                                        Description\n",
       " 0             9  [BAKING SET 9 PIECE RETROSPOT , WHITE HEART CO...\n",
       " 1            12  [RETROSPOT BABUSHKA DOORSTOP, GINGHAM BABUSHKA...\n",
       " 2            15  [VINTAGE SEASIDE JIGSAW PUZZLES, WATERING CAN ...\n",
       " 3            20  [WHITE HANGING HEART T-LIGHT HOLDER, SPACE CAD...\n",
       " 4            27  [POPPY'S PLAYHOUSE BATHROOM, SET OF 6 3D KIT C...\n",
       " ..          ...                                                ...\n",
       " 252        4233  [KNITTED UNION FLAG HOT WATER BOTTLE, WRAP ENG...\n",
       " 253        4253  [WATERING CAN BLUE ELEPHANT, WATERING CAN PINK...\n",
       " 254        4292  [PACK 3 BOXES BIRD PANNETONE , ALARM CLOCK BAK...\n",
       " 255        4295  [COLOURING PENCILS BROWN TUBE, POTTERING MUG, ...\n",
       " 256        4298  [SET OF 3 BLACK FLYING DUCKS, ALARM CLOCK BAKE...\n",
       " \n",
       " [257 rows x 2 columns]]"
      ]
     },
     "execution_count": 277,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "t_08_12 = descrip_dict(og_08_12,df_08_12_new)\n",
    "t_08_12 = processlis(t_08_12)\n",
    "t_08_12"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {
    "colab": {
     "base_uri": "https://localhost:8080/",
     "height": 1000
    },
    "id": "xu4D_p9ZXfXC",
    "outputId": "cbd81866-0af1-4f77-cd13-e3df31dff898"
   },
   "outputs": [
    {
     "data": {
      "image/png": "",
      "text/plain": [
       "<Figure size 640x480 with 1 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "data": {
      "image/png": "",
      "text/plain": [
       "<Figure size 500x500 with 1 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "(13, 4)\n",
      "(1, 4)\n",
      "(3012, 4)\n"
     ]
    },
    {
     "data": {
      "image/png": "",
      "text/plain": [
       "<Figure size 640x480 with 1 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "data": {
      "image/png": "",
      "text/plain": [
       "<Figure size 500x500 with 1 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "(10, 5)\n",
      "(2, 5)\n",
      "(1, 5)\n"
     ]
    },
    {
     "data": {
      "text/plain": [
       "[]"
      ]
     },
     "execution_count": 278,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "pca = PCA(n_components = 3)\n",
    "pca.fit(X = dvt_08_12 )\n",
    "new_dvt = pca.transform(dvt_08_12 )\n",
    "\n",
    "new_dvt = pd.DataFrame(data = new_dvt,columns = ['X0','X1','X2'])\n",
    "model = AgglomerativeClustering(distance_threshold=0, n_clusters=None, linkage='ward').fit(new_dvt)\n",
    "\n",
    "plot_dendrogram(model, truncate_mode=\"level\", p=4)\n",
    "\n",
    "dict_08_12 =  Agglocls(new_dvt,3)\n",
    "\n",
    "final_dvt_08_12 = dict_08_12[0]\n",
    "pca_08_12 = PCA(n_components = 3)\n",
    "pca_08_12.fit(X = final_dvt_08_12)\n",
    "final_dvt_08_12 = pca_08_12.transform(final_dvt_08_12)\n",
    "final_dvt_08_12 = pd.DataFrame(data = final_dvt_08_12,columns = ['X0','X1','X2'])\n",
    "AggloDendo(final_dvt_08_12)\n",
    "\n",
    "dict_08_12_final =  AggloPca(final_dvt_08_12,3,dvt_08_12,'X1','X0')\n",
    "\n",
    "t_08_12_agg = descrip_dict(og_08_12,final_dvt_08_12)\n",
    "t_08_12_agg = processlis(t_08_12_agg)\n",
    "t_08_12_agg\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {
    "id": "rBHZZmzKyuZG"
   },
   "outputs": [],
   "source": [
    "Cluster_dict['t_08_12'] = (len(t_08_12),len(t_08_12_agg))\n",
    "dicti_t_08_12 = {}\n",
    "klis = []\n",
    "for i in range(Cluster_dict['t_08_12'][0]):\n",
    "  temp = apriori_rules(t_08_12[i],0.075)\n",
    "  klis.append(temp)\n",
    "alis = []\n",
    "for i in range(Cluster_dict['t_08_12'][1]):\n",
    "  temp = apriori_rules(t_08_12_agg[i],0.075)\n",
    "  alis.append(temp)\n",
    "#apriori_rules(1_agg[0],0.075)\n",
    "dicti_t_08_12['K-means'] = klis\n",
    "dicti_t_08_12['Agglo'] = alis\n",
    "\n",
    "Rules_dict['t_08_12'] = dicti_t_08_12"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {
    "id": "wii-desYX0OH"
   },
   "outputs": [],
   "source": [
    "#similar to october case we have very low number of customers which makes this case analysis non-usefull and very biased "
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {
    "id": "BkkaktMUtC-k"
   },
   "source": [
    "## For Time: 12:00 - 16:00"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {
    "colab": {
     "base_uri": "https://localhost:8080/",
     "height": 424
    },
    "id": "og4PY8wBtCH_",
    "outputId": "43835249-3989-484b-c02c-b1fc8f975e7a"
   },
   "outputs": [
    {
     "data": {
      "text/html": [
       "\n",
       "  <div id=\"df-f9a86f1c-82c8-4883-b179-5dfb4af80d94\">\n",
       "    <div class=\"colab-df-container\">\n",
       "      <div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>InvoiceNo</th>\n",
       "      <th>StockCode</th>\n",
       "      <th>Description</th>\n",
       "      <th>Quantity</th>\n",
       "      <th>UnitPrice</th>\n",
       "      <th>CustomerID</th>\n",
       "      <th>Country</th>\n",
       "      <th>year-month_intervals</th>\n",
       "      <th>Total Price</th>\n",
       "      <th>Money_bins</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>1109</th>\n",
       "      <td>536527</td>\n",
       "      <td>22809</td>\n",
       "      <td>SET OF 6 T-LIGHTS SANTA</td>\n",
       "      <td>6</td>\n",
       "      <td>2.95</td>\n",
       "      <td>258</td>\n",
       "      <td>Germany</td>\n",
       "      <td>0</td>\n",
       "      <td>17.70</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1110</th>\n",
       "      <td>536527</td>\n",
       "      <td>84347</td>\n",
       "      <td>ROTATING SILVER ANGELS T-LIGHT HLDR</td>\n",
       "      <td>6</td>\n",
       "      <td>2.55</td>\n",
       "      <td>258</td>\n",
       "      <td>Germany</td>\n",
       "      <td>0</td>\n",
       "      <td>15.30</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1111</th>\n",
       "      <td>536527</td>\n",
       "      <td>84945</td>\n",
       "      <td>MULTI COLOUR SILVER T-LIGHT HOLDER</td>\n",
       "      <td>12</td>\n",
       "      <td>0.85</td>\n",
       "      <td>258</td>\n",
       "      <td>Germany</td>\n",
       "      <td>0</td>\n",
       "      <td>10.20</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1112</th>\n",
       "      <td>536527</td>\n",
       "      <td>22242</td>\n",
       "      <td>5 HOOK HANGER MAGIC TOADSTOOL</td>\n",
       "      <td>12</td>\n",
       "      <td>1.65</td>\n",
       "      <td>258</td>\n",
       "      <td>Germany</td>\n",
       "      <td>0</td>\n",
       "      <td>19.80</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1113</th>\n",
       "      <td>536527</td>\n",
       "      <td>22244</td>\n",
       "      <td>3 HOOK HANGER MAGIC GARDEN</td>\n",
       "      <td>12</td>\n",
       "      <td>1.95</td>\n",
       "      <td>258</td>\n",
       "      <td>Germany</td>\n",
       "      <td>0</td>\n",
       "      <td>23.40</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>...</th>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>539860</th>\n",
       "      <td>581443</td>\n",
       "      <td>22756</td>\n",
       "      <td>LARGE YELLOW BABUSHKA NOTEBOOK</td>\n",
       "      <td>12</td>\n",
       "      <td>0.39</td>\n",
       "      <td>518</td>\n",
       "      <td>United Kingdom</td>\n",
       "      <td>12</td>\n",
       "      <td>4.68</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>539861</th>\n",
       "      <td>581443</td>\n",
       "      <td>22758</td>\n",
       "      <td>LARGE PURPLE BABUSHKA NOTEBOOK</td>\n",
       "      <td>12</td>\n",
       "      <td>0.39</td>\n",
       "      <td>518</td>\n",
       "      <td>United Kingdom</td>\n",
       "      <td>12</td>\n",
       "      <td>4.68</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>539862</th>\n",
       "      <td>581443</td>\n",
       "      <td>72800E</td>\n",
       "      <td>4 IVORY DINNER CANDLES SILVER FLOCK</td>\n",
       "      <td>36</td>\n",
       "      <td>0.79</td>\n",
       "      <td>518</td>\n",
       "      <td>United Kingdom</td>\n",
       "      <td>12</td>\n",
       "      <td>28.44</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>539863</th>\n",
       "      <td>581443</td>\n",
       "      <td>90086</td>\n",
       "      <td>CRYSTAL FROG PHONE CHARM</td>\n",
       "      <td>48</td>\n",
       "      <td>0.19</td>\n",
       "      <td>518</td>\n",
       "      <td>United Kingdom</td>\n",
       "      <td>12</td>\n",
       "      <td>9.12</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>539864</th>\n",
       "      <td>581443</td>\n",
       "      <td>90087</td>\n",
       "      <td>CRYSTAL SEA HORSE PHONE CHARM</td>\n",
       "      <td>48</td>\n",
       "      <td>0.19</td>\n",
       "      <td>518</td>\n",
       "      <td>United Kingdom</td>\n",
       "      <td>12</td>\n",
       "      <td>9.12</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "<p>267226 rows × 10 columns</p>\n",
       "</div>\n",
       "      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-f9a86f1c-82c8-4883-b179-5dfb4af80d94')\"\n",
       "              title=\"Convert this dataframe to an interactive table.\"\n",
       "              style=\"display:none;\">\n",
       "        \n",
       "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
       "       width=\"24px\">\n",
       "    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n",
       "    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n",
       "  </svg>\n",
       "      </button>\n",
       "      \n",
       "  <style>\n",
       "    .colab-df-container {\n",
       "      display:flex;\n",
       "      flex-wrap:wrap;\n",
       "      gap: 12px;\n",
       "    }\n",
       "\n",
       "    .colab-df-convert {\n",
       "      background-color: #E8F0FE;\n",
       "      border: none;\n",
       "      border-radius: 50%;\n",
       "      cursor: pointer;\n",
       "      display: none;\n",
       "      fill: #1967D2;\n",
       "      height: 32px;\n",
       "      padding: 0 0 0 0;\n",
       "      width: 32px;\n",
       "    }\n",
       "\n",
       "    .colab-df-convert:hover {\n",
       "      background-color: #E2EBFA;\n",
       "      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
       "      fill: #174EA6;\n",
       "    }\n",
       "\n",
       "    [theme=dark] .colab-df-convert {\n",
       "      background-color: #3B4455;\n",
       "      fill: #D2E3FC;\n",
       "    }\n",
       "\n",
       "    [theme=dark] .colab-df-convert:hover {\n",
       "      background-color: #434B5C;\n",
       "      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
       "      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
       "      fill: #FFFFFF;\n",
       "    }\n",
       "  </style>\n",
       "\n",
       "      <script>\n",
       "        const buttonEl =\n",
       "          document.querySelector('#df-f9a86f1c-82c8-4883-b179-5dfb4af80d94 button.colab-df-convert');\n",
       "        buttonEl.style.display =\n",
       "          google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
       "\n",
       "        async function convertToInteractive(key) {\n",
       "          const element = document.querySelector('#df-f9a86f1c-82c8-4883-b179-5dfb4af80d94');\n",
       "          const dataTable =\n",
       "            await google.colab.kernel.invokeFunction('convertToInteractive',\n",
       "                                                     [key], {});\n",
       "          if (!dataTable) return;\n",
       "\n",
       "          const docLinkHtml = 'Like what you see? Visit the ' +\n",
       "            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n",
       "            + ' to learn more about interactive tables.';\n",
       "          element.innerHTML = '';\n",
       "          dataTable['output_type'] = 'display_data';\n",
       "          await google.colab.output.renderOutput(dataTable, element);\n",
       "          const docLink = document.createElement('div');\n",
       "          docLink.innerHTML = docLinkHtml;\n",
       "          element.appendChild(docLink);\n",
       "        }\n",
       "      </script>\n",
       "    </div>\n",
       "  </div>\n",
       "  "
      ],
      "text/plain": [
       "       InvoiceNo StockCode                          Description  Quantity  \\\n",
       "1109      536527     22809              SET OF 6 T-LIGHTS SANTA         6   \n",
       "1110      536527     84347  ROTATING SILVER ANGELS T-LIGHT HLDR         6   \n",
       "1111      536527     84945   MULTI COLOUR SILVER T-LIGHT HOLDER        12   \n",
       "1112      536527     22242        5 HOOK HANGER MAGIC TOADSTOOL        12   \n",
       "1113      536527     22244           3 HOOK HANGER MAGIC GARDEN        12   \n",
       "...          ...       ...                                  ...       ...   \n",
       "539860    581443     22756      LARGE YELLOW BABUSHKA NOTEBOOK         12   \n",
       "539861    581443     22758     LARGE PURPLE BABUSHKA NOTEBOOK          12   \n",
       "539862    581443    72800E  4 IVORY DINNER CANDLES SILVER FLOCK        36   \n",
       "539863    581443     90086             CRYSTAL FROG PHONE CHARM        48   \n",
       "539864    581443     90087        CRYSTAL SEA HORSE PHONE CHARM        48   \n",
       "\n",
       "        UnitPrice  CustomerID         Country  year-month_intervals  \\\n",
       "1109         2.95         258         Germany                     0   \n",
       "1110         2.55         258         Germany                     0   \n",
       "1111         0.85         258         Germany                     0   \n",
       "1112         1.65         258         Germany                     0   \n",
       "1113         1.95         258         Germany                     0   \n",
       "...           ...         ...             ...                   ...   \n",
       "539860       0.39         518  United Kingdom                    12   \n",
       "539861       0.39         518  United Kingdom                    12   \n",
       "539862       0.79         518  United Kingdom                    12   \n",
       "539863       0.19         518  United Kingdom                    12   \n",
       "539864       0.19         518  United Kingdom                    12   \n",
       "\n",
       "        Total Price  Money_bins  \n",
       "1109          17.70           0  \n",
       "1110          15.30           0  \n",
       "1111          10.20           0  \n",
       "1112          19.80           0  \n",
       "1113          23.40           0  \n",
       "...             ...         ...  \n",
       "539860         4.68           0  \n",
       "539861         4.68           0  \n",
       "539862        28.44           0  \n",
       "539863         9.12           0  \n",
       "539864         9.12           0  \n",
       "\n",
       "[267226 rows x 10 columns]"
      ]
     },
     "execution_count": 281,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "og_12_16 = df_list_time_intervals[2]\n",
    "og_12_16"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {
    "colab": {
     "base_uri": "https://localhost:8080/",
     "height": 478
    },
    "id": "cuNmzImctWUQ",
    "outputId": "8d6b8b42-faaf-4ffb-f553-d39a393eddd8"
   },
   "outputs": [
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "/usr/local/lib/python3.9/dist-packages/sklearn/cluster/_kmeans.py:870: FutureWarning: The default value of `n_init` will change from 10 to 'auto' in 1.4. Set the value of `n_init` explicitly to suppress the warning\n",
      "  warnings.warn(\n"
     ]
    },
    {
     "data": {
      "text/html": [
       "\n",
       "  <div id=\"df-83123207-1231-4dce-ade9-3afee3be51f9\">\n",
       "    <div class=\"colab-df-container\">\n",
       "      <div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>No. of visits</th>\n",
       "      <th>Mean_purch</th>\n",
       "      <th>Sum_purch</th>\n",
       "      <th>Item_count</th>\n",
       "      <th>Total_quantity</th>\n",
       "      <th>Avg_quant</th>\n",
       "      <th>CustomerID</th>\n",
       "      <th>cluster_labels</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>4</td>\n",
       "      <td>20.163146</td>\n",
       "      <td>1794.52</td>\n",
       "      <td>68</td>\n",
       "      <td>1022</td>\n",
       "      <td>11.483146</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>1</td>\n",
       "      <td>103.333333</td>\n",
       "      <td>310.00</td>\n",
       "      <td>3</td>\n",
       "      <td>217</td>\n",
       "      <td>72.333333</td>\n",
       "      <td>2</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>1</td>\n",
       "      <td>19.670588</td>\n",
       "      <td>334.40</td>\n",
       "      <td>17</td>\n",
       "      <td>197</td>\n",
       "      <td>11.588235</td>\n",
       "      <td>4</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>7</td>\n",
       "      <td>31.564857</td>\n",
       "      <td>2209.54</td>\n",
       "      <td>50</td>\n",
       "      <td>438</td>\n",
       "      <td>6.257143</td>\n",
       "      <td>5</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>1</td>\n",
       "      <td>18.610345</td>\n",
       "      <td>1079.40</td>\n",
       "      <td>58</td>\n",
       "      <td>530</td>\n",
       "      <td>9.137931</td>\n",
       "      <td>7</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>...</th>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3068</th>\n",
       "      <td>1</td>\n",
       "      <td>51.000000</td>\n",
       "      <td>51.00</td>\n",
       "      <td>1</td>\n",
       "      <td>20</td>\n",
       "      <td>20.000000</td>\n",
       "      <td>4329</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3069</th>\n",
       "      <td>1</td>\n",
       "      <td>13.797500</td>\n",
       "      <td>110.38</td>\n",
       "      <td>8</td>\n",
       "      <td>68</td>\n",
       "      <td>8.500000</td>\n",
       "      <td>4332</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3070</th>\n",
       "      <td>1</td>\n",
       "      <td>14.315714</td>\n",
       "      <td>100.21</td>\n",
       "      <td>7</td>\n",
       "      <td>75</td>\n",
       "      <td>10.714286</td>\n",
       "      <td>4336</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3071</th>\n",
       "      <td>9</td>\n",
       "      <td>2.413436</td>\n",
       "      <td>1018.47</td>\n",
       "      <td>213</td>\n",
       "      <td>696</td>\n",
       "      <td>1.649289</td>\n",
       "      <td>4337</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3072</th>\n",
       "      <td>1205</td>\n",
       "      <td>11.663274</td>\n",
       "      <td>928431.62</td>\n",
       "      <td>3362</td>\n",
       "      <td>259002</td>\n",
       "      <td>3.253671</td>\n",
       "      <td>4339</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "<p>3073 rows × 8 columns</p>\n",
       "</div>\n",
       "      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-83123207-1231-4dce-ade9-3afee3be51f9')\"\n",
       "              title=\"Convert this dataframe to an interactive table.\"\n",
       "              style=\"display:none;\">\n",
       "        \n",
       "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
       "       width=\"24px\">\n",
       "    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n",
       "    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n",
       "  </svg>\n",
       "      </button>\n",
       "      \n",
       "  <style>\n",
       "    .colab-df-container {\n",
       "      display:flex;\n",
       "      flex-wrap:wrap;\n",
       "      gap: 12px;\n",
       "    }\n",
       "\n",
       "    .colab-df-convert {\n",
       "      background-color: #E8F0FE;\n",
       "      border: none;\n",
       "      border-radius: 50%;\n",
       "      cursor: pointer;\n",
       "      display: none;\n",
       "      fill: #1967D2;\n",
       "      height: 32px;\n",
       "      padding: 0 0 0 0;\n",
       "      width: 32px;\n",
       "    }\n",
       "\n",
       "    .colab-df-convert:hover {\n",
       "      background-color: #E2EBFA;\n",
       "      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
       "      fill: #174EA6;\n",
       "    }\n",
       "\n",
       "    [theme=dark] .colab-df-convert {\n",
       "      background-color: #3B4455;\n",
       "      fill: #D2E3FC;\n",
       "    }\n",
       "\n",
       "    [theme=dark] .colab-df-convert:hover {\n",
       "      background-color: #434B5C;\n",
       "      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
       "      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
       "      fill: #FFFFFF;\n",
       "    }\n",
       "  </style>\n",
       "\n",
       "      <script>\n",
       "        const buttonEl =\n",
       "          document.querySelector('#df-83123207-1231-4dce-ade9-3afee3be51f9 button.colab-df-convert');\n",
       "        buttonEl.style.display =\n",
       "          google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
       "\n",
       "        async function convertToInteractive(key) {\n",
       "          const element = document.querySelector('#df-83123207-1231-4dce-ade9-3afee3be51f9');\n",
       "          const dataTable =\n",
       "            await google.colab.kernel.invokeFunction('convertToInteractive',\n",
       "                                                     [key], {});\n",
       "          if (!dataTable) return;\n",
       "\n",
       "          const docLinkHtml = 'Like what you see? Visit the ' +\n",
       "            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n",
       "            + ' to learn more about interactive tables.';\n",
       "          element.innerHTML = '';\n",
       "          dataTable['output_type'] = 'display_data';\n",
       "          await google.colab.output.renderOutput(dataTable, element);\n",
       "          const docLink = document.createElement('div');\n",
       "          docLink.innerHTML = docLinkHtml;\n",
       "          element.appendChild(docLink);\n",
       "        }\n",
       "      </script>\n",
       "    </div>\n",
       "  </div>\n",
       "  "
      ],
      "text/plain": [
       "      No. of visits  Mean_purch  Sum_purch  Item_count  Total_quantity  \\\n",
       "0                 4   20.163146    1794.52          68            1022   \n",
       "1                 1  103.333333     310.00           3             217   \n",
       "2                 1   19.670588     334.40          17             197   \n",
       "3                 7   31.564857    2209.54          50             438   \n",
       "4                 1   18.610345    1079.40          58             530   \n",
       "...             ...         ...        ...         ...             ...   \n",
       "3068              1   51.000000      51.00           1              20   \n",
       "3069              1   13.797500     110.38           8              68   \n",
       "3070              1   14.315714     100.21           7              75   \n",
       "3071              9    2.413436    1018.47         213             696   \n",
       "3072           1205   11.663274  928431.62        3362          259002   \n",
       "\n",
       "      Avg_quant  CustomerID  cluster_labels  \n",
       "0     11.483146           1               0  \n",
       "1     72.333333           2               0  \n",
       "2     11.588235           4               0  \n",
       "3      6.257143           5               0  \n",
       "4      9.137931           7               0  \n",
       "...         ...         ...             ...  \n",
       "3068  20.000000        4329               0  \n",
       "3069   8.500000        4332               0  \n",
       "3070  10.714286        4336               0  \n",
       "3071   1.649289        4337               0  \n",
       "3072   3.253671        4339               1  \n",
       "\n",
       "[3073 rows x 8 columns]"
      ]
     },
     "execution_count": 282,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "dvt_12_16 = person_df(og_12_16)                  #Our function gives such a dataframe by which we can form clusters using KMeans\n",
    "df_12_16 = df_cluster_labels(dvt_12_16,3)\n",
    "df_12_16"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {
    "colab": {
     "base_uri": "https://localhost:8080/"
    },
    "id": "VZBm24JJrF9_",
    "outputId": "8031af99-c7d2-408c-f69d-2a6ce149c7d6"
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "The Silhouette Score is :- 0.9361237581460591\n"
     ]
    }
   ],
   "source": [
    "silhte_score_12_16 = silhouette_score(dvt_12_16, df_12_16['cluster_labels'])\n",
    "print(\"The Silhouette Score is :- \"+str(silhte_score_12_16))"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {
    "colab": {
     "base_uri": "https://localhost:8080/"
    },
    "id": "X6hIRvvVte1S",
    "outputId": "a67fa5b6-cfd8-4e42-f7e5-7c5d0117a24d"
   },
   "outputs": [
    {
     "data": {
      "text/plain": [
       "0    3049\n",
       "2      23\n",
       "1       1\n",
       "Name: cluster_labels, dtype: int64"
      ]
     },
     "execution_count": 284,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "df_12_16['cluster_labels'].value_counts()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {
    "colab": {
     "base_uri": "https://localhost:8080/",
     "height": 472
    },
    "id": "hOfJJcSFtiIa",
    "outputId": "b798663a-7106-49a6-fea9-d9ab843645b5"
   },
   "outputs": [
    {
     "data": {
      "image/png": "",
      "text/plain": [
       "<Figure size 640x480 with 1 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "plt.scatter(df_12_16['Mean_purch'], df_12_16['Sum_purch'], c=df_12_16['cluster_labels'], cmap='viridis')\n",
    "plt.title(\"For Time: 12:00 - 16:00\")\n",
    "plt.xlabel('Mean_purch')\n",
    "plt.ylabel('Sum_purch')\n",
    "plt.show()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {
    "colab": {
     "base_uri": "https://localhost:8080/"
    },
    "id": "kN3gr-KZtpZ2",
    "outputId": "d755e03a-cc57-4e62-e009-39197909bc97"
   },
   "outputs": [
    {
     "data": {
      "text/plain": [
       "[1, 2]"
      ]
     },
     "execution_count": 286,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "#Thus Clusters 1 and 2 are outliers as they have very few datapoints(Customers)\n",
    "#So we remove them and then applyKMeans again\n",
    "#Thus\n",
    "#Then check for outliers and if required, repeat the process\n",
    "#Below is for outliers:-\n",
    "outliers_12_16 = get_n_outlier_labels(df_12_16,2)\n",
    "outliers_12_16"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {
    "colab": {
     "base_uri": "https://localhost:8080/",
     "height": 424
    },
    "id": "ptUhmLPWtvP8",
    "outputId": "c11d4d07-d0e2-4e5e-e230-01eb138c1295"
   },
   "outputs": [
    {
     "data": {
      "text/html": [
       "\n",
       "  <div id=\"df-6c001ee7-c7b7-46d4-937e-969ec517c9fd\">\n",
       "    <div class=\"colab-df-container\">\n",
       "      <div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>No. of visits</th>\n",
       "      <th>Mean_purch</th>\n",
       "      <th>Sum_purch</th>\n",
       "      <th>Item_count</th>\n",
       "      <th>Total_quantity</th>\n",
       "      <th>Avg_quant</th>\n",
       "      <th>CustomerID</th>\n",
       "      <th>cluster_labels</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>4</td>\n",
       "      <td>20.163146</td>\n",
       "      <td>1794.52</td>\n",
       "      <td>68</td>\n",
       "      <td>1022</td>\n",
       "      <td>11.483146</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>1</td>\n",
       "      <td>103.333333</td>\n",
       "      <td>310.00</td>\n",
       "      <td>3</td>\n",
       "      <td>217</td>\n",
       "      <td>72.333333</td>\n",
       "      <td>2</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>1</td>\n",
       "      <td>19.670588</td>\n",
       "      <td>334.40</td>\n",
       "      <td>17</td>\n",
       "      <td>197</td>\n",
       "      <td>11.588235</td>\n",
       "      <td>4</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>7</td>\n",
       "      <td>31.564857</td>\n",
       "      <td>2209.54</td>\n",
       "      <td>50</td>\n",
       "      <td>438</td>\n",
       "      <td>6.257143</td>\n",
       "      <td>5</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>1</td>\n",
       "      <td>18.610345</td>\n",
       "      <td>1079.40</td>\n",
       "      <td>58</td>\n",
       "      <td>530</td>\n",
       "      <td>9.137931</td>\n",
       "      <td>7</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>...</th>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3067</th>\n",
       "      <td>1</td>\n",
       "      <td>20.369189</td>\n",
       "      <td>753.66</td>\n",
       "      <td>37</td>\n",
       "      <td>392</td>\n",
       "      <td>10.594595</td>\n",
       "      <td>4328</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3068</th>\n",
       "      <td>1</td>\n",
       "      <td>51.000000</td>\n",
       "      <td>51.00</td>\n",
       "      <td>1</td>\n",
       "      <td>20</td>\n",
       "      <td>20.000000</td>\n",
       "      <td>4329</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3069</th>\n",
       "      <td>1</td>\n",
       "      <td>13.797500</td>\n",
       "      <td>110.38</td>\n",
       "      <td>8</td>\n",
       "      <td>68</td>\n",
       "      <td>8.500000</td>\n",
       "      <td>4332</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3070</th>\n",
       "      <td>1</td>\n",
       "      <td>14.315714</td>\n",
       "      <td>100.21</td>\n",
       "      <td>7</td>\n",
       "      <td>75</td>\n",
       "      <td>10.714286</td>\n",
       "      <td>4336</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3071</th>\n",
       "      <td>9</td>\n",
       "      <td>2.413436</td>\n",
       "      <td>1018.47</td>\n",
       "      <td>213</td>\n",
       "      <td>696</td>\n",
       "      <td>1.649289</td>\n",
       "      <td>4337</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "<p>3049 rows × 8 columns</p>\n",
       "</div>\n",
       "      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-6c001ee7-c7b7-46d4-937e-969ec517c9fd')\"\n",
       "              title=\"Convert this dataframe to an interactive table.\"\n",
       "              style=\"display:none;\">\n",
       "        \n",
       "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
       "       width=\"24px\">\n",
       "    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n",
       "    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n",
       "  </svg>\n",
       "      </button>\n",
       "      \n",
       "  <style>\n",
       "    .colab-df-container {\n",
       "      display:flex;\n",
       "      flex-wrap:wrap;\n",
       "      gap: 12px;\n",
       "    }\n",
       "\n",
       "    .colab-df-convert {\n",
       "      background-color: #E8F0FE;\n",
       "      border: none;\n",
       "      border-radius: 50%;\n",
       "      cursor: pointer;\n",
       "      display: none;\n",
       "      fill: #1967D2;\n",
       "      height: 32px;\n",
       "      padding: 0 0 0 0;\n",
       "      width: 32px;\n",
       "    }\n",
       "\n",
       "    .colab-df-convert:hover {\n",
       "      background-color: #E2EBFA;\n",
       "      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
       "      fill: #174EA6;\n",
       "    }\n",
       "\n",
       "    [theme=dark] .colab-df-convert {\n",
       "      background-color: #3B4455;\n",
       "      fill: #D2E3FC;\n",
       "    }\n",
       "\n",
       "    [theme=dark] .colab-df-convert:hover {\n",
       "      background-color: #434B5C;\n",
       "      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
       "      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
       "      fill: #FFFFFF;\n",
       "    }\n",
       "  </style>\n",
       "\n",
       "      <script>\n",
       "        const buttonEl =\n",
       "          document.querySelector('#df-6c001ee7-c7b7-46d4-937e-969ec517c9fd button.colab-df-convert');\n",
       "        buttonEl.style.display =\n",
       "          google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
       "\n",
       "        async function convertToInteractive(key) {\n",
       "          const element = document.querySelector('#df-6c001ee7-c7b7-46d4-937e-969ec517c9fd');\n",
       "          const dataTable =\n",
       "            await google.colab.kernel.invokeFunction('convertToInteractive',\n",
       "                                                     [key], {});\n",
       "          if (!dataTable) return;\n",
       "\n",
       "          const docLinkHtml = 'Like what you see? Visit the ' +\n",
       "            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n",
       "            + ' to learn more about interactive tables.';\n",
       "          element.innerHTML = '';\n",
       "          dataTable['output_type'] = 'display_data';\n",
       "          await google.colab.output.renderOutput(dataTable, element);\n",
       "          const docLink = document.createElement('div');\n",
       "          docLink.innerHTML = docLinkHtml;\n",
       "          element.appendChild(docLink);\n",
       "        }\n",
       "      </script>\n",
       "    </div>\n",
       "  </div>\n",
       "  "
      ],
      "text/plain": [
       "      No. of visits  Mean_purch  Sum_purch  Item_count  Total_quantity  \\\n",
       "0                 4   20.163146    1794.52          68            1022   \n",
       "1                 1  103.333333     310.00           3             217   \n",
       "2                 1   19.670588     334.40          17             197   \n",
       "3                 7   31.564857    2209.54          50             438   \n",
       "4                 1   18.610345    1079.40          58             530   \n",
       "...             ...         ...        ...         ...             ...   \n",
       "3067              1   20.369189     753.66          37             392   \n",
       "3068              1   51.000000      51.00           1              20   \n",
       "3069              1   13.797500     110.38           8              68   \n",
       "3070              1   14.315714     100.21           7              75   \n",
       "3071              9    2.413436    1018.47         213             696   \n",
       "\n",
       "      Avg_quant  CustomerID  cluster_labels  \n",
       "0     11.483146           1               0  \n",
       "1     72.333333           2               0  \n",
       "2     11.588235           4               0  \n",
       "3      6.257143           5               0  \n",
       "4      9.137931           7               0  \n",
       "...         ...         ...             ...  \n",
       "3067  10.594595        4328               0  \n",
       "3068  20.000000        4329               0  \n",
       "3069   8.500000        4332               0  \n",
       "3070  10.714286        4336               0  \n",
       "3071   1.649289        4337               0  \n",
       "\n",
       "[3049 rows x 8 columns]"
      ]
     },
     "execution_count": 287,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "df_12_16 = df_12_16[df_12_16['cluster_labels']!=outliers_12_16[0]]\n",
    "df_12_16 = df_12_16[df_12_16['cluster_labels']!=outliers_12_16[1]]\n",
    "df_12_16"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {
    "colab": {
     "base_uri": "https://localhost:8080/",
     "height": 478
    },
    "id": "XDFfURUhuG0J",
    "outputId": "dc84ecf8-b658-4721-a36e-ee72725624e1"
   },
   "outputs": [
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "/usr/local/lib/python3.9/dist-packages/sklearn/cluster/_kmeans.py:870: FutureWarning: The default value of `n_init` will change from 10 to 'auto' in 1.4. Set the value of `n_init` explicitly to suppress the warning\n",
      "  warnings.warn(\n"
     ]
    },
    {
     "data": {
      "text/html": [
       "\n",
       "  <div id=\"df-e87f3bac-d9e4-491f-9128-feeb6c02da68\">\n",
       "    <div class=\"colab-df-container\">\n",
       "      <div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>No. of visits</th>\n",
       "      <th>Mean_purch</th>\n",
       "      <th>Sum_purch</th>\n",
       "      <th>Item_count</th>\n",
       "      <th>Total_quantity</th>\n",
       "      <th>Avg_quant</th>\n",
       "      <th>CustomerID</th>\n",
       "      <th>cluster_labels</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>4</td>\n",
       "      <td>20.163146</td>\n",
       "      <td>1794.52</td>\n",
       "      <td>68</td>\n",
       "      <td>1022</td>\n",
       "      <td>11.483146</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>1</td>\n",
       "      <td>103.333333</td>\n",
       "      <td>310.00</td>\n",
       "      <td>3</td>\n",
       "      <td>217</td>\n",
       "      <td>72.333333</td>\n",
       "      <td>2</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>1</td>\n",
       "      <td>19.670588</td>\n",
       "      <td>334.40</td>\n",
       "      <td>17</td>\n",
       "      <td>197</td>\n",
       "      <td>11.588235</td>\n",
       "      <td>4</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>7</td>\n",
       "      <td>31.564857</td>\n",
       "      <td>2209.54</td>\n",
       "      <td>50</td>\n",
       "      <td>438</td>\n",
       "      <td>6.257143</td>\n",
       "      <td>5</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>1</td>\n",
       "      <td>18.610345</td>\n",
       "      <td>1079.40</td>\n",
       "      <td>58</td>\n",
       "      <td>530</td>\n",
       "      <td>9.137931</td>\n",
       "      <td>7</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>...</th>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3067</th>\n",
       "      <td>1</td>\n",
       "      <td>20.369189</td>\n",
       "      <td>753.66</td>\n",
       "      <td>37</td>\n",
       "      <td>392</td>\n",
       "      <td>10.594595</td>\n",
       "      <td>4328</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3068</th>\n",
       "      <td>1</td>\n",
       "      <td>51.000000</td>\n",
       "      <td>51.00</td>\n",
       "      <td>1</td>\n",
       "      <td>20</td>\n",
       "      <td>20.000000</td>\n",
       "      <td>4329</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3069</th>\n",
       "      <td>1</td>\n",
       "      <td>13.797500</td>\n",
       "      <td>110.38</td>\n",
       "      <td>8</td>\n",
       "      <td>68</td>\n",
       "      <td>8.500000</td>\n",
       "      <td>4332</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3070</th>\n",
       "      <td>1</td>\n",
       "      <td>14.315714</td>\n",
       "      <td>100.21</td>\n",
       "      <td>7</td>\n",
       "      <td>75</td>\n",
       "      <td>10.714286</td>\n",
       "      <td>4336</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3071</th>\n",
       "      <td>9</td>\n",
       "      <td>2.413436</td>\n",
       "      <td>1018.47</td>\n",
       "      <td>213</td>\n",
       "      <td>696</td>\n",
       "      <td>1.649289</td>\n",
       "      <td>4337</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "<p>3049 rows × 8 columns</p>\n",
       "</div>\n",
       "      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-e87f3bac-d9e4-491f-9128-feeb6c02da68')\"\n",
       "              title=\"Convert this dataframe to an interactive table.\"\n",
       "              style=\"display:none;\">\n",
       "        \n",
       "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
       "       width=\"24px\">\n",
       "    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n",
       "    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n",
       "  </svg>\n",
       "      </button>\n",
       "      \n",
       "  <style>\n",
       "    .colab-df-container {\n",
       "      display:flex;\n",
       "      flex-wrap:wrap;\n",
       "      gap: 12px;\n",
       "    }\n",
       "\n",
       "    .colab-df-convert {\n",
       "      background-color: #E8F0FE;\n",
       "      border: none;\n",
       "      border-radius: 50%;\n",
       "      cursor: pointer;\n",
       "      display: none;\n",
       "      fill: #1967D2;\n",
       "      height: 32px;\n",
       "      padding: 0 0 0 0;\n",
       "      width: 32px;\n",
       "    }\n",
       "\n",
       "    .colab-df-convert:hover {\n",
       "      background-color: #E2EBFA;\n",
       "      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
       "      fill: #174EA6;\n",
       "    }\n",
       "\n",
       "    [theme=dark] .colab-df-convert {\n",
       "      background-color: #3B4455;\n",
       "      fill: #D2E3FC;\n",
       "    }\n",
       "\n",
       "    [theme=dark] .colab-df-convert:hover {\n",
       "      background-color: #434B5C;\n",
       "      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
       "      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
       "      fill: #FFFFFF;\n",
       "    }\n",
       "  </style>\n",
       "\n",
       "      <script>\n",
       "        const buttonEl =\n",
       "          document.querySelector('#df-e87f3bac-d9e4-491f-9128-feeb6c02da68 button.colab-df-convert');\n",
       "        buttonEl.style.display =\n",
       "          google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
       "\n",
       "        async function convertToInteractive(key) {\n",
       "          const element = document.querySelector('#df-e87f3bac-d9e4-491f-9128-feeb6c02da68');\n",
       "          const dataTable =\n",
       "            await google.colab.kernel.invokeFunction('convertToInteractive',\n",
       "                                                     [key], {});\n",
       "          if (!dataTable) return;\n",
       "\n",
       "          const docLinkHtml = 'Like what you see? Visit the ' +\n",
       "            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n",
       "            + ' to learn more about interactive tables.';\n",
       "          element.innerHTML = '';\n",
       "          dataTable['output_type'] = 'display_data';\n",
       "          await google.colab.output.renderOutput(dataTable, element);\n",
       "          const docLink = document.createElement('div');\n",
       "          docLink.innerHTML = docLinkHtml;\n",
       "          element.appendChild(docLink);\n",
       "        }\n",
       "      </script>\n",
       "    </div>\n",
       "  </div>\n",
       "  "
      ],
      "text/plain": [
       "      No. of visits  Mean_purch  Sum_purch  Item_count  Total_quantity  \\\n",
       "0                 4   20.163146    1794.52          68            1022   \n",
       "1                 1  103.333333     310.00           3             217   \n",
       "2                 1   19.670588     334.40          17             197   \n",
       "3                 7   31.564857    2209.54          50             438   \n",
       "4                 1   18.610345    1079.40          58             530   \n",
       "...             ...         ...        ...         ...             ...   \n",
       "3067              1   20.369189     753.66          37             392   \n",
       "3068              1   51.000000      51.00           1              20   \n",
       "3069              1   13.797500     110.38           8              68   \n",
       "3070              1   14.315714     100.21           7              75   \n",
       "3071              9    2.413436    1018.47         213             696   \n",
       "\n",
       "      Avg_quant  CustomerID  cluster_labels  \n",
       "0     11.483146           1               1  \n",
       "1     72.333333           2               1  \n",
       "2     11.588235           4               1  \n",
       "3      6.257143           5               1  \n",
       "4      9.137931           7               1  \n",
       "...         ...         ...             ...  \n",
       "3067  10.594595        4328               0  \n",
       "3068  20.000000        4329               0  \n",
       "3069   8.500000        4332               0  \n",
       "3070  10.714286        4336               0  \n",
       "3071   1.649289        4337               0  \n",
       "\n",
       "[3049 rows x 8 columns]"
      ]
     },
     "execution_count": 288,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "#Thus the outliers are removed.\n",
    "#Now we again apply the clustering pipeline\n",
    "\n",
    "df_12_16_person = df_12_16.copy(deep=True)\n",
    "df_12_16_person.drop(['cluster_labels'],axis=1,inplace=True)\n",
    "\n",
    "df_12_16_new = df_cluster_labels(df_12_16_person,3)\n",
    "df_12_16_new"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {
    "colab": {
     "base_uri": "https://localhost:8080/"
    },
    "id": "MBNj1yuXrNnd",
    "outputId": "e97ccd76-2b66-424b-abe7-f55b99a848d3"
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "The Silhouette Score is :- 0.46062699197294626\n"
     ]
    }
   ],
   "source": [
    "silhte_score_12_16_new = silhouette_score(df_12_16_person, df_12_16_new['cluster_labels'])\n",
    "print(\"The Silhouette Score is :- \"+str(silhte_score_12_16_new))\n",
    "#Indicates that silhouette score is realistic for dataset without outliers"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {
    "colab": {
     "base_uri": "https://localhost:8080/"
    },
    "id": "qabE0EfuuOXG",
    "outputId": "608eb4ea-a12d-40c1-aeb0-539320c25037"
   },
   "outputs": [
    {
     "data": {
      "text/plain": [
       "0    1490\n",
       "1    1427\n",
       "2     132\n",
       "Name: cluster_labels, dtype: int64"
      ]
     },
     "execution_count": 290,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "df_12_16_new['cluster_labels'].value_counts()\n",
    "#These are comparatively good clusters"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {
    "colab": {
     "base_uri": "https://localhost:8080/",
     "height": 472
    },
    "id": "7SksDlUauYv6",
    "outputId": "567bed51-3cd0-4a97-c0f1-4222ea693179"
   },
   "outputs": [
    {
     "data": {
      "image/png": "",
      "text/plain": [
       "<Figure size 640x480 with 1 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "plt.scatter(df_12_16_new['Mean_purch'], df_12_16_new['Sum_purch'], c=df_12_16_new['cluster_labels'], cmap='viridis')\n",
    "plt.title(\"For Dec 2010 (After removing outliers)\")\n",
    "plt.xlabel('Mean_purch')\n",
    "plt.ylabel('Sum_purch')\n",
    "plt.show()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {
    "colab": {
     "base_uri": "https://localhost:8080/"
    },
    "id": "0ZHuky26ucqE",
    "outputId": "049ca6e4-7a0c-49d3-e090-1ba76f82d644"
   },
   "outputs": [
    {
     "data": {
      "text/plain": [
       "[      CustomerID                                        Description\n",
       " 0              1  [BLACK CANDELABRA T-LIGHT HOLDER, AIRLINE BAG ...\n",
       " 1              2  [DOUGHNUT LIP GLOSS , ICE CREAM PEN LIP GLOSS ...\n",
       " 2              4  [CHOCOLATE THIS WAY METAL SIGN, METAL SIGN NEI...\n",
       " 3              5  [POSTAGE, DELUXE SEWING KIT , PINK HEART SHAPE...\n",
       " 4              7  [JUMBO BAG ALPHABET, CHARLOTTE BAG APPLES DESI...\n",
       " ...          ...                                                ...\n",
       " 1422        2168  [GINGERBREAD MAN COOKIE CUTTER, SET 10 LIGHTS ...\n",
       " 1423        2171  [RED RETROSPOT PICNIC BAG, BLUE POLKADOT BOWL,...\n",
       " 1424        2211  [12 PENCILS TALL TUBE RED RETROSPOT, CHARLIE A...\n",
       " 1425        2212  [TEA PARTY BIRTHDAY CARD, FAIRY CAKES NOTEBOOK...\n",
       " 1426        2222  [EGG FRYING PAN IVORY , SET OF 6 TEA TIME BAKI...\n",
       " \n",
       " [1427 rows x 2 columns],\n",
       "      CustomerID                                        Description\n",
       " 0            10  [PINK DOUGHNUT TRINKET POT , STRAWBERRY CERAMI...\n",
       " 1            70  [LARGE SKULL WINDMILL, PINK HAPPY BIRTHDAY BUN...\n",
       " 2            71  [BOX OF 24 COCKTAIL PARASOLS, GROW YOUR OWN PL...\n",
       " 3           100  [TV DINNER TRAY DOLLY GIRL, PENCIL CASE LIFE I...\n",
       " 4           103  [SPACE FROG, RED  HARMONICA IN BOX , ROUND SNA...\n",
       " ..          ...                                                ...\n",
       " 127        3943  [SET OF 6 STRAWBERRY CHOPSTICKS, SET OF 6 CAKE...\n",
       " 128        3956  [HOME BUILDING BLOCK WORD, HAND WARMER BIRD DE...\n",
       " 129        4094  [REGENCY CAKESTAND 3 TIER, WOODEN ROUNDERS GAR...\n",
       " 130        4229  [PAPER BUNTING WHITE LACE, TEA PARTY  WRAPPING...\n",
       " 131        4315  [PACK OF 60 DINOSAUR CAKE CASES, PACK OF 72 SK...\n",
       " \n",
       " [132 rows x 2 columns],\n",
       "       CustomerID                                        Description\n",
       " 0           2154  [STRAWBERRY CERAMIC TRINKET BOX, DECORATION WO...\n",
       " 1           2160  [SKULLS AND CROSSBONES WRAP, BLACK/BLUE POLKAD...\n",
       " 2           2162  [SET OF 4 PANTRY JELLY MOULDS, PAPER CHAIN KIT...\n",
       " 3           2165  [WOODEN SCHOOL COLOURING SET, SWISS ROLL TOWEL...\n",
       " 4           2167  [GLASS APOTHECARY BOTTLE PERFUME, GLASS APOTHE...\n",
       " ...          ...                                                ...\n",
       " 1485        4328  [SET OF 36 DOILIES PANTRY DESIGN, SET OF 4 KNI...\n",
       " 1486        4329                           [ART LIGHTS,FUNK MONKEY]\n",
       " 1487        4332  [EDWARDIAN PARASOL PINK, EDWARDIAN PARASOL RED...\n",
       " 1488        4336  [ANTIQUE CREAM CUTLERY CUPBOARD, FRENCH STYLE ...\n",
       " 1489        4337  [CHARLOTTE BAG PINK POLKADOT, LUNCH BAG WOODLA...\n",
       " \n",
       " [1490 rows x 2 columns]]"
      ]
     },
     "execution_count": 292,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "t_12_16 = descrip_dict(og_12_16,df_12_16_new)\n",
    "t_12_16 = processlis(t_12_16)\n",
    "t_12_16"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {
    "colab": {
     "base_uri": "https://localhost:8080/",
     "height": 1000
    },
    "id": "lDEwgOtZXxvy",
    "outputId": "dbb91adf-9223-4726-f0a6-b2e9fb3bf19f"
   },
   "outputs": [
    {
     "data": {
      "image/png": "",
      "text/plain": [
       "<Figure size 640x480 with 1 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "data": {
      "image/png": "",
      "text/plain": [
       "<Figure size 500x500 with 1 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "(44, 4)\n",
      "(1, 4)\n",
      "(3028, 4)\n"
     ]
    },
    {
     "data": {
      "image/png": "",
      "text/plain": [
       "<Figure size 640x480 with 1 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "data": {
      "image/png": "",
      "text/plain": [
       "<Figure size 500x500 with 1 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "(2, 5)\n",
      "(34, 5)\n",
      "(8, 5)\n"
     ]
    },
    {
     "data": {
      "text/plain": [
       "[]"
      ]
     },
     "execution_count": 293,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "pca = PCA(n_components = 3)\n",
    "pca.fit(X = dvt_12_16 )\n",
    "new_dvt = pca.transform(dvt_12_16 )\n",
    "\n",
    "new_dvt = pd.DataFrame(data = new_dvt,columns = ['X0','X1','X2'])\n",
    "model = AgglomerativeClustering(distance_threshold=0, n_clusters=None, linkage='ward').fit(new_dvt)\n",
    "\n",
    "plot_dendrogram(model, truncate_mode=\"level\", p=4)\n",
    "\n",
    "dict_12_16 =  Agglocls(new_dvt,3)\n",
    "\n",
    "final_dvt_12_16 = dict_12_16[0]\n",
    "pca_12_16 = PCA(n_components = 3)\n",
    "pca_12_16.fit(X = final_dvt_12_16)\n",
    "final_dvt_12_16 = pca_12_16.transform(final_dvt_12_16)\n",
    "final_dvt_12_16 = pd.DataFrame(data = final_dvt_12_16,columns = ['X0','X1','X2'])\n",
    "AggloDendo(final_dvt_12_16)\n",
    "\n",
    "dict_12_16_final =  AggloPca(final_dvt_12_16,3,dvt_12_16,'X1','X0')\n",
    "\n",
    "t_12_16_agg = descrip_dict(og_12_16,final_dvt_12_16)\n",
    "t_12_16_agg = processlis(t_12_16_agg)\n",
    "t_12_16_agg\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {
    "id": "r-7NIcKNYZFO"
   },
   "outputs": [],
   "source": [
    "#similar to october case we have very low number of customers which makes this case analysis non-usefull and very biased "
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {
    "id": "lMMEgMYlzRHm"
   },
   "outputs": [],
   "source": [
    "Cluster_dict['t_12_16'] = (len(t_12_16),len(t_12_16_agg))\n",
    "dicti_t_12_16 = {}\n",
    "klis = []\n",
    "for i in range(Cluster_dict['t_12_16'][0]):\n",
    "  temp = apriori_rules(t_12_16[i],0.075)\n",
    "  klis.append(temp)\n",
    "alis = []\n",
    "for i in range(Cluster_dict['t_12_16'][1]):\n",
    "  temp = apriori_rules(t_12_16_agg[i],0.075)\n",
    "  alis.append(temp)\n",
    "#apriori_rules(1_agg[0],0.075)\n",
    "dicti_t_12_16['K-means'] = klis\n",
    "dicti_t_12_16['Agglo'] = alis\n",
    "\n",
    "Rules_dict['t_12_16'] = dicti_t_12_16"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {
    "id": "b1LZLlCQuoSj"
   },
   "source": [
    "## For Time: 16:00 - 20:00"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {
    "colab": {
     "base_uri": "https://localhost:8080/",
     "height": 424
    },
    "id": "JT2LtFk2uoIJ",
    "outputId": "4afa1306-492f-43b1-c4e7-ee21ca99c7b3"
   },
   "outputs": [
    {
     "data": {
      "text/html": [
       "\n",
       "  <div id=\"df-0b03bdfb-ff61-4d7a-9f76-e763e6fc932e\">\n",
       "    <div class=\"colab-df-container\">\n",
       "      <div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>InvoiceNo</th>\n",
       "      <th>StockCode</th>\n",
       "      <th>Description</th>\n",
       "      <th>Quantity</th>\n",
       "      <th>UnitPrice</th>\n",
       "      <th>CustomerID</th>\n",
       "      <th>Country</th>\n",
       "      <th>year-month_intervals</th>\n",
       "      <th>Total Price</th>\n",
       "      <th>Money_bins</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>2461</th>\n",
       "      <td>536592</td>\n",
       "      <td>10135</td>\n",
       "      <td>COLOURING PENCILS BROWN TUBE</td>\n",
       "      <td>1</td>\n",
       "      <td>2.51</td>\n",
       "      <td>4339</td>\n",
       "      <td>United Kingdom</td>\n",
       "      <td>0</td>\n",
       "      <td>2.51</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2462</th>\n",
       "      <td>536592</td>\n",
       "      <td>16168M</td>\n",
       "      <td>FUNKY MONKEY GIFT BAG MEDIUM</td>\n",
       "      <td>2</td>\n",
       "      <td>0.85</td>\n",
       "      <td>4339</td>\n",
       "      <td>United Kingdom</td>\n",
       "      <td>0</td>\n",
       "      <td>1.70</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2463</th>\n",
       "      <td>536592</td>\n",
       "      <td>16236</td>\n",
       "      <td>KITTY PENCIL ERASERS</td>\n",
       "      <td>1</td>\n",
       "      <td>0.43</td>\n",
       "      <td>4339</td>\n",
       "      <td>United Kingdom</td>\n",
       "      <td>0</td>\n",
       "      <td>0.43</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2464</th>\n",
       "      <td>536592</td>\n",
       "      <td>16237</td>\n",
       "      <td>SLEEPING CAT ERASERS</td>\n",
       "      <td>6</td>\n",
       "      <td>0.43</td>\n",
       "      <td>4339</td>\n",
       "      <td>United Kingdom</td>\n",
       "      <td>0</td>\n",
       "      <td>2.58</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2465</th>\n",
       "      <td>536592</td>\n",
       "      <td>16238</td>\n",
       "      <td>PARTY TIME PENCIL ERASERS</td>\n",
       "      <td>5</td>\n",
       "      <td>0.43</td>\n",
       "      <td>4339</td>\n",
       "      <td>United Kingdom</td>\n",
       "      <td>0</td>\n",
       "      <td>2.15</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>...</th>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>540272</th>\n",
       "      <td>581474</td>\n",
       "      <td>21253</td>\n",
       "      <td>SET OF PICTURE FRAME  STICKERS</td>\n",
       "      <td>1</td>\n",
       "      <td>0.79</td>\n",
       "      <td>326</td>\n",
       "      <td>United Kingdom</td>\n",
       "      <td>12</td>\n",
       "      <td>0.79</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>540273</th>\n",
       "      <td>581474</td>\n",
       "      <td>22108</td>\n",
       "      <td>PING! MICROWAVE PLATE</td>\n",
       "      <td>1</td>\n",
       "      <td>1.25</td>\n",
       "      <td>326</td>\n",
       "      <td>United Kingdom</td>\n",
       "      <td>12</td>\n",
       "      <td>1.25</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>540274</th>\n",
       "      <td>581474</td>\n",
       "      <td>22167</td>\n",
       "      <td>OVAL WALL MIRROR DIAMANTE</td>\n",
       "      <td>1</td>\n",
       "      <td>9.95</td>\n",
       "      <td>326</td>\n",
       "      <td>United Kingdom</td>\n",
       "      <td>12</td>\n",
       "      <td>9.95</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>540275</th>\n",
       "      <td>581474</td>\n",
       "      <td>21929</td>\n",
       "      <td>JUMBO BAG PINK VINTAGE PAISLEY</td>\n",
       "      <td>1</td>\n",
       "      <td>2.08</td>\n",
       "      <td>326</td>\n",
       "      <td>United Kingdom</td>\n",
       "      <td>12</td>\n",
       "      <td>2.08</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>540276</th>\n",
       "      <td>581474</td>\n",
       "      <td>20717</td>\n",
       "      <td>STRAWBERRY SHOPPER BAG</td>\n",
       "      <td>1</td>\n",
       "      <td>1.25</td>\n",
       "      <td>326</td>\n",
       "      <td>United Kingdom</td>\n",
       "      <td>12</td>\n",
       "      <td>1.25</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "<p>39682 rows × 10 columns</p>\n",
       "</div>\n",
       "      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-0b03bdfb-ff61-4d7a-9f76-e763e6fc932e')\"\n",
       "              title=\"Convert this dataframe to an interactive table.\"\n",
       "              style=\"display:none;\">\n",
       "        \n",
       "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
       "       width=\"24px\">\n",
       "    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n",
       "    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n",
       "  </svg>\n",
       "      </button>\n",
       "      \n",
       "  <style>\n",
       "    .colab-df-container {\n",
       "      display:flex;\n",
       "      flex-wrap:wrap;\n",
       "      gap: 12px;\n",
       "    }\n",
       "\n",
       "    .colab-df-convert {\n",
       "      background-color: #E8F0FE;\n",
       "      border: none;\n",
       "      border-radius: 50%;\n",
       "      cursor: pointer;\n",
       "      display: none;\n",
       "      fill: #1967D2;\n",
       "      height: 32px;\n",
       "      padding: 0 0 0 0;\n",
       "      width: 32px;\n",
       "    }\n",
       "\n",
       "    .colab-df-convert:hover {\n",
       "      background-color: #E2EBFA;\n",
       "      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
       "      fill: #174EA6;\n",
       "    }\n",
       "\n",
       "    [theme=dark] .colab-df-convert {\n",
       "      background-color: #3B4455;\n",
       "      fill: #D2E3FC;\n",
       "    }\n",
       "\n",
       "    [theme=dark] .colab-df-convert:hover {\n",
       "      background-color: #434B5C;\n",
       "      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
       "      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
       "      fill: #FFFFFF;\n",
       "    }\n",
       "  </style>\n",
       "\n",
       "      <script>\n",
       "        const buttonEl =\n",
       "          document.querySelector('#df-0b03bdfb-ff61-4d7a-9f76-e763e6fc932e button.colab-df-convert');\n",
       "        buttonEl.style.display =\n",
       "          google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
       "\n",
       "        async function convertToInteractive(key) {\n",
       "          const element = document.querySelector('#df-0b03bdfb-ff61-4d7a-9f76-e763e6fc932e');\n",
       "          const dataTable =\n",
       "            await google.colab.kernel.invokeFunction('convertToInteractive',\n",
       "                                                     [key], {});\n",
       "          if (!dataTable) return;\n",
       "\n",
       "          const docLinkHtml = 'Like what you see? Visit the ' +\n",
       "            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n",
       "            + ' to learn more about interactive tables.';\n",
       "          element.innerHTML = '';\n",
       "          dataTable['output_type'] = 'display_data';\n",
       "          await google.colab.output.renderOutput(dataTable, element);\n",
       "          const docLink = document.createElement('div');\n",
       "          docLink.innerHTML = docLinkHtml;\n",
       "          element.appendChild(docLink);\n",
       "        }\n",
       "      </script>\n",
       "    </div>\n",
       "  </div>\n",
       "  "
      ],
      "text/plain": [
       "       InvoiceNo StockCode                     Description  Quantity  \\\n",
       "2461      536592     10135    COLOURING PENCILS BROWN TUBE         1   \n",
       "2462      536592    16168M    FUNKY MONKEY GIFT BAG MEDIUM         2   \n",
       "2463      536592     16236            KITTY PENCIL ERASERS         1   \n",
       "2464      536592     16237            SLEEPING CAT ERASERS         6   \n",
       "2465      536592     16238       PARTY TIME PENCIL ERASERS         5   \n",
       "...          ...       ...                             ...       ...   \n",
       "540272    581474     21253  SET OF PICTURE FRAME  STICKERS         1   \n",
       "540273    581474     22108           PING! MICROWAVE PLATE         1   \n",
       "540274    581474     22167      OVAL WALL MIRROR DIAMANTE          1   \n",
       "540275    581474     21929  JUMBO BAG PINK VINTAGE PAISLEY         1   \n",
       "540276    581474     20717          STRAWBERRY SHOPPER BAG         1   \n",
       "\n",
       "        UnitPrice  CustomerID         Country  year-month_intervals  \\\n",
       "2461         2.51        4339  United Kingdom                     0   \n",
       "2462         0.85        4339  United Kingdom                     0   \n",
       "2463         0.43        4339  United Kingdom                     0   \n",
       "2464         0.43        4339  United Kingdom                     0   \n",
       "2465         0.43        4339  United Kingdom                     0   \n",
       "...           ...         ...             ...                   ...   \n",
       "540272       0.79         326  United Kingdom                    12   \n",
       "540273       1.25         326  United Kingdom                    12   \n",
       "540274       9.95         326  United Kingdom                    12   \n",
       "540275       2.08         326  United Kingdom                    12   \n",
       "540276       1.25         326  United Kingdom                    12   \n",
       "\n",
       "        Total Price  Money_bins  \n",
       "2461           2.51           0  \n",
       "2462           1.70           0  \n",
       "2463           0.43           0  \n",
       "2464           2.58           0  \n",
       "2465           2.15           0  \n",
       "...             ...         ...  \n",
       "540272         0.79           0  \n",
       "540273         1.25           0  \n",
       "540274         9.95           0  \n",
       "540275         2.08           0  \n",
       "540276         1.25           0  \n",
       "\n",
       "[39682 rows x 10 columns]"
      ]
     },
     "execution_count": 296,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "og_16_20 = df_list_time_intervals[3]\n",
    "og_16_20"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {
    "colab": {
     "base_uri": "https://localhost:8080/",
     "height": 478
    },
    "id": "YXbIyHQ-uz4w",
    "outputId": "c9dedfa8-eb9c-4e6f-ef85-d1f86f8a7e2e"
   },
   "outputs": [
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "/usr/local/lib/python3.9/dist-packages/sklearn/cluster/_kmeans.py:870: FutureWarning: The default value of `n_init` will change from 10 to 'auto' in 1.4. Set the value of `n_init` explicitly to suppress the warning\n",
      "  warnings.warn(\n"
     ]
    },
    {
     "data": {
      "text/html": [
       "\n",
       "  <div id=\"df-54b9cb02-af4e-4bb5-abe0-e00cfbebe793\">\n",
       "    <div class=\"colab-df-container\">\n",
       "      <div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>No. of visits</th>\n",
       "      <th>Mean_purch</th>\n",
       "      <th>Sum_purch</th>\n",
       "      <th>Item_count</th>\n",
       "      <th>Total_quantity</th>\n",
       "      <th>Avg_quant</th>\n",
       "      <th>CustomerID</th>\n",
       "      <th>cluster_labels</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>1</td>\n",
       "      <td>52.517647</td>\n",
       "      <td>892.80</td>\n",
       "      <td>13</td>\n",
       "      <td>1254</td>\n",
       "      <td>73.764706</td>\n",
       "      <td>2</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>1</td>\n",
       "      <td>22.250000</td>\n",
       "      <td>89.00</td>\n",
       "      <td>4</td>\n",
       "      <td>20</td>\n",
       "      <td>5.000000</td>\n",
       "      <td>6</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>1</td>\n",
       "      <td>22.357500</td>\n",
       "      <td>626.01</td>\n",
       "      <td>28</td>\n",
       "      <td>290</td>\n",
       "      <td>10.357143</td>\n",
       "      <td>29</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>1</td>\n",
       "      <td>32.036607</td>\n",
       "      <td>1794.05</td>\n",
       "      <td>56</td>\n",
       "      <td>1025</td>\n",
       "      <td>18.303571</td>\n",
       "      <td>47</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>1</td>\n",
       "      <td>16.931429</td>\n",
       "      <td>355.56</td>\n",
       "      <td>21</td>\n",
       "      <td>190</td>\n",
       "      <td>9.047619</td>\n",
       "      <td>56</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>...</th>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>590</th>\n",
       "      <td>1</td>\n",
       "      <td>25.500000</td>\n",
       "      <td>25.50</td>\n",
       "      <td>1</td>\n",
       "      <td>2</td>\n",
       "      <td>2.000000</td>\n",
       "      <td>4325</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>591</th>\n",
       "      <td>1</td>\n",
       "      <td>15.487273</td>\n",
       "      <td>340.72</td>\n",
       "      <td>22</td>\n",
       "      <td>276</td>\n",
       "      <td>12.545455</td>\n",
       "      <td>4328</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>592</th>\n",
       "      <td>1</td>\n",
       "      <td>15.992727</td>\n",
       "      <td>175.92</td>\n",
       "      <td>11</td>\n",
       "      <td>88</td>\n",
       "      <td>8.000000</td>\n",
       "      <td>4330</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>593</th>\n",
       "      <td>1</td>\n",
       "      <td>2.342644</td>\n",
       "      <td>203.81</td>\n",
       "      <td>68</td>\n",
       "      <td>157</td>\n",
       "      <td>1.804598</td>\n",
       "      <td>4337</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>594</th>\n",
       "      <td>236</td>\n",
       "      <td>13.738566</td>\n",
       "      <td>268685.14</td>\n",
       "      <td>2759</td>\n",
       "      <td>78379</td>\n",
       "      <td>4.007721</td>\n",
       "      <td>4339</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "<p>595 rows × 8 columns</p>\n",
       "</div>\n",
       "      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-54b9cb02-af4e-4bb5-abe0-e00cfbebe793')\"\n",
       "              title=\"Convert this dataframe to an interactive table.\"\n",
       "              style=\"display:none;\">\n",
       "        \n",
       "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
       "       width=\"24px\">\n",
       "    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n",
       "    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n",
       "  </svg>\n",
       "      </button>\n",
       "      \n",
       "  <style>\n",
       "    .colab-df-container {\n",
       "      display:flex;\n",
       "      flex-wrap:wrap;\n",
       "      gap: 12px;\n",
       "    }\n",
       "\n",
       "    .colab-df-convert {\n",
       "      background-color: #E8F0FE;\n",
       "      border: none;\n",
       "      border-radius: 50%;\n",
       "      cursor: pointer;\n",
       "      display: none;\n",
       "      fill: #1967D2;\n",
       "      height: 32px;\n",
       "      padding: 0 0 0 0;\n",
       "      width: 32px;\n",
       "    }\n",
       "\n",
       "    .colab-df-convert:hover {\n",
       "      background-color: #E2EBFA;\n",
       "      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
       "      fill: #174EA6;\n",
       "    }\n",
       "\n",
       "    [theme=dark] .colab-df-convert {\n",
       "      background-color: #3B4455;\n",
       "      fill: #D2E3FC;\n",
       "    }\n",
       "\n",
       "    [theme=dark] .colab-df-convert:hover {\n",
       "      background-color: #434B5C;\n",
       "      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
       "      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
       "      fill: #FFFFFF;\n",
       "    }\n",
       "  </style>\n",
       "\n",
       "      <script>\n",
       "        const buttonEl =\n",
       "          document.querySelector('#df-54b9cb02-af4e-4bb5-abe0-e00cfbebe793 button.colab-df-convert');\n",
       "        buttonEl.style.display =\n",
       "          google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
       "\n",
       "        async function convertToInteractive(key) {\n",
       "          const element = document.querySelector('#df-54b9cb02-af4e-4bb5-abe0-e00cfbebe793');\n",
       "          const dataTable =\n",
       "            await google.colab.kernel.invokeFunction('convertToInteractive',\n",
       "                                                     [key], {});\n",
       "          if (!dataTable) return;\n",
       "\n",
       "          const docLinkHtml = 'Like what you see? Visit the ' +\n",
       "            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n",
       "            + ' to learn more about interactive tables.';\n",
       "          element.innerHTML = '';\n",
       "          dataTable['output_type'] = 'display_data';\n",
       "          await google.colab.output.renderOutput(dataTable, element);\n",
       "          const docLink = document.createElement('div');\n",
       "          docLink.innerHTML = docLinkHtml;\n",
       "          element.appendChild(docLink);\n",
       "        }\n",
       "      </script>\n",
       "    </div>\n",
       "  </div>\n",
       "  "
      ],
      "text/plain": [
       "     No. of visits  Mean_purch  Sum_purch  Item_count  Total_quantity  \\\n",
       "0                1   52.517647     892.80          13            1254   \n",
       "1                1   22.250000      89.00           4              20   \n",
       "2                1   22.357500     626.01          28             290   \n",
       "3                1   32.036607    1794.05          56            1025   \n",
       "4                1   16.931429     355.56          21             190   \n",
       "..             ...         ...        ...         ...             ...   \n",
       "590              1   25.500000      25.50           1               2   \n",
       "591              1   15.487273     340.72          22             276   \n",
       "592              1   15.992727     175.92          11              88   \n",
       "593              1    2.342644     203.81          68             157   \n",
       "594            236   13.738566  268685.14        2759           78379   \n",
       "\n",
       "     Avg_quant  CustomerID  cluster_labels  \n",
       "0    73.764706           2               0  \n",
       "1     5.000000           6               0  \n",
       "2    10.357143          29               0  \n",
       "3    18.303571          47               0  \n",
       "4     9.047619          56               0  \n",
       "..         ...         ...             ...  \n",
       "590   2.000000        4325               0  \n",
       "591  12.545455        4328               0  \n",
       "592   8.000000        4330               0  \n",
       "593   1.804598        4337               0  \n",
       "594   4.007721        4339               1  \n",
       "\n",
       "[595 rows x 8 columns]"
      ]
     },
     "execution_count": 297,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "dvt_16_20= person_df(og_16_20)                      #Our function gives such a dataframe by which we can form clusters using KMeans\n",
    "\n",
    "df_16_20 = df_cluster_labels(dvt_16_20,3)\n",
    "df_16_20"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {
    "id": "O_u-YwgWvjA0"
   },
   "outputs": [],
   "source": []
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {
    "colab": {
     "base_uri": "https://localhost:8080/"
    },
    "id": "kJymwvxbrU44",
    "outputId": "3756b1a5-15c9-4834-b368-f1bf0c856804"
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "The Silhouette Score is :- 0.9225816759992612\n"
     ]
    }
   ],
   "source": [
    "silhte_score_16_20 = silhouette_score(dvt_16_20, df_16_20['cluster_labels'])\n",
    "print(\"The Silhouette Score is :- \"+str(silhte_score_16_20))"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {
    "colab": {
     "base_uri": "https://localhost:8080/"
    },
    "id": "MlqynLpjvpv2",
    "outputId": "82df1e33-92a1-4e9f-bcc1-430ba529ed8c"
   },
   "outputs": [
    {
     "data": {
      "text/plain": [
       "0    590\n",
       "2      4\n",
       "1      1\n",
       "Name: cluster_labels, dtype: int64"
      ]
     },
     "execution_count": 299,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "df_16_20['cluster_labels'].value_counts()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {
    "colab": {
     "base_uri": "https://localhost:8080/",
     "height": 472
    },
    "id": "Do6ES-THv2Z9",
    "outputId": "c152cae1-98cc-496c-c2e5-8cbd58f33760"
   },
   "outputs": [
    {
     "data": {
      "image/png": "",
      "text/plain": [
       "<Figure size 640x480 with 1 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "plt.scatter(df_16_20['Mean_purch'], df_16_20['Sum_purch'], c=df_16_20['cluster_labels'], cmap='viridis')\n",
    "plt.title(\"For Dec 2010\")\n",
    "plt.xlabel('Mean_purch')\n",
    "plt.ylabel('Sum_purch')\n",
    "plt.show()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {
    "colab": {
     "base_uri": "https://localhost:8080/"
    },
    "id": "fxqLnynWyCBJ",
    "outputId": "87f1dd84-bb57-4416-b330-9e7147374855"
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "[1, 2]\n"
     ]
    }
   ],
   "source": [
    "outliers_16_20 = get_n_outlier_labels(df_16_20,2)\n",
    "print(outliers_16_20)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {
    "colab": {
     "base_uri": "https://localhost:8080/",
     "height": 424
    },
    "id": "oq7tykWnz5VO",
    "outputId": "b2861709-3895-4f54-f606-4dce84a4f912"
   },
   "outputs": [
    {
     "data": {
      "text/html": [
       "\n",
       "  <div id=\"df-d33a9dd4-bf19-4a2d-9387-df45ddda92eb\">\n",
       "    <div class=\"colab-df-container\">\n",
       "      <div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>No. of visits</th>\n",
       "      <th>Mean_purch</th>\n",
       "      <th>Sum_purch</th>\n",
       "      <th>Item_count</th>\n",
       "      <th>Total_quantity</th>\n",
       "      <th>Avg_quant</th>\n",
       "      <th>CustomerID</th>\n",
       "      <th>cluster_labels</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>1</td>\n",
       "      <td>52.517647</td>\n",
       "      <td>892.80</td>\n",
       "      <td>13</td>\n",
       "      <td>1254</td>\n",
       "      <td>73.764706</td>\n",
       "      <td>2</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>1</td>\n",
       "      <td>22.250000</td>\n",
       "      <td>89.00</td>\n",
       "      <td>4</td>\n",
       "      <td>20</td>\n",
       "      <td>5.000000</td>\n",
       "      <td>6</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>1</td>\n",
       "      <td>22.357500</td>\n",
       "      <td>626.01</td>\n",
       "      <td>28</td>\n",
       "      <td>290</td>\n",
       "      <td>10.357143</td>\n",
       "      <td>29</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>1</td>\n",
       "      <td>32.036607</td>\n",
       "      <td>1794.05</td>\n",
       "      <td>56</td>\n",
       "      <td>1025</td>\n",
       "      <td>18.303571</td>\n",
       "      <td>47</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>1</td>\n",
       "      <td>16.931429</td>\n",
       "      <td>355.56</td>\n",
       "      <td>21</td>\n",
       "      <td>190</td>\n",
       "      <td>9.047619</td>\n",
       "      <td>56</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>...</th>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>589</th>\n",
       "      <td>1</td>\n",
       "      <td>20.972727</td>\n",
       "      <td>230.70</td>\n",
       "      <td>11</td>\n",
       "      <td>58</td>\n",
       "      <td>5.272727</td>\n",
       "      <td>4320</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>590</th>\n",
       "      <td>1</td>\n",
       "      <td>25.500000</td>\n",
       "      <td>25.50</td>\n",
       "      <td>1</td>\n",
       "      <td>2</td>\n",
       "      <td>2.000000</td>\n",
       "      <td>4325</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>591</th>\n",
       "      <td>1</td>\n",
       "      <td>15.487273</td>\n",
       "      <td>340.72</td>\n",
       "      <td>22</td>\n",
       "      <td>276</td>\n",
       "      <td>12.545455</td>\n",
       "      <td>4328</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>592</th>\n",
       "      <td>1</td>\n",
       "      <td>15.992727</td>\n",
       "      <td>175.92</td>\n",
       "      <td>11</td>\n",
       "      <td>88</td>\n",
       "      <td>8.000000</td>\n",
       "      <td>4330</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>593</th>\n",
       "      <td>1</td>\n",
       "      <td>2.342644</td>\n",
       "      <td>203.81</td>\n",
       "      <td>68</td>\n",
       "      <td>157</td>\n",
       "      <td>1.804598</td>\n",
       "      <td>4337</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "<p>590 rows × 8 columns</p>\n",
       "</div>\n",
       "      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-d33a9dd4-bf19-4a2d-9387-df45ddda92eb')\"\n",
       "              title=\"Convert this dataframe to an interactive table.\"\n",
       "              style=\"display:none;\">\n",
       "        \n",
       "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
       "       width=\"24px\">\n",
       "    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n",
       "    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n",
       "  </svg>\n",
       "      </button>\n",
       "      \n",
       "  <style>\n",
       "    .colab-df-container {\n",
       "      display:flex;\n",
       "      flex-wrap:wrap;\n",
       "      gap: 12px;\n",
       "    }\n",
       "\n",
       "    .colab-df-convert {\n",
       "      background-color: #E8F0FE;\n",
       "      border: none;\n",
       "      border-radius: 50%;\n",
       "      cursor: pointer;\n",
       "      display: none;\n",
       "      fill: #1967D2;\n",
       "      height: 32px;\n",
       "      padding: 0 0 0 0;\n",
       "      width: 32px;\n",
       "    }\n",
       "\n",
       "    .colab-df-convert:hover {\n",
       "      background-color: #E2EBFA;\n",
       "      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
       "      fill: #174EA6;\n",
       "    }\n",
       "\n",
       "    [theme=dark] .colab-df-convert {\n",
       "      background-color: #3B4455;\n",
       "      fill: #D2E3FC;\n",
       "    }\n",
       "\n",
       "    [theme=dark] .colab-df-convert:hover {\n",
       "      background-color: #434B5C;\n",
       "      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
       "      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
       "      fill: #FFFFFF;\n",
       "    }\n",
       "  </style>\n",
       "\n",
       "      <script>\n",
       "        const buttonEl =\n",
       "          document.querySelector('#df-d33a9dd4-bf19-4a2d-9387-df45ddda92eb button.colab-df-convert');\n",
       "        buttonEl.style.display =\n",
       "          google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
       "\n",
       "        async function convertToInteractive(key) {\n",
       "          const element = document.querySelector('#df-d33a9dd4-bf19-4a2d-9387-df45ddda92eb');\n",
       "          const dataTable =\n",
       "            await google.colab.kernel.invokeFunction('convertToInteractive',\n",
       "                                                     [key], {});\n",
       "          if (!dataTable) return;\n",
       "\n",
       "          const docLinkHtml = 'Like what you see? Visit the ' +\n",
       "            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n",
       "            + ' to learn more about interactive tables.';\n",
       "          element.innerHTML = '';\n",
       "          dataTable['output_type'] = 'display_data';\n",
       "          await google.colab.output.renderOutput(dataTable, element);\n",
       "          const docLink = document.createElement('div');\n",
       "          docLink.innerHTML = docLinkHtml;\n",
       "          element.appendChild(docLink);\n",
       "        }\n",
       "      </script>\n",
       "    </div>\n",
       "  </div>\n",
       "  "
      ],
      "text/plain": [
       "     No. of visits  Mean_purch  Sum_purch  Item_count  Total_quantity  \\\n",
       "0                1   52.517647     892.80          13            1254   \n",
       "1                1   22.250000      89.00           4              20   \n",
       "2                1   22.357500     626.01          28             290   \n",
       "3                1   32.036607    1794.05          56            1025   \n",
       "4                1   16.931429     355.56          21             190   \n",
       "..             ...         ...        ...         ...             ...   \n",
       "589              1   20.972727     230.70          11              58   \n",
       "590              1   25.500000      25.50           1               2   \n",
       "591              1   15.487273     340.72          22             276   \n",
       "592              1   15.992727     175.92          11              88   \n",
       "593              1    2.342644     203.81          68             157   \n",
       "\n",
       "     Avg_quant  CustomerID  cluster_labels  \n",
       "0    73.764706           2               0  \n",
       "1     5.000000           6               0  \n",
       "2    10.357143          29               0  \n",
       "3    18.303571          47               0  \n",
       "4     9.047619          56               0  \n",
       "..         ...         ...             ...  \n",
       "589   5.272727        4320               0  \n",
       "590   2.000000        4325               0  \n",
       "591  12.545455        4328               0  \n",
       "592   8.000000        4330               0  \n",
       "593   1.804598        4337               0  \n",
       "\n",
       "[590 rows x 8 columns]"
      ]
     },
     "execution_count": 302,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "df_16_20 = df_16_20[df_16_20['cluster_labels']!=outliers_16_20[0]]\n",
    "df_16_20 = df_16_20[df_16_20['cluster_labels']!=outliers_16_20[1]]\n",
    "df_16_20"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {
    "colab": {
     "base_uri": "https://localhost:8080/",
     "height": 478
    },
    "id": "tCpuNYWM0kuX",
    "outputId": "8859023d-b49d-46f6-8aec-81b7ebe02a56"
   },
   "outputs": [
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "/usr/local/lib/python3.9/dist-packages/sklearn/cluster/_kmeans.py:870: FutureWarning: The default value of `n_init` will change from 10 to 'auto' in 1.4. Set the value of `n_init` explicitly to suppress the warning\n",
      "  warnings.warn(\n"
     ]
    },
    {
     "data": {
      "text/html": [
       "\n",
       "  <div id=\"df-c708dd4e-5bf0-412d-956a-a01a6200db28\">\n",
       "    <div class=\"colab-df-container\">\n",
       "      <div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>No. of visits</th>\n",
       "      <th>Mean_purch</th>\n",
       "      <th>Sum_purch</th>\n",
       "      <th>Item_count</th>\n",
       "      <th>Total_quantity</th>\n",
       "      <th>Avg_quant</th>\n",
       "      <th>CustomerID</th>\n",
       "      <th>cluster_labels</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>1</td>\n",
       "      <td>52.517647</td>\n",
       "      <td>892.80</td>\n",
       "      <td>13</td>\n",
       "      <td>1254</td>\n",
       "      <td>73.764706</td>\n",
       "      <td>2</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>1</td>\n",
       "      <td>22.250000</td>\n",
       "      <td>89.00</td>\n",
       "      <td>4</td>\n",
       "      <td>20</td>\n",
       "      <td>5.000000</td>\n",
       "      <td>6</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>1</td>\n",
       "      <td>22.357500</td>\n",
       "      <td>626.01</td>\n",
       "      <td>28</td>\n",
       "      <td>290</td>\n",
       "      <td>10.357143</td>\n",
       "      <td>29</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>1</td>\n",
       "      <td>32.036607</td>\n",
       "      <td>1794.05</td>\n",
       "      <td>56</td>\n",
       "      <td>1025</td>\n",
       "      <td>18.303571</td>\n",
       "      <td>47</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>1</td>\n",
       "      <td>16.931429</td>\n",
       "      <td>355.56</td>\n",
       "      <td>21</td>\n",
       "      <td>190</td>\n",
       "      <td>9.047619</td>\n",
       "      <td>56</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>...</th>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>589</th>\n",
       "      <td>1</td>\n",
       "      <td>20.972727</td>\n",
       "      <td>230.70</td>\n",
       "      <td>11</td>\n",
       "      <td>58</td>\n",
       "      <td>5.272727</td>\n",
       "      <td>4320</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>590</th>\n",
       "      <td>1</td>\n",
       "      <td>25.500000</td>\n",
       "      <td>25.50</td>\n",
       "      <td>1</td>\n",
       "      <td>2</td>\n",
       "      <td>2.000000</td>\n",
       "      <td>4325</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>591</th>\n",
       "      <td>1</td>\n",
       "      <td>15.487273</td>\n",
       "      <td>340.72</td>\n",
       "      <td>22</td>\n",
       "      <td>276</td>\n",
       "      <td>12.545455</td>\n",
       "      <td>4328</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>592</th>\n",
       "      <td>1</td>\n",
       "      <td>15.992727</td>\n",
       "      <td>175.92</td>\n",
       "      <td>11</td>\n",
       "      <td>88</td>\n",
       "      <td>8.000000</td>\n",
       "      <td>4330</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>593</th>\n",
       "      <td>1</td>\n",
       "      <td>2.342644</td>\n",
       "      <td>203.81</td>\n",
       "      <td>68</td>\n",
       "      <td>157</td>\n",
       "      <td>1.804598</td>\n",
       "      <td>4337</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "<p>590 rows × 8 columns</p>\n",
       "</div>\n",
       "      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-c708dd4e-5bf0-412d-956a-a01a6200db28')\"\n",
       "              title=\"Convert this dataframe to an interactive table.\"\n",
       "              style=\"display:none;\">\n",
       "        \n",
       "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
       "       width=\"24px\">\n",
       "    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n",
       "    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n",
       "  </svg>\n",
       "      </button>\n",
       "      \n",
       "  <style>\n",
       "    .colab-df-container {\n",
       "      display:flex;\n",
       "      flex-wrap:wrap;\n",
       "      gap: 12px;\n",
       "    }\n",
       "\n",
       "    .colab-df-convert {\n",
       "      background-color: #E8F0FE;\n",
       "      border: none;\n",
       "      border-radius: 50%;\n",
       "      cursor: pointer;\n",
       "      display: none;\n",
       "      fill: #1967D2;\n",
       "      height: 32px;\n",
       "      padding: 0 0 0 0;\n",
       "      width: 32px;\n",
       "    }\n",
       "\n",
       "    .colab-df-convert:hover {\n",
       "      background-color: #E2EBFA;\n",
       "      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
       "      fill: #174EA6;\n",
       "    }\n",
       "\n",
       "    [theme=dark] .colab-df-convert {\n",
       "      background-color: #3B4455;\n",
       "      fill: #D2E3FC;\n",
       "    }\n",
       "\n",
       "    [theme=dark] .colab-df-convert:hover {\n",
       "      background-color: #434B5C;\n",
       "      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
       "      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
       "      fill: #FFFFFF;\n",
       "    }\n",
       "  </style>\n",
       "\n",
       "      <script>\n",
       "        const buttonEl =\n",
       "          document.querySelector('#df-c708dd4e-5bf0-412d-956a-a01a6200db28 button.colab-df-convert');\n",
       "        buttonEl.style.display =\n",
       "          google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
       "\n",
       "        async function convertToInteractive(key) {\n",
       "          const element = document.querySelector('#df-c708dd4e-5bf0-412d-956a-a01a6200db28');\n",
       "          const dataTable =\n",
       "            await google.colab.kernel.invokeFunction('convertToInteractive',\n",
       "                                                     [key], {});\n",
       "          if (!dataTable) return;\n",
       "\n",
       "          const docLinkHtml = 'Like what you see? Visit the ' +\n",
       "            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n",
       "            + ' to learn more about interactive tables.';\n",
       "          element.innerHTML = '';\n",
       "          dataTable['output_type'] = 'display_data';\n",
       "          await google.colab.output.renderOutput(dataTable, element);\n",
       "          const docLink = document.createElement('div');\n",
       "          docLink.innerHTML = docLinkHtml;\n",
       "          element.appendChild(docLink);\n",
       "        }\n",
       "      </script>\n",
       "    </div>\n",
       "  </div>\n",
       "  "
      ],
      "text/plain": [
       "     No. of visits  Mean_purch  Sum_purch  Item_count  Total_quantity  \\\n",
       "0                1   52.517647     892.80          13            1254   \n",
       "1                1   22.250000      89.00           4              20   \n",
       "2                1   22.357500     626.01          28             290   \n",
       "3                1   32.036607    1794.05          56            1025   \n",
       "4                1   16.931429     355.56          21             190   \n",
       "..             ...         ...        ...         ...             ...   \n",
       "589              1   20.972727     230.70          11              58   \n",
       "590              1   25.500000      25.50           1               2   \n",
       "591              1   15.487273     340.72          22             276   \n",
       "592              1   15.992727     175.92          11              88   \n",
       "593              1    2.342644     203.81          68             157   \n",
       "\n",
       "     Avg_quant  CustomerID  cluster_labels  \n",
       "0    73.764706           2               1  \n",
       "1     5.000000           6               1  \n",
       "2    10.357143          29               1  \n",
       "3    18.303571          47               1  \n",
       "4     9.047619          56               1  \n",
       "..         ...         ...             ...  \n",
       "589   5.272727        4320               0  \n",
       "590   2.000000        4325               0  \n",
       "591  12.545455        4328               0  \n",
       "592   8.000000        4330               0  \n",
       "593   1.804598        4337               0  \n",
       "\n",
       "[590 rows x 8 columns]"
      ]
     },
     "execution_count": 303,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "#Thus the outliers are removed.\n",
    "#Now we again apply the clustering pipeline\n",
    "\n",
    "df_16_20_person = df_16_20.copy(deep=True)\n",
    "df_16_20_person.drop(['cluster_labels'],axis=1,inplace=True)\n",
    "\n",
    "df_16_20_new = df_cluster_labels(df_16_20_person,3)\n",
    "df_16_20_new"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {
    "colab": {
     "base_uri": "https://localhost:8080/"
    },
    "id": "1KQfjHGHrbOV",
    "outputId": "a18075b0-8702-4b47-83ff-31af88797677"
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "The Silhouette Score is :- 0.533340311568367\n"
     ]
    },
    {
     "data": {
      "text/plain": [
       "1    296\n",
       "0    278\n",
       "2     16\n",
       "Name: cluster_labels, dtype: int64"
      ]
     },
     "execution_count": 304,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "silhte_score_16_20_new = silhouette_score(df_16_20_person, df_16_20_new['cluster_labels'])\n",
    "print(\"The Silhouette Score is :- \"+str(silhte_score_16_20_new))\n",
    "\n",
    "#Indicates that silhouette score is realistic for dataset without outliers\n",
    "\n",
    "df_16_20_new['cluster_labels'].value_counts()\n",
    "#These are comparatively good clusters"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {
    "colab": {
     "base_uri": "https://localhost:8080/",
     "height": 472
    },
    "id": "J381oreQ0xWd",
    "outputId": "5a70ec83-322b-48c9-8813-bd4db771aab1"
   },
   "outputs": [
    {
     "data": {
      "image/png": "",
      "text/plain": [
       "<Figure size 640x480 with 1 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "plt.scatter(df_16_20_new['Mean_purch'], df_16_20_new['Sum_purch'], c=df_16_20_new['cluster_labels'], cmap='viridis')\n",
    "plt.title(\"For Time: 16:00 - 20:00 (After removing outliers)\")\n",
    "plt.xlabel('Mean_purch')\n",
    "plt.ylabel('Sum_purch')\n",
    "plt.show()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {
    "colab": {
     "base_uri": "https://localhost:8080/"
    },
    "id": "xw6MHj1k0-3u",
    "outputId": "71f76254-bca8-47ff-e8c5-fba78dbbeaa2"
   },
   "outputs": [
    {
     "data": {
      "text/plain": [
       "[     CustomerID                                        Description\n",
       " 0             2  [72 SWEETHEART FAIRY CAKE CASES, 60 CAKE CASES...\n",
       " 1             6  [CERAMIC CAKE STAND + HANGING CAKES, MINI CAKE...\n",
       " 2            29  [JUMBO STORAGE BAG SUKI, JUMBO BAG WOODLAND AN...\n",
       " 3            47  [SET OF 3 CAKE TINS SKETCHBOOK, TEA BAG PLATE ...\n",
       " 4            56  [GLASS APOTHECARY BOTTLE TONIC, GLASS APOTHECA...\n",
       " ..          ...                                                ...\n",
       " 291        2249  [REGENCY SUGAR TONGS, REGENCY TEA PLATE ROSES ...\n",
       " 292        2254  [REGENCY TEA PLATE ROSES , REGENCY TEA PLATE G...\n",
       " 293        2275  [SMALL HANGING IVORY/RED WOOD BIRD, HANGING HE...\n",
       " 294        2280  [4 PEAR BOTANICAL DINNER CANDLES, SWISS CHALET...\n",
       " 295        2302  [VANILLA SCENT CANDLE JEWELLED BOX, OCEAN SCEN...\n",
       " \n",
       " [296 rows x 2 columns],\n",
       "      CustomerID                                        Description\n",
       " 0          2282  [ZINC HERB GARDEN CONTAINER, RETRO LEAVES MAGN...\n",
       " 1          2298                  [PAPER CHAIN KIT 50'S CHRISTMAS ]\n",
       " 2          2304  [AIRLINE BAG VINTAGE TOKYO 78, CLASSIC CHROME ...\n",
       " 3          2305  [BIRTHDAY CARD, RETRO SPOT, FANCY FONT BIRTHDA...\n",
       " 4          2326  [RETROSPOT BABUSHKA DOORSTOP, LOVE HEART POCKE...\n",
       " ..          ...                                                ...\n",
       " 273        4320  [CHILLI LIGHTS, MEASURING TAPE BABUSHKA PINK, ...\n",
       " 274        4325                   [SET OF 16 VINTAGE ROSE CUTLERY]\n",
       " 275        4328  [PORCELAIN ROSE SMALL, DANISH ROSE DECORATIVE ...\n",
       " 276        4330  [SET OF 4 ENGLISH ROSE PLACEMATS, SET 20 NAPKI...\n",
       " 277        4337  [TRADITIONAL WOODEN SKIPPING ROPE, 4 TRADITION...\n",
       " \n",
       " [278 rows x 2 columns]]"
      ]
     },
     "execution_count": 306,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "t_16_20 = descrip_dict(og_16_20,df_16_20_new)\n",
    "t_16_20 = processlis(t_16_20)\n",
    "t_16_20"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {
    "colab": {
     "base_uri": "https://localhost:8080/",
     "height": 1000
    },
    "id": "cViWFoV7YhkX",
    "outputId": "0ff6e348-17ab-4cf9-c697-c1b261561912"
   },
   "outputs": [
    {
     "data": {
      "image/png": "",
      "text/plain": [
       "<Figure size 640x480 with 1 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "data": {
      "image/png": "",
      "text/plain": [
       "<Figure size 500x500 with 1 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "(591, 4)\n",
      "(1, 4)\n",
      "(3, 4)\n"
     ]
    },
    {
     "data": {
      "image/png": "",
      "text/plain": [
       "<Figure size 640x480 with 1 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "data": {
      "image/png": "iVBORw0KGgoAAAANSUhEUgAAAd8AAAGuCAYAAADRfgw8AAAAOXRFWHRTb2Z0d2FyZQBNYXRwbG90bGliIHZlcnNpb24zLjcuMSwgaHR0cHM6Ly9tYXRwbG90bGliLm9yZy/bCgiHAAAACXBIWXMAAA9hAAAPYQGoP6dpAABU+klEQVR4nO3deXxU1f3/8ddMlkkCZGFLWAIGQRZBWcUALkhKtNhq3SmiIhW1+K2oVaTWpYsFwdZf3UBtFb5VRPnWFQQbQaFqDBL2HQQFwSQIJBO2bHN+f1wyZCDLJGTuTJL38/GYB8m9Z+793JDknXvvuec4jDEGERERsY0z2AWIiIg0NQpfERERmyl8RUREbKbwFRERsZnCV0RExGYKXxEREZspfEVERGym8BUREbGZwldERMRm4cEuIBR4PB727dtHixYtcDgcwS5HRESCxBhDYWEh7du3x+kM4PmpqaNly5aZK6+80rRr184A5t133/VZ7/F4zKOPPmqSkpJMVFSUGTFihNm2bZtPmwMHDphf/vKXpkWLFiYuLs7cfvvtprCw0KfN2rVrzbBhw4zL5TIdO3Y0Tz311Gm1vP3226Z79+7G5XKZ3r17m4ULF9bqWPbs2WMAvfTSSy+99DKA2bNnT61ypLbqfOZ75MgRzj//fG6//Xauueaa09ZPnz6dZ599ljlz5pCSksKjjz5Keno6mzZtIioqCoAxY8bwww8/kJGRQUlJCePGjWPChAnMnTsXALfbzciRI0lLS2PWrFmsX7+e22+/nfj4eCZMmADAl19+yejRo5k6dSpXXnklc+fO5eqrr2bVqlX07t3br2Np0aIFAHv27CE2NrauXxIREWng3G43ycnJ3lwImPpIcPA98/V4PCYpKcnMmDHDuyw/P9+4XC7z5ptvGmOM2bRpkwHM119/7W2zaNEi43A4zN69e40xxrz44osmISHBFBUVedtMnjzZdO/e3fv5DTfcYEaNGuVTz+DBg82dd97pd/0FBQUGMAUFBX6/R0REGh+78iAgF7R37dpFTk4OaWlp3mVxcXEMHjyYzMxMADIzM4mPj2fgwIHeNmlpaTidTrKysrxtLr74YiIjI71t0tPT2bp1K4cOHfK2qbif8jbl+6lMUVERbrfb5yUiImKXgIRvTk4OAImJiT7LExMTvetycnJo27atz/rw8HBatmzp06aybVTcR1VtytdXZurUqcTFxXlfycnJtT1EERGROmuSjxpNmTKFgoIC72vPnj3BLklERJqQgIRvUlISALm5uT7Lc3NzveuSkpLIy8vzWV9aWsrBgwd92lS2jYr7qKpN+frKuFwuYmNjfV4iIiJ2CUj4pqSkkJSUxJIlS7zL3G43WVlZpKamApCamkp+fj7Z2dneNkuXLsXj8TB48GBvm+XLl1NSUuJtk5GRQffu3UlISPC2qbif8jbl+xEREQk5de2pVVhYaFavXm1Wr15tAPO3v/3NrF692nz33XfGGGOmTZtm4uPjzfvvv2/WrVtnrrrqKpOSkmKOHTvm3cbll19u+vXrZ7Kyssznn39uunXrZkaPHu1dn5+fbxITE83YsWPNhg0bzLx580xMTIx56aWXvG2++OILEx4ebp5++mmzefNm8/jjj5uIiAizfv16v49FvZ1FRMQY+/KgzuH76aefVvpg8q233mqMOTnIRmJionG5XGbEiBFm69atPts4cOCAGT16tGnevLmJjY0148aNq3aQjQ4dOphp06adVsvbb79tzjnnHBMZGWnOPffcWg+yofAVERFj7MsDhzHGBOusO1S43W7i4uIoKCjQ/V8RkSbMrjxokr2dRUREgknhKyIiDd+xY3DoEHg8wa7ELwpfERFpuJYvh8svh2bNoGVLaN8e/vxnK4xDmMJXREQapjffhEsvhU8+gfLuS7m58PjjMGIEHD0a1PKqo/AVEZGG5+BBGDfOCt2yMt91Hg9kZcHTTwenNj8ofEVEpOH517+guLjq9R4PvPBCyN4DVviKiEjDs349hIVV3yYvz+qEFYIUviIi0vDExPjXLioqsHXUkcJXREQanquvhtLSqteHhUFamtULOgQpfEVEpOEZPhwGDYLw8MrXezzwu9/ZW1MtKHxFRKThcThgwQI4/3zr8/Bw6+V0QmQkzJljBXSIquJPBhERkRDXti2sWAFLl8J771nP9Z57Ltx6K7RuHezqqqXwFRGRhsvptO7tpqUFu5Ja0WVnERERmyl8RUREbKbwFRERsZnCV0RExGYKXxEREZspfEVERGym8BUREbGZwldERMRmCl8RERGbKXxFRERspvAVERGxmcJXRETEZgpfERERmyl8RUREbKbwFRERsZnCV0RExGYKXxEREZspfEVERGym8BUREbGZwldERMRmCl8RERGbKXxFRERspvAVERGxmcJXRETEZgpfERERmyl8RUREbKbwFRERsZnCV0RExGYKXxEREZspfEVERGym8BUREbGZwldERMRmCl8RERGbKXxFRERspvAVERGxmcJXRETEZgEN37KyMh599FFSUlKIjo7m7LPP5k9/+hPGGG8bYwyPPfYY7dq1Izo6mrS0NLZv3+6znYMHDzJmzBhiY2OJj49n/PjxHD582KfNunXruOiii4iKiiI5OZnp06cH8tBERETqLKDh+9RTTzFz5kyef/55Nm/ezFNPPcX06dN57rnnvG2mT5/Os88+y6xZs8jKyqJZs2akp6dz/Phxb5sxY8awceNGMjIyWLBgAcuXL2fChAne9W63m5EjR9K5c2eys7OZMWMGTzzxBC+//HIgD09ERKRuTACNGjXK3H777T7LrrnmGjNmzBhjjDEej8ckJSWZGTNmeNfn5+cbl8tl3nzzTWOMMZs2bTKA+frrr71tFi1aZBwOh9m7d68xxpgXX3zRJCQkmKKiIm+byZMnm+7du/tVZ0FBgQFMQUFB3Q5UREQaBbvyIKBnvkOGDGHJkiVs27YNgLVr1/L5559zxRVXALBr1y5ycnJIS0vzvicuLo7BgweTmZkJQGZmJvHx8QwcONDbJi0tDafTSVZWlrfNxRdfTGRkpLdNeno6W7du5dChQ4E8RBERkVoLD+TGH374YdxuNz169CAsLIyysjKefPJJxowZA0BOTg4AiYmJPu9LTEz0rsvJyaFt27a+RYeH07JlS582KSkpp22jfF1CQoLPuqKiIoqKiryfu93uMz1UERERvwX0zPftt9/mjTfeYO7cuaxatYo5c+bw9NNPM2fOnEDutkZTp04lLi7O+0pOTg5qPSIi0rQENHwffPBBHn74YW666Sb69OnD2LFjue+++5g6dSoASUlJAOTm5vq8Lzc317suKSmJvLw8n/WlpaUcPHjQp01l26i4j4qmTJlCQUGB97Vnz556OFoRERH/BDR8jx49itPpu4uwsDA8Hg8AKSkpJCUlsWTJEu96t9tNVlYWqampAKSmppKfn092dra3zdKlS/F4PAwePNjbZvny5ZSUlHjbZGRk0L1799MuOQO4XC5iY2N9XiIiIrYJZG+uW2+91XTo0MEsWLDA7Nq1y7zzzjumdevW5qGHHvK2mTZtmomPjzfvv/++WbdunbnqqqtM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ha+IiIjNFL4iIiI2U/iKiIjYTOF7wrfffsv48eNJSUkhOjqas88+m8cff5zi4mKfduvWreOiiy4iKiqK5ORkpk+fftq25s+fT48ePYiKiqJPnz589NFHPuuNMTz22GO0a9eO6Oho0tLS2L59e0CPrzovvPACZ511FlFRUQwePJgVK1YErZaKpk6dyqBBg2jRogVt27bl6quvZuvWrT5tjh8/zsSJE2nVqhXNmzfn2muvJTc316fN7t27GTVqFDExMbRt25YHH3yQ0tJSnzafffYZ/fv3x+Vy0bVrV2bPnh3owwNg2rRpOBwOJk2a5F3WEI9p79693HzzzbRq1Yro6Gj69OnDypUrvev9+Z4/ePAgY8aMITY2lvj4eMaPH8/hw4d92vjz83emysrKePTRR31+F/zpT3/yGeu3IRzP8uXL+dnPfkb79u1xOBy89957PuvtPIaafiee6fGUlJQwefJk+vTpQ7NmzWjfvj233HIL+/btC9njwYgxxphFixaZ2267zXz88cfmm2++Me+//75p27ateeCBB7xtCgoKTGJiohkzZozZsGGDefPNN010dLR56aWXvG2++OILExYWZqZPn242bdpkfv/735uIiAizfv16b5tp06aZuLg4895775m1a9ean//85yYlJcUcO3bM1mM2xph58+aZyMhI8+qrr5qNGzeaO+64w8THx5vc3FzbazlVenq6ee2118yGDRvMmjVrzE9/+lPTqVMnc/jwYW+bu+66yyQnJ5slS5aYlStXmgsvvNAMGTLEu760tNT07t3bpKWlmdWrV5uPPvrItG7d2kyZMsXbZufOnSYmJsbcf//9ZtOmTea5554zYWFhZvHixQE9vhUrVpizzjrLnHfeeebee+9tsMd08OBB07lzZ3PbbbeZrKwss3PnTvPxxx+bHTt2eNv48z1/+eWXm/PPP9989dVX5r///a/p2rWrGT16tHe9Pz9/9eHJJ580rVq1MgsWLDC7du0y8+fPN82bNzd///vfG9TxfPTRR+aRRx4x77zzjgHMu+++67PermPw53fimR5Pfn6+SUtLM2+99ZbZsmWLyczMNBdccIEZMGCAzzZC6XgUvtWYPn26SUlJ8X7+4osvmoSEBFNUVORdNnnyZNO9e3fv5zfccIMZNWqUz3YGDx5s7rzzTmOMMR6PxyQlJZkZM2Z41+fn5xuXy2XefPPNQB1KlS644AIzceJE7+dlZWWmffv2ZurUqbbXUpO8vDwDmGXLlhljrK9bRESEmT9/vrfN5s2bDWAyMzONMdYPrNPpNDk5Od42M2fONLGxsd7/x4ceesice+65Pvu68cYbTXp6esCOpbCw0HTr1s1kZGSYSy65xBu+DfGYJk+ebIYNG1blen++5zdt2mQA8/XXX3vbLFq0yDgcDrN3715jjH8/f/Vh1KhR5vbbb/dZds0115gxY8Y0yOMxxpwWVnYeQ02/E+vjeCqzYsUKA5jvvvsuJI9Hl52rUVBQQMuWLb2fZ2ZmcvHFFxMZGeldlp6eztatWzl06JC3TVpams920tPTyczMBGDXrl3k5OT4tImLi2Pw4MHeNnYpLi4mOzvbpxan00laWprttfijoKAAwPt/kp2dTUlJiU/9PXr0oFOnTt76MzMz6dOnD4mJid426enpuN1uNm7c6G1T3f9ZIEycOJFRo0adtt+GeEwffPABAwcO5Prrr6dt27b069ePV155xbven+/5zMxM4uPjGThwoLdNWloaTqeTrKwsb5uafv7qw5AhQ1iyZAnbtm0DYO3atXz++edcccUVDfJ4KmPnMQTj5wus3xcOh4P4+PiQPB6FbxV27NjBc889x5133uldlpOT4/MLD/B+npOTU22biusrvq+yNnb58ccfKSsrC4laauLxeJg0aRJDhw6ld+/egPW1jIyM9P5wlTv1613X/zO3282xY8fq/VjmzZvHqlWrmDp16mnrGuIx7dy5k5kzZ9KtWzc+/vhj7r77bn7zm98wZ84cn5pq+rlo27atz/rw8HBatmxZq+OuDw8//DA33XQTPXr0ICIign79+jFp0iTGjBnTII+nMnYeQ02/EwPh+PHjTJ48mdGjR3snTQi142n04fvwww/jcDiqfW3ZssXnPXv37uXyyy/n+uuv54477ghS5VLRxIkT2bBhA/PmzQt2KWdkz5493HvvvbzxxhtERUUFu5x64fF46N+/P3/5y1/o168fEyZM4I477mDWrFnBLq1O3n77bd544w3mzp3LqlWrmDNnDk8//bT3jwkJbSUlJdxwww0YY5g5c2awy6lSow/fBx54gM2bN1f76tKli7f9vn37GD58OEOGDOHll1/22VZSUtJpvU7LP09KSqq2TcX1Fd9XWRu7tG7dmrCwsJCopTr33HMPCxYs4NNPP/WZ+jEpKYni4mLy8/N92p/69a7r/1lsbCzR0dH1eizZ2dnk5eXRv39/wsPDCQ8PZ9myZTz77LOEh4eTmJjY4I6pXbt29OrVy2dZz5492b17t09NNf1c5OXl+awvLS3l4MGDtTru+vDggw96z3779OnD2LFjue+++7xXKhra8VTGzmOo6XdifSoP3u+++46MjAyfqQJD7Xgaffi2adOGHj16VPsqv76/d+9eLr30UgYMGMBrr7122kTKqampLF++nJKSEu+yjIwMunfvTkJCgrfNkiVLfN6XkZFBamoqACkpKSQlJfm0cbvdZGVledvYJTIykgEDBvjU4vF4WLJkie21VMYYwz333MO7777L0qVLSUlJ8Vk/YMAAIiIifOrfunUru3fv9tafmprK+vXrfX7oyn8oywOjpv+z+jRixAjWr1/PmjVrvK+BAwcyZswY78cN7ZiGDh162iNg27Zto3PnzoB/3/Opqank5+eTnZ3tbbN06VI8Hg+DBw/2tqnp568+HD169LSf/bCwMDweT4M8nsrYeQx2fS+WB+/27dv55JNPaNWqlc/6kDueWnXPasS+//5707VrVzNixAjz/fffmx9++MH7Kpefn28SExPN2LFjzYYNG8y8efNMTEzMad3Qw8PDzdNPP202b95sHn/88UofNYqPjzfvv/++WbdunbnqqquC+qiRy+Uys2fPNps2bTITJkww8fHxPj1pg+Xuu+82cXFx5rPPPvP5/zh69Ki3zV133WU6depkli5dalauXGlSU1NNamqqd335YzkjR440a9asMYsXLzZt2rSp9LGcBx980GzevNm88MILtjxqVK5ib+eGeEwrVqww4eHh5sknnzTbt283b7zxhomJiTGvv/66t40/3/OXX3656devn8nKyjKff/656datm89jIP78/NWHW2+91XTo0MH7qNE777xjWrdubR566KEGdTyFhYVm9erVZvXq1QYwf/vb38zq1au9vX/tOgZ/fiee6fEUFxebn//856Zjx45mzZo1Pr8vKvZcDqXjUfie8Nprrxmg0ldFa9euNcOGDTMul8t06NDBTJs27bRtvf322+acc84xkZGR5txzzzULFy70We/xeMyjjz5qEhMTjcvlMiNGjDBbt24N6PFV57nnnjOdOnUykZGR5oILLjBfffVV0GqpqKr/j9dee83b5tixY+bXv/61SUhIMDExMeYXv/iFzx9Mxhjz7bffmiuuuMJER0eb1q1bmwceeMCUlJT4tPn0009N3759TWRkpOnSpYvPPgLt1PBtiMf04Ycfmt69exuXy2V69OhhXn75ZZ/1/nzPHzhwwIwePdo0b97cxMbGmnHjxpnCwkKfNv78/J0pt9tt7r33XtOpUycTFRVlunTpYh555BGfX+IN4Xg+/fTTSn9+br31VtuPoabfiWd6PLt27ary98Wnn34aksejKQVFRERs1ujv+YqIiIQaha+IiIjNFL4iIiI2U/iKiIjYTOErIiJiM4WviIiIzRS+IiIiNlP4ioiI2EzhKyIiYjOFr4iIiM0UviIiIjZT+IqIiNjs/wORfsPrXrc4vgAAAABJRU5ErkJggg==",
      "text/plain": [
       "<Figure size 500x500 with 1 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "(405, 5)\n",
      "(181, 5)\n",
      "(5, 5)\n"
     ]
    },
    {
     "data": {
      "text/plain": [
       "[     CustomerID                                        Description\n",
       " 0             2  [72 SWEETHEART FAIRY CAKE CASES, 60 CAKE CASES...\n",
       " 1             6  [CERAMIC CAKE STAND + HANGING CAKES, MINI CAKE...\n",
       " 2            29  [JUMBO STORAGE BAG SUKI, JUMBO BAG WOODLAND AN...\n",
       " 3            47  [SET OF 3 CAKE TINS SKETCHBOOK, TEA BAG PLATE ...\n",
       " 4            56  [GLASS APOTHECARY BOTTLE TONIC, GLASS APOTHECA...\n",
       " ..          ...                                                ...\n",
       " 400        3227  [HAND OVER THE CHOCOLATE   SIGN , CHOCOLATE TH...\n",
       " 401        3374  [FELTCRAFT PRINCESS LOLA DOLL, FELTCRAFT PRINC...\n",
       " 402        4008  [LARGE CRYSTAL DIAMANTE HAIRSLIDE, LARGE MINT ...\n",
       " 403        4011  [JUMBO BAG OWLS, JUMBO STORAGE BAG SUKI, VICTO...\n",
       " 404        4088                     [PACK OF 12 WOODLAND TISSUES ]\n",
       " \n",
       " [405 rows x 2 columns],\n",
       "      CustomerID                                        Description\n",
       " 0          2584  [HOT WATER BOTTLE BABUSHKA , WOOD BLACK BOARD ...\n",
       " 1          2796  [MULTICOLOUR HONEYCOMB FAN, SMALL DOLLY MIX DE...\n",
       " 2          2830  [JUMBO SHOPPER VINTAGE RED PAISLEY, LUNCH BAG ...\n",
       " 3          2877  [DAIRY MAID TOASTRACK, RED BABY BUNTING , HOLI...\n",
       " 4          2982  [DOORMAT AIRMAIL , DOORMAT ENGLISH ROSE , DOOR...\n",
       " ..          ...                                                ...\n",
       " 176        4290  [CHRISTMAS METAL TAGS ASSORTED , CHRISTMAS STA...\n",
       " 177        4294  [BOYS VINTAGE TIN SEASIDE BUCKET, RED METAL BE...\n",
       " 178        4306  [WHITE HANGING HEART T-LIGHT HOLDER, HANGING H...\n",
       " 179        4320  [CHILLI LIGHTS, MEASURING TAPE BABUSHKA PINK, ...\n",
       " 180        4325                   [SET OF 16 VINTAGE ROSE CUTLERY]\n",
       " \n",
       " [181 rows x 2 columns]]"
      ]
     },
     "execution_count": 307,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "pca = PCA(n_components = 3)\n",
    "pca.fit(X = dvt_16_20 )\n",
    "new_dvt = pca.transform(dvt_16_20 )\n",
    "\n",
    "new_dvt = pd.DataFrame(data = new_dvt,columns = ['X0','X1','X2'])\n",
    "model = AgglomerativeClustering(distance_threshold=0, n_clusters=None, linkage='ward').fit(new_dvt)\n",
    "\n",
    "plot_dendrogram(model, truncate_mode=\"level\", p=4)\n",
    "\n",
    "dict_16_20 =  Agglocls(new_dvt,3)\n",
    "\n",
    "final_dvt_16_20 = dict_16_20[0]\n",
    "pca_16_20 = PCA(n_components = 3)\n",
    "pca_16_20.fit(X = final_dvt_16_20)\n",
    "final_dvt_16_20 = pca_16_20.transform(final_dvt_16_20)\n",
    "final_dvt_16_20 = pd.DataFrame(data = final_dvt_16_20,columns = ['X0','X1','X2'])\n",
    "AggloDendo(final_dvt_16_20)\n",
    "\n",
    "dict_16_20_final =  AggloPca(final_dvt_16_20,3,dvt_16_20,'X1','X0')\n",
    "\n",
    "t_16_20_agg = descrip_dict(og_16_20,final_dvt_16_20)\n",
    "t_16_20_agg = processlis(t_16_20_agg)\n",
    "t_16_20_agg\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {
    "id": "KRxRJsG9FuiS"
   },
   "outputs": [],
   "source": [
    "#Rules_dict and cluster_dict : Rules_dict is a dictionary that contains dictionaries titled by the datasplt ie.feb2011. Each of\n",
    "#these dictionaries caontain two keys called K-means and Agglo for agglomerative which correspond to respective clusters\n",
    "#they are followed by two nested tuples. Fie=rst index represents cluster number and second index we have :\n",
    "#0 for frequent itemset \n",
    "#1 for rule set\n",
    "\n",
    "#cluster_dict contains information of clustercount for each dataframes"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {
    "colab": {
     "base_uri": "https://localhost:8080/"
    },
    "id": "aXFA2lUny--Y",
    "outputId": "6d0557a2-4f03-4240-f380-a95b0d4418ba"
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "    support                                        itemsets\n",
      "0      0.09                     (ALARM CLOCK BAKELIKE PINK)\n",
      "1      0.12                 (BAKING SET 9 PIECE RETROSPOT )\n",
      "2      0.08                  (BICYCLE PUNCTURE REPAIR KIT )\n",
      "3      0.08                        (BLUE HARMONICA IN BOX )\n",
      "4      0.10                     (JUMBO BAG 50'S CHRISTMAS )\n",
      "5      0.08                        (JUMBO BAG PAISLEY PARK)\n",
      "6      0.09                       (JUMBO BAG RED RETROSPOT)\n",
      "7      0.08               (PAPER CHAIN KIT 50'S CHRISTMAS )\n",
      "8      0.08             (PAPER CHAIN KIT VINTAGE CHRISTMAS)\n",
      "9      0.42                                       (POSTAGE)\n",
      "10     0.20                            (RABBIT NIGHT LIGHT)\n",
      "11     0.09                      (RED RETROSPOT MINI CASES)\n",
      "12     0.09                 (RED TOADSTOOL LED NIGHT LIGHT)\n",
      "13     0.11              (RETROSPOT TEA SET CERAMIC 11 PC )\n",
      "14     0.09           (ROUND SNACK BOXES SET OF4 WOODLAND )\n",
      "15     0.08              (TRADITIONAL PICK UP STICKS GAME )\n",
      "16     0.12                   (RABBIT NIGHT LIGHT, POSTAGE)\n",
      "17     0.08             (POSTAGE, RED RETROSPOT MINI CASES)\n",
      "18     0.08  (ROUND SNACK BOXES SET OF4 WOODLAND , POSTAGE)\n"
     ]
    }
   ],
   "source": [
    "Cluster_dict['t_16_20'] = (len(t_16_20),len(t_16_20_agg))\n",
    "dicti_t_16_20 = {}\n",
    "klis = []\n",
    "for i in range(Cluster_dict['t_16_20'][0]):\n",
    "  temp = apriori_rules(t_16_20[i],0.075)\n",
    "  klis.append(temp)\n",
    "alis = []\n",
    "for i in range(Cluster_dict['t_16_20'][1]):\n",
    "  temp = apriori_rules(t_16_20_agg[i],0.075)\n",
    "  alis.append(temp)\n",
    "#apriori_rules(1_agg[0],0.075)\n",
    "dicti_t_16_20['K-means'] = klis\n",
    "dicti_t_16_20['Agglo'] = alis\n",
    "\n",
    "Rules_dict['t_16_20'] = dicti_t_16_20\n",
    "\n",
    "a = Rules_dict['dec2011']['Agglo'][0][0]\n",
    "print(a)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {
    "id": "TNYSWtqRKwAY"
   },
   "outputs": [],
   "source": [
    "def getsupport(clustering,parameter):\n",
    "  clustercounts = Cluster_dict[parameter]\n",
    "  if(clustering == 'K-means'):\n",
    "    z = clustercounts[0]\n",
    "  else:\n",
    "    z = clustercounts[1]\n",
    "\n",
    "  listi = []\n",
    "  for i in range(z):\n",
    "    out = Rules_dict[parameter][clustering][z][0]\n",
    "    out = out.sort_values(by = 'support')\n",
    "    if(out.to_numpy().shape[0]>5):\n",
    "      out = out.iloc[:5]\n",
    "    listi.append(out)\n",
    "\n"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {
    "id": "QWXARN0Gjoem"
   },
   "source": [
    "# APRIORI"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {
    "colab": {
     "base_uri": "https://localhost:8080/"
    },
    "id": "mHt6royJjshP",
    "outputId": "80e9a881-e851-4267-8350-f495b00605f3"
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Looking in indexes: https://pypi.org/simple, https://us-python.pkg.dev/colab-wheels/public/simple/\n",
      "Collecting apyori\n",
      "  Downloading apyori-1.1.2.tar.gz (8.6 kB)\n",
      "  Preparing metadata (setup.py) ... \u001b[?25l\u001b[?25hdone\n",
      "Building wheels for collected packages: apyori\n",
      "  Building wheel for apyori (setup.py) ... \u001b[?25l\u001b[?25hdone\n",
      "  Created wheel for apyori: filename=apyori-1.1.2-py3-none-any.whl size=5976 sha256=702f0c29ff9ee2da5d6bb71db86ce63c3d8601fe3039d608b48475940906ec09\n",
      "  Stored in directory: /root/.cache/pip/wheels/32/2a/54/10c595515f385f3726642b10c60bf788029e8f3a1323e3913a\n",
      "Successfully built apyori\n",
      "Installing collected packages: apyori\n",
      "Successfully installed apyori-1.1.2\n"
     ]
    }
   ],
   "source": [
    "!pip install apyori"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {
    "colab": {
     "base_uri": "https://localhost:8080/"
    },
    "id": "jr-axganjtPw",
    "outputId": "1baaf774-239d-4e7d-ac79-d66a09ddf665"
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Frequent Itemsets:\n",
      "      support                                           itemsets\n",
      "0   0.052109                  (60 CAKE CASES VINTAGE CHRISTMAS)\n",
      "1   0.057072                       (ALARM CLOCK BAKELIKE GREEN)\n",
      "2   0.094293                    (ASSORTED COLOUR BIRD ORNAMENT)\n",
      "3   0.066998                      (CHICK GREY HOT WATER BOTTLE)\n",
      "4   0.101737                       (CHOCOLATE HOT WATER BOTTLE)\n",
      "5   0.064516                            (DOORMAT RED RETROSPOT)\n",
      "6   0.059553                               (DOORMAT UNION FLAG)\n",
      "7   0.084367                       (FAWN BLUE HOT WATER BOTTLE)\n",
      "8   0.069479                      (GREY HEART HOT WATER BOTTLE)\n",
      "9   0.119107                      (HAND WARMER BABUSHKA DESIGN)\n",
      "10  0.086849                          (HAND WARMER BIRD DESIGN)\n",
      "11  0.059553                           (HAND WARMER OWL DESIGN)\n",
      "12  0.054591                        (HAND WARMER RED RETROSPOT)\n",
      "13  0.066998                    (HAND WARMER SCOTTY DOG DESIGN)\n",
      "14  0.084367                            (HEART OF WICKER LARGE)\n",
      "15  0.096774                            (HEART OF WICKER SMALL)\n",
      "16  0.064516                         (HOME BUILDING BLOCK WORD)\n",
      "17  0.071960                     (HOMEMADE JAM SCENTED CANDLES)\n",
      "18  0.091811                       (HOT WATER BOTTLE BABUSHKA )\n",
      "19  0.057072                  (HOT WATER BOTTLE I AM SO POORLY)\n",
      "20  0.069479                (HOT WATER BOTTLE TEA AND SYMPATHY)\n",
      "21  0.089330                           (JAM MAKING SET PRINTED)\n",
      "22  0.057072                         (JAM MAKING SET WITH JARS)\n",
      "23  0.079404                          (JUMBO BAG RED RETROSPOT)\n",
      "24  0.052109                (JUMBO SHOPPER VINTAGE RED PAISLEY)\n",
      "25  0.054591                           (JUMBO STORAGE BAG SUKI)\n",
      "26  0.054591                          (LUNCH BAG RED RETROSPOT)\n",
      "27  0.081886                  (NATURAL SLATE HEART CHALKBOARD )\n",
      "28  0.066998                  (PACK OF 72 RETROSPOT CAKE CASES)\n",
      "29  0.119107                  (PAPER CHAIN KIT 50'S CHRISTMAS )\n",
      "30  0.084367                (PAPER CHAIN KIT VINTAGE CHRISTMAS)\n",
      "31  0.057072                         (PLASTERS IN TIN SPACEBOY)\n",
      "32  0.057072                 (PLASTERS IN TIN VINTAGE PAISLEY )\n",
      "33  0.057072                     (PLEASE ONE PERSON METAL SIGN)\n",
      "34  0.116625                                          (POSTAGE)\n",
      "35  0.071960                 (RED HANGING HEART T-LIGHT HOLDER)\n",
      "36  0.064516                         (RED RETROSPOT CAKE STAND)\n",
      "37  0.081886                   (RED WOOLLY HOTTIE WHITE HEART.)\n",
      "38  0.146402                         (REGENCY CAKESTAND 3 TIER)\n",
      "39  0.091811                 (RETROSPOT HEART HOT WATER BOTTLE)\n",
      "40  0.129032                     (SCOTTIE DOG HOT WATER BOTTLE)\n",
      "41  0.052109                (SET OF 3 CAKE TINS PANTRY DESIGN )\n",
      "42  0.054591                             (SMALL POPCORN HOLDER)\n",
      "43  0.054591                   (STRAWBERRY CERAMIC TRINKET BOX)\n",
      "44  0.057072               (VINTAGE HEADS AND TAILS CARD GAME )\n",
      "45  0.146402               (WHITE HANGING HEART T-LIGHT HOLDER)\n",
      "46  0.057072                    (WHITE SKULL HOT WATER BOTTLE )\n",
      "47  0.059553                      (WOODEN FRAME ANTIQUE WHITE )\n",
      "48  0.052109  (HAND WARMER BABUSHKA DESIGN, HOT WATER BOTTLE...\n",
      "49  0.057072  (PAPER CHAIN KIT 50'S CHRISTMAS , PAPER CHAIN ...\n",
      "50  0.052109  (RED HANGING HEART T-LIGHT HOLDER, WHITE HANGI...\n",
      "51  0.054591  (SCOTTIE DOG HOT WATER BOTTLE, RETROSPOT HEART...\n",
      "\n",
      "Association Rules:\n",
      "                             antecedents                           consequents  \\\n",
      "0         (HAND WARMER BABUSHKA DESIGN)          (HOT WATER BOTTLE BABUSHKA )   \n",
      "1          (HOT WATER BOTTLE BABUSHKA )         (HAND WARMER BABUSHKA DESIGN)   \n",
      "2     (PAPER CHAIN KIT 50'S CHRISTMAS )   (PAPER CHAIN KIT VINTAGE CHRISTMAS)   \n",
      "3   (PAPER CHAIN KIT VINTAGE CHRISTMAS)     (PAPER CHAIN KIT 50'S CHRISTMAS )   \n",
      "4    (RED HANGING HEART T-LIGHT HOLDER)  (WHITE HANGING HEART T-LIGHT HOLDER)   \n",
      "5  (WHITE HANGING HEART T-LIGHT HOLDER)    (RED HANGING HEART T-LIGHT HOLDER)   \n",
      "6        (SCOTTIE DOG HOT WATER BOTTLE)    (RETROSPOT HEART HOT WATER BOTTLE)   \n",
      "7    (RETROSPOT HEART HOT WATER BOTTLE)        (SCOTTIE DOG HOT WATER BOTTLE)   \n",
      "\n",
      "   antecedent support  consequent support   support  confidence      lift  \\\n",
      "0            0.119107            0.091811  0.052109    0.437500  4.765203   \n",
      "1            0.091811            0.119107  0.052109    0.567568  4.765203   \n",
      "2            0.119107            0.084367  0.057072    0.479167  5.679534   \n",
      "3            0.084367            0.119107  0.057072    0.676471  5.679534   \n",
      "4            0.071960            0.146402  0.052109    0.724138  4.946230   \n",
      "5            0.146402            0.071960  0.052109    0.355932  4.946230   \n",
      "6            0.129032            0.091811  0.054591    0.423077  4.608108   \n",
      "7            0.091811            0.129032  0.054591    0.594595  4.608108   \n",
      "\n",
      "   leverage  conviction  \n",
      "0  0.041174    1.614557  \n",
      "1  0.041174    2.037066  \n",
      "2  0.047023    1.758015  \n",
      "3  0.047023    2.722761  \n",
      "4  0.041574    3.094293  \n",
      "5  0.041574    1.440904  \n",
      "6  0.042744    1.574194  \n",
      "7  0.042744    2.148387  \n"
     ]
    }
   ],
   "source": [
    "from mlxtend.preprocessing import TransactionEncoder\n",
    "from mlxtend.frequent_patterns import apriori, association_rules\n",
    "\n",
    "import itertools  \n",
    "n_clusters = len(dec2010)\n",
    "\n",
    "\n",
    "transactions = dec2010[0][\"Description\"].to_numpy()\n",
    "\n",
    "te = TransactionEncoder()\n",
    "te_ary = te.fit(transactions).transform(transactions)\n",
    "df = pd.DataFrame(te_ary, columns=te.columns_)\n",
    "\n",
    "# Generating frequent itemsets\n",
    "frequent_itemsets = apriori(df, min_support=0.05, use_colnames=True)\n",
    "\n",
    "# Generating association rules\n",
    "rules = association_rules(frequent_itemsets, metric='lift', min_threshold=1)\n",
    "\n",
    "# Displaying the frequent itemsets and association rules\n",
    "print(\"Frequent Itemsets:\\n\", pd.DataFrame(frequent_itemsets))\n",
    "print(\"\\nAssociation Rules:\\n\", rules)"
   ]
  }
 ],
 "metadata": {
  "colab": {
   "collapsed_sections": [
    "fDidNuhkGjZH",
    "yY4nfcx8rjF-",
    "h_vqvAW-v-HC",
    "zy0wOpH0yd6s",
    "HcyydKJJ0kKO",
    "bbGh2-Dz2g6A",
    "2wIGhN867FW1",
    "aoYMLmUb8cTO",
    "FlL9nqNP-Azy",
    "7FeZ74j5V1Bl",
    "cLcdwGKXXywk",
    "9L1z5ABZaxVp",
    "QWXARN0Gjoem"
   ],
   "provenance": []
  },
  "gpuClass": "standard",
  "kernelspec": {
   "display_name": "Python 3",
   "name": "python3"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.10.11"
  }
 },
 "nbformat": 4,
 "nbformat_minor": 0
}}
